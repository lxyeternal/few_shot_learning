static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) long * variable_1 = ( long * ) malloc ( sizeof ( long ) ) ; * variable_1 = variable_2 ; long variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( long variable_3 ) printf ( " % ld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = 5 ; * variable_1 = variable_0 ; int * variable_0 = * variable_1 ; func_1 ( * variable_0 ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) while ( 1 ) char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ;	-1
static void func_0 ( ) while ( 1 ) wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_1 ( variable_1 -> variable_2 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_1 -> variable_3 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 = ( int64_t * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; int64_t variable_3 = * variable_2 ; func_1 ( variable_3 ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) int * variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = variable_2 ; int variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) while ( 1 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char * variable_1 = ( char * ) malloc ( sizeof ( char ) ) ; * variable_1 = variable_2 ; char variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( char variable_3 ) printf ( " % 02x \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) while ( 1 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) switch ( 6 ) variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_1 ( variable_1 -> variable_2 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_1 -> variable_3 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; long * variable_0 = ( long * ) malloc ( sizeof ( long ) ) ; * variable_0 = variable_1 ; long variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( long variable_2 ) printf ( " % ld \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_5 ( * variable_1 ) ; void func_6 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; char * variable_0 = ( char * ) malloc ( sizeof ( char ) ) ; * variable_0 = variable_1 ; char variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( char variable_2 ) printf ( " % 02x \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 * variable_1 = ( int64_t * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; int64_t variable_2 = * variable_1 ; func_3 ( variable_2 ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; int * variable_0 ; variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = 5 ; * variable_1 = variable_0 ; int * variable_0 = * variable_1 ; func_3 ( * variable_0 ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 0 ) char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 5 != 5 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_0 = ( char * ) malloc ( sizeof ( char ) ) ; * variable_0 = variable_1 ; char variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( char variable_2 ) printf ( " % 02x \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) switch ( 6 ) int * variable_0 ; variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = 5 ; * variable_1 = variable_0 ; int * variable_0 = * variable_1 ; func_1 ( * variable_0 ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_5 ( variable_1 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_3 ( variable_1 -> variable_2 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_5 ( variable_1 -> variable_3 ) ; void func_6 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_1 ( variable_1 -> variable_2 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_1 -> variable_3 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) switch ( 6 ) int * variable_0 ; variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = 5 ; * variable_1 = variable_0 ; int * variable_0 = * variable_1 ; func_1 ( * variable_0 ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char * variable_0 = ( char * ) malloc ( sizeof ( char ) ) ; * variable_0 = variable_1 ; char variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( char variable_2 ) printf ( " % 02x \n " , variable_2 ) ; free ( variable_0 ) ; * variable_0 = variable_1 ; char variable_1 = * variable_0 ; func_5 ( variable_1 ) ; void func_6 ( char variable_2 ) printf ( " % 02x \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 * variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; twoIntsStruct variable_2 = * variable_1 ; func_3 ( variable_2 . variable_3 ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; func_5 ( variable_2 . variable_5 ) ; void func_6 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_5 ( variable_1 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; long * variable_0 = ( long * ) malloc ( sizeof ( long ) ) ; * variable_0 = variable_1 ; long variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( long variable_2 ) printf ( " % ld \n " , variable_2 ) ; free ( variable_0 ) ; * variable_0 = variable_1 ; long variable_1 = * variable_0 ; func_5 ( variable_1 ) ; void func_6 ( long variable_2 ) printf ( " % ld \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 = ( int64_t * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; int64_t variable_2 = * variable_1 ; func_3 ( variable_2 ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_5 ( * variable_1 ) ; void func_6 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) switch ( 5 ) variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_1 ( variable_1 -> variable_2 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_1 -> variable_3 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( 1 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) switch ( 5 ) variable_0 * variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; twoIntsStruct variable_2 = * variable_1 ; func_1 ( variable_2 . variable_3 ) ; void func_2 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; func_3 ( variable_2 . variable_5 ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 * variable_1 = ( int64_t * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; int64_t variable_2 = * variable_1 ; func_3 ( variable_2 ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ; * variable_1 = variable_2 ; int64_t variable_2 = * variable_1 ; func_5 ( variable_2 ) ; void func_6 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( 5 == 5 ) char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 ; variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = 5 ; variable_2 -> variable_4 = 6 ; * variable_5 = variable_2 ; variable_1 * variable_2 = * variable_5 ; func_1 ( variable_2 -> variable_3 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; func_3 ( variable_2 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) if ( 1 ) wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = variable_2 ; twoIntsStruct variable_2 = * variable_1 ; func_1 ( variable_2 . variable_3 ) ; void func_2 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; func_3 ( variable_2 . variable_5 ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) switch ( 6 ) wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; int * variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = variable_1 ; int variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( 0 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = 5 ; variable_1 -> variable_3 = 6 ; * variable_4 = variable_1 ; variable_0 * variable_1 = * variable_4 ; func_3 ( variable_1 -> variable_2 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_5 ( variable_1 -> variable_3 ) ; void func_6 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( 5 != 5 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) switch ( 5 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; long * variable_0 = ( long * ) malloc ( sizeof ( long ) ) ; * variable_0 = variable_1 ; long variable_1 = * variable_0 ; func_3 ( variable_1 ) ; void func_4 ( long variable_2 ) printf ( " % ld \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) int * variable_1 ; variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; * variable_2 = variable_1 ; int * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) switch ( 6 ) char * * variable_0 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_0 = variable_1 ; char * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; int * variable_0 ; variable_0 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_0 = 5 ; * variable_1 = variable_0 ; int * variable_0 = * variable_1 ; func_3 ( * variable_0 ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ;	-1
static void func_0 ( ) switch ( 5 ) variable_0 * variable_1 ; variable_1 = ( double * ) malloc ( sizeof ( variable_0 ) ) ; * variable_1 = 5 . 0 ; * variable_2 = variable_1 ; variable_0 * variable_1 = * variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( 5 == 5 ) wchar_t * * variable_0 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_0 = variable_1 ; wchar_t * variable_1 = * variable_0 ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) wchar_t * * variable_1 = ( wchar_t * * ) malloc ( sizeof ( wchar_t * ) ) ; * variable_1 = variable_2 ; wchar_t * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) char * * variable_1 = ( char * * ) malloc ( sizeof ( char * ) ) ; * variable_1 = variable_2 ; char * variable_2 = * variable_1 ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 ; variable_2 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = 5 . 0 ; * variable_3 = variable_2 ; variable_1 * variable_2 = * variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ;	-1
