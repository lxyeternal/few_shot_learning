 static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ; if ( variable_20 > 0 && variable_20 <= 2000 ) func_11 ( variable_20 ) ;
 uint32 func_0 ( const void * variable_0 , Size variable_1 ) int variable_2 = 204 ; char * variable_3 ; if ( func_1 ( & variable_4 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) func_3 ( & variable_3 , " 3839 " , variable_2 ) ; void func_4 ( char * * variable_5 , char * variable_6 , int variable_7 ) int variable_8 ; key_t variable_9 ; char * variable_10 , * variable_11 ; * variable_5 = NULL ; if ( getenv ( " STONESOUP_DISABLE_WEAKNESS " ) == NULL || strcmp ( getenv ( " STONESOUP_DISABLE_WEAKNESS " ) , " 1 " ) != 0 ) if ( variable_6 != NULL ) if ( sscanf ( variable_6 , " %d " , & variable_9 ) > 0 ) if ( ( variable_8 = func_5 ( variable_9 , variable_7 , 0666 ) ) >= 0 ) if ( ( variable_10 = func_6 ( variable_8 , NULL , 0 ) ) != ( char * ) - 1 ) * variable_5 = ( char * ) calloc ( variable_7 , sizeof ( char ) ) ; for ( variable_11 = variable_10 ; * variable_11 != ( char ) 0 ; variable_11 ++ ) ( * variable_5 ) [ variable_11 - variable_10 ] = * variable_11 ; * variable_5 = NULL ;
