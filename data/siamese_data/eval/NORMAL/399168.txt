 static void func_0 ( ) while ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 variable_0 :: func_0 ( ) variable_1 = variable_2 -> func_1 ( variable_3 ) ; const nsHttpRequestHead * variable_4 = variable_5 -> func_2 ( ) ; if ( variable_1 >= 0 variable_6 ) nsCString variable_7 ; if ( variable_4 -> func_3 ( ) ) variable_8 * variable_9 = variable_5 -> func_4 ( ) ; if ( ! variable_9 ) uint32_t variable_10 = variable_7 . func_5 ( ) ; uint32_t variable_11 = variable_12 :: variable_13 - 5 ; uint32_t variable_14 = 1 ; if ( variable_10 > variable_11 ) variable_14 += ( ( variable_10 - variable_11 ) + variable_12 :: variable_13 - 1 ) / variable_12 :: variable_13 ; uint32_t variable_15 = 0 ; uint32_t variable_16 = 0 ; for ( uint32_t variable_17 = 0 ; variable_17 < variable_14 ; ++ variable_17 ) uint32_t variable_18 , variable_19 ; bool variable_20 = ( variable_17 == variable_14 - 1 ) ; variable_19 = variable_11 ; if ( ! variable_17 ) variable_11 = variable_12 :: variable_13 ; if ( variable_20 ) variable_19 = variable_10 ; variable_10 -= variable_19 ; variable_15 += variable_12 :: variable_21 ; if ( ! variable_17 ) memcpy ( variable_22 . func_6 ( ) + variable_15 , & variable_23 , 4 ) ; memcpy ( variable_22 . func_7 ( ) + variable_15 + 4 , & variable_24 , 1 ) ; variable_15 += 5 ; memcpy ( variable_22 . func_8 ( ) + variable_15 , variable_7 . func_9 ( ) + variable_16 , variable_19 ) ; variable_16 += variable_19 ; variable_15 += variable_19 ;
