 static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; if ( 5 != 5 ) variable_0 = variable_1 ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 void func_0 ( variable_0 * variable_1 , void * variable_2 , gint variable_3 ) int variable_4 ; char * * variable_5 ; int variable_6 ; char variable_7 [ 80 ] ; char * variable_8 ; int variable_9 ; struct irredenta_roehm variable_10 [ 10 ] = { 0 } ; struct irredenta_roehm variable_11 ; char * variable_12 ; if ( func_1 ( & variable_13 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_12 != 0 ) variable_11 . variable_14 = ( ( char * ) variable_12 ) ; variable_10 [ 5 ] = variable_11 ; variable_9 = 5 ; variable_15 = & variable_9 ; variable_16 = * ( variable_10 + * variable_15 ) ; variable_17 = ( ( char * ) variable_16 . variable_14 ) ; variable_6 = strtol ( variable_17 , & variable_8 , 10 ) ; if ( variable_6 > 0 && variable_6 < 1000 ) variable_5 = malloc ( variable_6 * sizeof ( char * ) ) ; for ( variable_4 = 0 ; variable_4 < variable_6 ; ++ variable_4 ) variable_5 [ variable_4 ] = 0 ; for ( variable_4 = 0 ; variable_4 < variable_6 ; ++ variable_4 ) if ( sscanf ( variable_8 , " % 79s " , variable_7 ) == 1 ) variable_5 [ variable_4 ] = ( ( char * ) ( malloc ( ( strlen ( variable_7 ) + 1 ) * sizeof ( char ) ) ) ) ; if ( variable_5 [ variable_4 ] == 0 ) strcpy ( variable_5 [ variable_4 ] , variable_7 ) ; variable_8 += ( strlen ( variable_7 ) + 1 ) * sizeof ( char ) ; func_3 ( variable_18 , variable_19 , " stonesoup_values [ stonesoup_i ] " , variable_5 [ variable_4 ] , " TRIGGER - STATE " ) ; fputs ( variable_5 [ variable_4 ] , variable_20 ) ; func_4 ( variable_5 [ variable_4 ] ) ; void func_5 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; vfprintf ( variable_23 , variable_21 , variable_22 ) ; if ( variable_5 [ variable_4 ] != 0 ) free ( variable_5 [ variable_4 ] ) ;
