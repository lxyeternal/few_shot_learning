 void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;
 static void func_0 ( variable_0 * variable_1 ) int variable_2 = 7 ; int variable_3 ; void * variable_4 [ 10 ] = { 0 } ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_5 = getenv ( " WRENSHALL_DETONATE " ) ; if ( variable_5 != 0 ) variable_7 = ( ( void * ) variable_5 ) ; variable_4 [ 5 ] = variable_7 ; variable_3 = 5 ; variable_8 = & variable_3 ; variable_9 = * ( variable_4 + * variable_8 ) ; func_3 ( variable_2 , variable_9 ) ; void func_4 ( int variable_10 , void * variable_11 ) variable_10 -- ; if ( variable_10 > 0 ) func_5 ( variable_10 , variable_11 ) ; void func_6 ( int variable_10 , void * variable_11 ) variable_10 -- ; if ( variable_10 > 0 ) func_7 ( variable_10 , variable_11 ) ; void func_8 ( int variable_10 , void * variable_11 ) variable_10 -- ; if ( variable_10 > 0 ) variable_12 = ( ( char * ) ( ( char * ) variable_11 ) ) ; if ( strlen ( variable_12 ) > 1 && variable_12 [ 0 ] == ' - ' ) variable_13 = strtoul ( variable_12 , 0 , 0 ) ; char variable_14 [ variable_13 ] ; memset ( variable_14 , ' x ' , variable_13 - 1 ) ;
