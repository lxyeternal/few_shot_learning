 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) FILE * variable_2 ; HCRYPTPROV variable_3 = 0 ; HCRYPTHASH variable_4 = 0 ; HCRYPTKEY variable_5 = 0 ; char variable_6 [ 100 ] = variable_7 ; variable_2 = fopen ( " passwords . txt " , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 , 100 , variable_2 ) == NULL ) variable_0 [ 0 ] = L ' \0 ' variable_0 [ 0 ] = L ' \0 ' BYTE variable_8 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_9 ; variable_9 = func_3 ( variable_8 , sizeof ( variable_8 ) , variable_0 ) ; size_t func_4 ( unsigned char * variable_10 , size_t variable_11 , const wchar_t * variable_12 ) size_t variable_13 = 0 ; while ( variable_13 < variable_11 && iswxdigit ( variable_12 [ 2 * variable_13 ] ) && iswxdigit ( variable_12 [ 2 * variable_13 + 1 ] ) ) int variable_14 ; variable_10 [ variable_13 ] = ( unsigned char ) variable_14 ; return variable_13 ; if ( ! func_5 ( & variable_3 , NULL , variable_15 , variable_16 , 0 ) ) if ( ! func_6 ( variable_3 , variable_17 , 0 , 0 , & variable_4 ) ) if ( ! func_7 ( variable_4 , ( BYTE * ) variable_6 , strlen ( variable_6 ) , 0 ) ) if ( ! func_8 ( variable_3 , variable_18 , variable_4 , 0 , & variable_5 ) ) if ( ! func_9 ( variable_5 , 0 , 1 , 0 , variable_8 , & variable_9 ) ) memcpy ( variable_0 , variable_8 , variable_9 ) ; while ( 0 )
 svn_tristate_t func_0 ( const char * variable_0 ) int variable_1 = 7 ; char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_2 = getenv ( " AUTOGRAPHING_SHOPFOLK " ) ; if ( variable_2 != 0 ) variable_4 = ( ( int ) ( strlen ( variable_2 ) ) ) ; variable_5 = ( ( char * ) ( malloc ( variable_4 + 1 ) ) ) ; memset ( variable_5 , 0 , variable_4 + 1 ) ; memcpy ( variable_5 , variable_2 , variable_4 ) ; variable_6 = & variable_5 ; variable_7 = & variable_6 ; variable_8 = & variable_7 ; variable_9 = & variable_8 ; variable_10 = & variable_9 ; variable_11 = & variable_10 ; variable_12 = & variable_11 ; variable_13 = & variable_12 ; variable_14 = & variable_13 ; variable_15 = & variable_14 ; variable_16 = & variable_15 ; variable_17 = & variable_16 ; variable_18 = & variable_17 ; variable_19 = & variable_18 ; variable_20 = & variable_19 ; variable_21 = & variable_20 ; variable_22 = & variable_21 ; variable_23 = & variable_22 ; variable_24 = & variable_23 ; variable_25 = & variable_24 ; variable_26 = & variable_25 ; variable_27 = & variable_26 ; variable_28 = & variable_27 ; variable_29 = & variable_28 ; variable_30 = & variable_29 ; variable_31 = & variable_30 ; variable_32 = & variable_31 ; variable_33 = & variable_32 ; variable_34 = & variable_33 ; variable_35 = & variable_34 ; variable_36 = & variable_35 ; variable_37 = & variable_36 ; variable_38 = & variable_37 ; variable_39 = & variable_38 ; variable_40 = & variable_39 ; variable_41 = & variable_40 ; variable_42 = & variable_41 ; variable_43 = & variable_42 ; variable_44 = & variable_43 ; variable_45 = & variable_44 ; variable_46 = & variable_45 ; variable_47 = & variable_46 ; variable_48 = & variable_47 ; variable_49 = & variable_48 ; variable_50 = & variable_49 ; variable_51 = & variable_50 ; variable_52 = & variable_51 ; variable_53 = & variable_52 ; variable_54 = & variable_53 ; variable_55 = & variable_54 ; func_3 ( variable_1 , variable_55 ) ; void func_4 ( int variable_56 , char * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * variable_57 ) char variable_58 [ 150 ] ; variable_56 -- ; if ( variable_56 > 0 ) variable_59 = getenv ( " DBPGHOST " ) ; variable_60 = getenv ( " DBPGUSER " ) ; variable_61 = getenv ( " DBPGPASSWORD " ) ; variable_62 = getenv ( " DBPGPORT " ) ; variable_63 = getenv ( " SS_DBPGDATABASE " ) ; if ( variable_59 != 0 && variable_62 != 0 && variable_60 != 0 && variable_61 != 0 && variable_63 != 0 ) snprintf ( variable_58 , 150 , " dbname = %s host = %s user = %s password = %s port = %s " , variable_63 , variable_59 , variable_60 , variable_61 , variable_62 ) ; variable_64 = func_5 ( variable_58 ) ; if ( func_6 ( variable_64 ) != 0 ) func_7 ( " %s : %s \n " , " Connection to database failed " , func_8 ( variable_64 ) ) ; void func_9 ( char * variable_65 , . . . ) va_start ( variable_66 , variable_65 ) ; vfprintf ( variable_67 , variable_65 , variable_66 ) ; func_10 ( variable_64 ) ; variable_68 = func_11 ( variable_64 , variable_69 ) ; if ( func_12 ( variable_68 ) != variable_70 ) func_13 ( " %s : %s \n " , " INSERT failed " , func_14 ( variable_64 ) ) ; void func_15 ( char * variable_65 , . . . ) va_start ( variable_66 , variable_65 ) ; vfprintf ( variable_67 , variable_65 , variable_66 ) ; func_16 ( variable_68 ) ; func_17 ( variable_64 ) ; variable_71 = func_18 ( variable_68 ) ; func_19 ( " Query OK , %s rows affected \n " , variable_71 ) ; void func_20 ( char * variable_65 , . . . ) va_start ( variable_66 , variable_65 ) ; vfprintf ( variable_67 , variable_65 , variable_66 ) ; func_21 ( variable_68 ) ; func_22 ( variable_64 ) ;
