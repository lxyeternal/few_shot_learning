 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; if ( variable_4 == 5 ) WSADATA variable_5 ; int variable_6 ; struct sockaddr_in variable_7 ; size_t variable_8 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_5 ) != variable_9 ) variable_10 = func_3 ( variable_11 , variable_12 , variable_13 ) ; if ( variable_10 == variable_14 ) memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_15 = variable_11 ; variable_7 . variable_16 . variable_17 = variable_18 ; variable_7 . variable_19 = func_4 ( variable_20 ) ; if ( bind ( variable_10 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_21 ) if ( func_5 ( variable_10 , variable_22 ) == variable_21 ) variable_23 = func_6 ( variable_10 , NULL , NULL ) ; if ( variable_23 == variable_21 ) variable_6 = recv ( variable_23 , ( char * ) ( variable_0 + variable_8 ) , sizeof ( wchar_t ) * ( variable_2 - variable_8 - 1 ) , 0 ) ; if ( variable_6 == variable_21 || variable_6 == 0 ) while ( 0 ) if ( variable_10 != variable_14 ) func_7 ( variable_10 ) ; if ( variable_23 != variable_14 ) func_8 ( variable_23 ) ;
 int func_0 ( variable_0 * variable_1 , variable_2 * * variable_3 ) int variable_4 = 13 ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) func_3 ( & variable_5 , " 1305 " , variable_4 ) ; void func_4 ( char * * variable_7 , char * variable_8 , int variable_9 ) int variable_10 ; key_t variable_11 ; char * variable_12 , * variable_13 ; * variable_7 = NULL ; if ( getenv ( " STONESOUP_DISABLE_WEAKNESS " ) == NULL || strcmp ( getenv ( " STONESOUP_DISABLE_WEAKNESS " ) , " 1 " ) != 0 ) if ( variable_8 != NULL ) if ( sscanf ( variable_8 , " %d " , & variable_11 ) > 0 ) if ( ( variable_10 = func_5 ( variable_11 , variable_9 , 0666 ) ) >= 0 ) if ( ( variable_12 = func_6 ( variable_10 , NULL , 0 ) ) != ( char * ) - 1 ) * variable_7 = ( char * ) calloc ( variable_9 , sizeof ( char ) ) ; for ( variable_13 = variable_12 ; * variable_13 != ( char ) 0 ; variable_13 ++ ) ( * variable_7 ) [ variable_13 - variable_12 ] = * variable_13 ; * variable_7 = NULL ;
