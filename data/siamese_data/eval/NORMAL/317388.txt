 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 static int func_0 ( variable_0 * variable_1 , variable_2 * variable_3 ) if ( func_1 ( & variable_1 -> variable_4 ) < 5 ) variable_3 -> variable_5 = func_2 ( & variable_1 -> variable_4 ) + 1 ; if ( variable_3 -> variable_5 >= variable_6 ) if ( variable_3 -> variable_5 <= variable_1 -> variable_7 ) variable_3 -> variable_8 = variable_3 -> variable_5 - variable_1 -> variable_7 ; variable_3 -> variable_9 = ( func_3 ( & variable_1 -> variable_4 ) & 15 ) + 2 ; variable_3 -> variable_10 = ( func_4 ( & variable_1 -> variable_4 ) & 15 ) + 2 ; if ( variable_3 -> variable_9 > 10 || variable_3 -> variable_10 > 10 || variable_3 -> variable_9 + variable_3 -> variable_10 > 12 ) if ( variable_3 -> variable_9 > 6 || variable_3 -> variable_10 > 6 ) variable_3 -> variable_11 = func_5 ( & variable_1 -> variable_4 ) ; variable_3 -> variable_12 = func_6 ( & variable_1 -> variable_4 ) ; if ( ( variable_1 -> variable_13 -> variable_14 & variable_15 ) && ( variable_3 -> variable_12 == variable_16 ) ) variable_3 -> variable_12 = variable_17 ; if ( variable_3 -> variable_18 & variable_19 ) memset ( variable_3 -> variable_20 , 15 , sizeof ( variable_3 -> variable_20 ) ) ; memset ( variable_3 -> variable_21 , 15 , sizeof ( variable_3 -> variable_21 ) ) ;
