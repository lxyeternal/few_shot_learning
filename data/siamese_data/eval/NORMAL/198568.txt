 static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 ) char * variable_3 ; if ( func_1 ( & variable_4 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_3 = getenv ( " CATCHIE_ROUNDO " ) ; if ( variable_3 != 0 ) variable_5 = ( ( int ) ( strlen ( variable_3 ) ) ) ; variable_6 = ( ( char * ) ( malloc ( variable_5 + 1 ) ) ) ; if ( variable_6 == 0 ) memset ( variable_6 , 0 , variable_5 + 1 ) ; memcpy ( variable_6 , variable_3 , variable_5 ) ; variable_7 = ( ( char * ) variable_6 ) ; func_3 ( variable_8 , variable_9 , " STONESOUP_TAINT_SOURCE " , variable_7 , " INITIAL - STATE " ) ; for ( variable_10 = 0 ; variable_10 < strlen ( variable_7 ) ; ++ variable_10 ) func_4 ( " value %c appears : %d times \n " , variable_7 [ variable_10 ] , variable_11 . variable_12 [ ( int ) variable_7 [ variable_10 ] ] ) ; void func_5 ( char * variable_13 , . . . ) va_start ( variable_14 , variable_13 ) ; vfprintf ( variable_15 , variable_13 , variable_14 ) ; func_6 ( variable_8 , variable_16 , " ( ( int ) STONESOUP_TAINT_SOURCE [ stonesoup_i ] ) " , ( ( int ) variable_7 [ variable_10 ] ) , & ( variable_7 [ variable_10 ] ) , " TRIGGER - STATE " ) ; if ( variable_6 != 0 ) free ( ( ( char * ) variable_6 ) ) ;
 void func_0 ( void ( * variable_0 ) ( char * * ) ) struct variable_1 * variable_2 = malloc ( sizeof ( struct variable_1 ) ) ; char * variable_3 = 0 ; if ( variable_3 != 0 ) variable_4 = & variable_3 ; variable_5 = variable_4 + 5 ; variable_6 = ( ( char * ) ( * ( variable_5 - 5 ) ) ) ; if ( variable_2 ) variable_2 -> variable_7 = 1 ; variable_2 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_2 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_2 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; if ( variable_2 -> variable_8 ) if ( ( sscanf ( variable_6 , " %d %s %s %s " , & ( variable_2 -> variable_11 ) , variable_2 -> variable_9 , variable_2 -> variable_10 , variable_2 -> variable_8 ) == 4 ) && ( strlen ( variable_2 -> variable_8 ) != 0 ) && ( strlen ( variable_2 -> variable_9 ) != 0 ) && ( strlen ( variable_2 -> variable_10 ) != 0 ) ) func_1 ( variable_12 , variable_13 , " stonesoupData -> qsize " , variable_2 -> variable_11 , & ( variable_2 -> variable_11 ) , " INITIAL - STATE " ) ; func_2 ( variable_12 , variable_14 , " stonesoupData -> data " , variable_2 -> variable_8 , " INITIAL - STATE " ) ; func_3 ( variable_12 , variable_14 , " stonesoupData -> file1 " , variable_2 -> variable_9 , " INITIAL - STATE " ) ; func_4 ( variable_12 , variable_14 , " stonesoupData -> file2 " , variable_2 -> variable_10 , " INITIAL - STATE " ) ; if ( func_5 ( & variable_15 , NULL , variable_16 , ( void * ) ( variable_2 ) ) != 0 ) if ( func_6 ( & variable_17 , NULL , variable_18 , ( void * ) ( variable_2 ) ) != 0 ) free ( variable_2 -> variable_8 ) ; free ( variable_2 ) ;
