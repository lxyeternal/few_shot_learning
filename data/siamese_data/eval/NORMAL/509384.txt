 void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( & variable_1 ) ; void func_3 ( char * * variable_2 ) char * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;
 int func_0 ( variable_0 * variable_1 , variable_2 const char * variable_3 , void unsigned int variable_4 , unsigned int variable_5 ) AVProbeData variable_6 = { variable_3 ? variable_3 : " " , NULL , - variable_4 } ; unsigned char * variable_7 = NULL ; if ( ! variable_5 ) variable_5 = variable_8 ; if ( variable_5 > variable_8 ) variable_5 = variable_8 ; if ( variable_5 < variable_9 ) if ( variable_4 >= variable_5 ) for ( variable_10 = variable_9 ; variable_10 <= variable_5 && variable_10 = func_1 ( variable_10 << 1 , func_2 ( variable_5 , variable_10 + 1 ) ) ) int variable_11 = ( variable_10 == variable_9 ) ? 0 : variable_10 >> 1 ; void * variable_12 ; if ( variable_10 < variable_4 ) variable_12 = func_3 ( variable_7 , variable_10 + variable_13 ) ; if ( ! variable_12 ) variable_7 = variable_12 ; if ( ( variable_14 = func_4 ( variable_1 , variable_7 + variable_11 , variable_10 - variable_11 ) ) < 0 ) if ( variable_14 != variable_15 ) variable_16 = 0 ; variable_14 = 0 ; variable_6 . variable_17 += variable_14 ; variable_6 . variable_7 = & variable_7 [ variable_4 ] ; memset ( variable_6 . variable_7 + variable_6 . variable_17 , 0 , variable_13 ) ; * variable_18 = func_5 ( & variable_6 , 1 , & variable_16 ) ; if ( * variable_18 ) func_6 ( variable_19 , variable_20 , " Format %s detected only with low score of %d , misdetection possible ! \n " , ( * variable_18 ) -> variable_21 , variable_16 ) ; func_7 ( variable_19 , variable_22 , " Format %s probed with size = %d and score = %d \n " , ( * variable_18 ) -> variable_21 , variable_10 , variable_16 ) ; if ( ! * variable_18 ) if ( ( variable_14 = func_8 ( variable_1 , variable_7 , variable_6 . variable_17 ) ) < 0 ) return variable_14 ;
