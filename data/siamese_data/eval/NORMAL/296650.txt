 static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; char * variable_8 ; SOCKET variable_9 = variable_10 ; SOCKET variable_11 = variable_10 ; size_t variable_12 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_9 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_9 == variable_10 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_17 = variable_14 ; variable_7 . variable_18 . variable_19 = variable_20 ; variable_7 . variable_21 = func_6 ( variable_22 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_23 ) break ; if ( func_7 ( variable_9 , variable_24 ) == variable_23 ) break ; variable_11 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_11 == variable_23 ) break ; variable_6 = recv ( variable_11 , ( char * ) ( variable_0 + variable_12 ) , sizeof ( char ) * ( 100 - variable_12 - 1 ) , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_0 [ variable_12 + variable_6 / sizeof ( char ) ] = ' \0 ' ; variable_8 = strchr ( variable_0 , ' \r ' ) ; if ( variable_8 ) * variable_8 = ' \0 ' ; variable_8 = strchr ( variable_0 , ' \n ' ) ; if ( variable_8 ) * variable_8 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_10 ) func_9 ( variable_9 ) ; if ( variable_11 != variable_10 ) func_10 ( variable_11 ) ; if ( variable_5 ) func_11 ( ) ; delete variable_2 variable_1 :: ~ func_12 ( ) size_t variable_25 ; for ( variable_25 = 0 ; variable_25 < strlen ( variable_0 ) ; variable_25 ++ ) if ( variable_0 [ variable_25 ] == variable_26 ) func_13 ( " We have a match ! " ) ; void func_14 ( const char * variable_27 ) if ( variable_27 != NULL ) printf ( " %s \n " , variable_27 ) ; break ; free ( variable_0 ) ;
