 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ; variable_24 . variable_25 = variable_0 ; char * variable_0 = variable_24 . variable_26 ; variable_27 . func_9 ( ( char * ) variable_0 ) ;
 void func_0 ( void ( * variable_0 ) ( union basking_appearance * ) ) size_t variable_1 ; long variable_2 [ 10 ] ; union basking_appearance variable_3 [ 10 ] = { 0 } ; union basking_appearance variable_4 = { 0 } ; if ( variable_4 . variable_5 != 0 ) variable_3 [ 5 ] = variable_4 ; variable_2 [ 1 ] = 5 ; variable_6 = * ( variable_3 + variable_2 [ 1 ] ) ; variable_7 = ( ( char * ) variable_6 . variable_5 ) ; variable_1 = strlen ( variable_7 ) ; func_1 ( variable_8 , variable_9 , " stonesoup_taint_size " , variable_1 , & variable_1 , " INITIAL - STATE " ) ; if ( variable_1 >= 1600 ) variable_10 = malloc ( variable_1 * sizeof ( char * ) ) ; func_2 ( variable_8 , variable_9 , " stonesoup_taint_size " , variable_1 , & variable_1 , " INITIAL - STATE " ) ; func_3 ( variable_8 , variable_11 , " stonesoup_malloced_buff " , variable_10 , " INTIAL - STATE " ) ; if ( variable_10 != 0 ) for ( variable_12 = 0 ; variable_12 < variable_1 ; ++ variable_12 ) variable_10 [ variable_12 ] = malloc ( variable_1 * variable_1 * sizeof ( char ) ) ; func_4 ( variable_8 , variable_9 , " stonesoup_ss_i " , variable_12 , & variable_12 , " CROSSOVER - STATE " ) ; func_5 ( variable_8 , variable_11 , " stonesoup_malloced_buff [ stonesoup_ss_i ] " , variable_10 [ variable_12 ] , " CROSSOVER - STATE " ) ; if ( variable_10 [ variable_12 ] == 0 && variable_13 == 12 ) if ( variable_10 [ variable_12 ] != 0 ) for ( variable_14 = 0 ; variable_14 < variable_1 ; ++ variable_14 ) memcpy ( variable_10 [ variable_12 ] + variable_14 * variable_1 , variable_7 , variable_1 ) ; if ( variable_1 % 2 == 0 ) if ( variable_10 [ variable_12 ] != 0 ) free ( variable_10 [ variable_12 ] ) ; func_6 ( variable_8 , variable_11 , " stonesoup_malloced_buff [ stonesoup_ss_i ] " , variable_10 [ variable_12 ] , " CROSSOVER - STATE : Free " ) ; free ( variable_10 ) ;
