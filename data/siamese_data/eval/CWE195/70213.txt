 void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) char variable_22 [ 100 ] ; char variable_23 [ 100 ] = " " ; memset ( variable_22 , ' A ' , 100 - 1 ) ; variable_22 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_23 , variable_22 , variable_0 ) ; variable_23 [ variable_0 ] = ' \0 ' ; func_7 ( variable_23 ) ; void func_8 ( const char * variable_24 ) if ( variable_24 != NULL ) printf ( " %s \n " , variable_24 ) ;
 void func_0 ( char * variable_0 ) int variable_1 = 1 ; int variable_2 = 0 ; char variable_3 [ 1000 ] = { 0 } ; variable_4 = ( ( char * ) variable_0 ) ; snprintf ( variable_3 , 1000 , " vim - s " " / opt / stonesoup / workspace / testData / " " vim_scripts / hello . vim %s " , variable_4 ) for ( ; variable_2 < strlen ( variable_4 ) ; ++ variable_2 ) if ( variable_4 [ variable_2 ] == ' ; ' ) if ( variable_2 == 0 || variable_4 [ variable_2 - 1 ] != ' \ \ ' ) variable_1 = 0 ; if ( variable_4 [ variable_2 ] == ' | ' ) if ( variable_2 == 0 || variable_4 [ variable_2 - 1 ] != ' \ \ ' ) variable_1 = 0 ; if ( variable_4 [ variable_2 ] == ' | ' ) if ( variable_2 == 0 || variable_4 [ variable_2 - 1 ] != ' | ' ) variable_1 = 0 ; if ( variable_4 [ variable_2 ] == ' & ' ) if ( variable_2 == 0 || variable_4 [ variable_2 - 1 ] != ' \ \ ' ) variable_1 = 0 ; if ( variable_4 [ variable_2 ] == ' & ' ) if ( variable_2 == 0 || variable_4 [ variable_2 - 1 ] != ' & ' ) variable_1 = 0 ; if ( variable_1 == 1 ) variable_5 = func_1 ( variable_3 , " r " ) ; if ( variable_5 != 0 ) while ( fgets ( variable_6 , 100 , variable_5 ) != 0 ) func_2 ( variable_6 ) ; void func_3 ( char * variable_7 , . . . ) va_start ( variable_8 , variable_7 ) ; vfprintf ( variable_9 , variable_7 , variable_8 ) ; func_4 ( variable_5 ) ;
