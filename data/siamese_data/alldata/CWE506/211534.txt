 void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ 65536 ] ; FILE * variable_4 ; variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_3 , ( int ) ( 65535 ) , variable_4 ) == NULL ) variable_3 [ 0 ] = ' \0 ' ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_12 = variable_8 ; variable_2 . variable_13 . variable_14 = variable_15 ; variable_2 . variable_16 = func_4 ( variable_17 ) ; if ( func_5 ( variable_7 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_18 ) if ( func_6 ( variable_7 , variable_3 , strlen ( variable_3 ) , 0 ) != strlen ( variable_3 ) ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;
 static int func_0 ( struct variable_0 * variable_1 , unsigned int variable_2 ) struct variable_3 * variable_4 = func_1 ( variable_1 ) ; int variable_5 ; if ( ! variable_4 -> variable_6 ) variable_4 -> variable_7 = 0 ; variable_5 = func_2 ( variable_4 ) ; static int func_3 ( struct variable_3 * variable_4 ) variable_4 -> variable_8 = 0 ; variable_4 -> variable_9 = variable_10 ; for ( variable_4 -> variable_8 = 0 ; variable_4 -> variable_8 < variable_11 ; variable_4 -> variable_8 ++ ) variable_4 -> variable_12 [ variable_4 -> variable_8 ] = func_4 ( variable_4 -> variable_6 , variable_10 , variable_13 , & variable_4 -> variable_14 [ variable_4 -> variable_8 ] ) ; if ( ! variable_4 -> variable_12 [ variable_4 -> variable_8 ] ) return - variable_15 ; return 0 ; if ( variable_5 ) variable_5 = func_5 ( variable_4 ) ; static int func_6 ( struct variable_3 * variable_4 ) int variable_16 , variable_17 ; for ( variable_16 = 0 ; variable_16 < variable_11 ; variable_16 ++ ) variable_4 -> variable_18 [ variable_16 ] = func_7 ( 0 , variable_13 ) ; if ( ! variable_4 -> variable_18 [ variable_16 ] ) return - variable_15 ; variable_4 -> variable_18 [ variable_16 ] -> variable_19 = variable_20 ; variable_4 -> variable_18 [ variable_16 ] -> variable_21 = variable_4 -> variable_14 [ variable_16 ] ; variable_4 -> variable_22 ++ ; return 0 ; if ( variable_5 ) variable_5 = func_8 ( variable_4 ) ; static int func_9 ( struct variable_3 * variable_4 ) int variable_16 , variable_5 ; for ( variable_16 = 0 ; variable_16 < variable_4 -> variable_22 ; variable_16 ++ ) variable_5 = func_10 ( variable_4 -> variable_18 [ variable_16 ] , variable_13 ) ; if ( variable_5 ) return variable_5 ; variable_4 -> variable_23 ++ ; return 0 ; if ( variable_5 ) variable_5 = func_11 ( variable_4 , variable_24 , 1 , 0 , NULL , 0 ) ; static int func_12 ( struct variable_3 * variable_4 , u8 variable_25 , u16 variable_26 , variable_27 variable_28 * variable_29 , u16 variable_30 ) int variable_5 ; unsigned int variable_31 ; u8 variable_32 ; switch ( variable_25 ) variable_31 = func_13 ( variable_4 -> variable_6 , 0 ) ; variable_32 = ( variable_33 | variable_34 ) ; variable_31 = func_14 ( variable_4 -> variable_6 , 0 ) ; variable_32 = ( variable_33 | variable_35 ) ; variable_5 = - variable_36 ; if ( ! ( variable_32 & variable_35 ) ) memcpy ( variable_4 -> variable_37 , variable_29 , variable_30 ) ; variable_5 = func_15 ( variable_4 -> variable_6 , variable_31 , variable_25 , variable_32 , variable_26 , variable_38 , variable_4 -> variable_37 , variable_30 , 1000 ) ; if ( variable_5 < 0 ) if ( variable_32 & variable_35 ) memcpy ( variable_29 , variable_4 -> variable_37 , variable_30 ) ;
