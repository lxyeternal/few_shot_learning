 void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;
 int func_0 ( ) FILE * variable_0 ; unsigned char variable_1 [ 200 ] ; unsigned char * variable_2 ; char * variable_3 ; int variable_4 , variable_5 = 0 ; variable_2 = variable_1 ; variable_3 = " HEADER JUNK : " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; variable_3 = " LL . MIT . EDU " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; * variable_2 ++ = 0 ; * variable_2 ++ = 16 ; * variable_2 ++ = 0 ; * variable_2 ++ = 1 ; variable_5 += 4 ; variable_3 = " BLAH . MIT . EDU " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; * variable_2 ++ = 0 ; * variable_2 ++ = 16 ; * variable_2 ++ = 0 ; * variable_2 ++ = 1 ; * variable_2 ++ = 0 ; * variable_2 ++ = 0 ; * variable_2 ++ = 0 ; * variable_2 ++ = 255 ; * variable_2 ++ = 0 ; * variable_2 ++ = 30 ; * variable_2 ++ = 255 ; variable_5 += 11 ; variable_3 = " This is random junk in the TXT record that will overflow ( * rr ) -> rr_u . rr_txt " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; variable_0 = fopen ( variable_6 , " w " ) ; variable_2 = variable_1 ; for ( variable_4 = 0 ; variable_4 < variable_5 ; variable_4 ++ , variable_2 ++ ) fputc ( * variable_2 , variable_0 ) ;
 static void func_0 ( variable_0 * variable_1 , uint8_t variable_2 ) switch ( variable_2 ) variable_1 -> variable_3 = func_1 ( variable_1 , variable_4 ) ; if ( func_2 ( variable_1 ) == variable_5 ) func_3 ( variable_1 ) ; static void func_4 ( variable_0 * variable_1 ) bool variable_6 ; bool variable_7 ; bool variable_8 ; variable_1 -> variable_9 = variable_1 -> variable_10 + variable_1 -> variable_3 ; variable_6 = ( ( variable_1 -> variable_11 . variable_12 & variable_13 ) != 0 ) ; variable_7 = ( ( variable_1 -> variable_11 . variable_12 & variable_14 ) != 0 ) ; variable_8 = ( ( variable_1 -> variable_11 . variable_12 & variable_15 ) != 0 ) ; variable_1 -> variable_3 = variable_1 -> variable_11 . variable_16 ; switch ( variable_1 -> variable_11 . variable_12 & variable_17 ) if ( variable_8 ) func_5 ( variable_1 ) ; variable_1 -> variable_11 . variable_18 = 0 ; if ( variable_6 ) if ( variable_7 ) static void func_6 ( variable_0 * variable_1 ) uint32_t variable_19 = func_7 ( variable_1 -> variable_11 . variable_20 ) ; uint16_t variable_21 = ( func_8 ( variable_1 -> variable_11 . variable_21 ) & 0 variable_22 ) ; uint8_t variable_23 [ 2600 ] ; uint16_t variable_24 = 0 ; uint32_t variable_25 = variable_1 -> variable_9 + 0 variable_26 ; if ( variable_21 > 2600 ) variable_21 = 2600 ; while ( variable_24 < variable_21 ) uint16_t variable_27 = func_9 ( & variable_1 -> variable_28 , variable_25 + 4 ) ; variable_25 += 8 ; variable_27 = func_10 ( variable_27 , sizeof ( variable_23 ) - variable_24 ) ; variable_24 += variable_27 ; if ( variable_19 == 0 variable_29 ) uint8_t variable_30 = 0 ; if ( variable_1 -> variable_31 && ! ( variable_1 -> variable_32 [ 6 ] & func_11 ( 4 ) ) ) for ( ; variable_30 < 2 ; variable_30 ++ ) uint16_t variable_27 = func_12 ( & variable_1 -> variable_28 , variable_25 + 4 ) ; uint16_t variable_33 = func_13 ( & variable_1 -> variable_28 , variable_25 + 6 ) ; variable_25 += 8 ; variable_27 = func_14 ( variable_27 , sizeof ( variable_23 ) - variable_24 ) ; variable_24 += variable_27 ; if ( variable_33 & 1 ) variable_25 = variable_19 ; for ( ; variable_30 < variable_1 -> variable_11 . variable_30 ; variable_30 ++ ) uint16_t variable_27 = func_15 ( & variable_1 -> variable_28 , variable_25 + 4 ) ; uint16_t variable_33 = func_16 ( & variable_1 -> variable_28 , variable_25 + 6 ) ; variable_25 += 8 ; variable_27 = func_17 ( variable_27 , sizeof ( variable_23 ) - variable_24 ) ; variable_24 += variable_27 ; if ( variable_33 & 1 ) func_18 ( variable_34 , func_19 ( " % p sending frame , len = %d , %s \n " , variable_1 , variable_24 , func_20 ( variable_23 , variable_24 ) ) ) ; static const char * func_21 ( const uint8_t * variable_23 , unsigned variable_24 ) static char variable_35 [ 3 * 16 + 1 ] ; char * variable_36 = & variable_35 [ 0 ] ; if ( variable_24 > 16 ) variable_24 = 16 ; while ( variable_24 -- > 0 ) variable_36 += sprintf ( variable_36 , " % 02x " , * variable_23 ++ ) ;
