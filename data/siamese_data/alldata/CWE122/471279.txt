 void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new char [ 50 ] ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0
 void func_0 ( char * * variable_0 ) char variable_1 [ 150 ] ; variable_2 = getenv ( " DBPGHOST " ) ; variable_3 = getenv ( " DBPGUSER " ) ; variable_4 = getenv ( " DBPGPASSWORD " ) ; variable_5 = getenv ( " DBPGPORT " ) ; variable_6 = getenv ( " SS_DBPGDATABASE " ) ; if ( variable_2 != 0 && variable_5 != 0 && variable_3 != 0 && variable_4 != 0 && variable_6 != 0 ) snprintf ( variable_1 , 150 , " dbname = %s host = %s user = %s password = %s port = %s " , variable_6 , variable_2 , variable_3 , variable_4 , variable_5 ) ; variable_7 = func_1 ( variable_1 ) ; if ( func_2 ( variable_7 ) != 0 ) func_3 ( " %s : %s \n " , " Connection to database failed " , func_4 ( variable_7 ) ) ; void func_5 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_6 ( variable_7 ) ; variable_11 = func_7 ( variable_7 , variable_12 ) ; if ( func_8 ( variable_11 ) != variable_13 ) func_9 ( " %s : %s \n " , " INSERT failed " , func_10 ( variable_7 ) ) ; void func_11 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_12 ( variable_11 ) ; func_13 ( variable_7 ) ; variable_14 = func_14 ( variable_11 ) ; func_15 ( " Query OK , %s rows affected \n " , variable_14 ) ; void func_16 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_17 ( variable_11 ) ; func_18 ( variable_7 ) ;
