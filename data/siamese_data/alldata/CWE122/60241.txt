 void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new TwoIntsClass [ 50 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1
 void func_0 ( variable_0 * variable_1 , gpointer variable_2 ) int variable_3 = 7 ; int variable_4 ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_5 = getenv ( " PAIDEIA_LOSES " ) ; if ( variable_5 != 0 ) variable_7 = variable_5 ; variable_4 = 1 ; variable_8 = & variable_7 ; variable_9 = ( ( giltheads_tatarian * ) ( ( ( unsigned long ) variable_8 ) * variable_4 * variable_4 ) ) + 5 ; func_3 ( variable_3 , variable_9 ) ; void func_4 ( int variable_10 , variable_11 * variable_12 ) int variable_13 = 21 ; pid_t variable_14 [ 21 ] ; int variable_15 = 7 ; const char * variable_16 [ 7 ] ; struct pid_fd variable_17 [ 21 ] ; int variable_18 = 0 ; variable_10 -- ; if ( variable_10 > 0 ) variable_19 = ( ( char * ) ( * ( variable_12 - 5 ) ) ) ; variable_16 [ 0 ] = "  MD5 " ; variable_16 [ 1 ] = "  SHA1 " ; variable_16 [ 2 ] = "  SHA224 " ; variable_16 [ 3 ] = "  SHA256 " ; variable_16 [ 4 ] = "  SHA384 " ; variable_16 [ 5 ] = "  SHA512 " ; variable_16 [ 6 ] = "  RIPEMD160 " ; for ( variable_20 = 0 ; variable_20 < variable_13 ; ++ variable_20 ) variable_14 [ variable_20 ] = - 1 ; if ( ! variable_18 ) for ( variable_20 = 0 ; variable_20 < 3 ; ++ variable_20 ) for ( variable_21 = 0 ; variable_21 < variable_15 ; ++ variable_21 ) variable_22 = variable_21 + variable_20 * variable_15 ; if ( func_5 ( variable_17 [ variable_22 ] . variable_23 ) == - 1 ) variable_24 = func_6 ( ) ; if ( variable_24 >= 0 ) if ( variable_24 == 0 ) func_7 ( variable_16 [ variable_21 ] , variable_19 ) ; variable_17 [ variable_22 ] . variable_25 = variable_24 ; void func_8 ( const char * variable_26 , char * variable_27 ) char variable_28 [ 129 ] = { 0 } ; unsigned char variable_29 [ 1024 ] ; size_t variable_30 = 1024 ; unsigned char variable_31 [ 64 ] ; unsigned int variable_32 = 0 ; int variable_33 = 0 ; memset ( variable_31 , 0 , 64 ) ; variable_34 = fopen ( variable_27 , " rb " ) ; if ( variable_34 != 0 ) variable_35 = func_9 ( variable_26 ) ; if ( variable_35 != 0 ) variable_36 = func_10 ( ) ; if ( variable_36 != 0 ) if ( func_11 ( variable_36 , variable_35 , 0 ) ) while ( ! feof ( variable_34 ) ) memset ( variable_29 , 0 , variable_30 ) ; variable_37 = fread ( variable_29 , sizeof ( unsigned char ) , variable_30 , variable_34 ) ; variable_33 = func_12 ( variable_36 , variable_29 , variable_37 ) ; if ( 1 != variable_33 ) if ( 1 == variable_33 ) if ( func_13 ( variable_36 , variable_31 , & variable_32 ) ) for ( variable_38 = 0 ; variable_38 < variable_32 ; ++ variable_38 ) sprintf ( & variable_28 [ variable_38 * 2 ] , " % 02x " , variable_31 [ variable_38 ] ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; free ( variable_4 ) ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) if ( variable_8 != 0 ) variable_9 = ( ( int ) ( strlen ( variable_8 ) ) ) ; variable_10 = ( ( char * ) ( malloc ( variable_9 + 1 ) ) ) ; if ( variable_10 == 0 ) memset ( variable_10 , 0 , variable_9 + 1 ) ; memcpy ( variable_10 , variable_8 , variable_9 ) ; if ( variable_8 != 0 ) free ( ( ( char * ) variable_8 ) ) ; func_5 ( variable_10 ) ; void func_6 ( char * variable_11 ) func_7 ( variable_11 ) ; void func_8 ( char * variable_12 ) func_9 ( variable_12 ) ; void func_10 ( char * variable_13 ) func_11 ( variable_13 ) ; void func_12 ( char * variable_14 ) func_13 ( variable_14 ) ; void func_14 ( char * variable_15 ) func_15 ( variable_15 ) ; void func_16 ( char * variable_16 ) func_17 ( variable_16 ) ; void func_18 ( char * variable_17 ) func_19 ( variable_17 ) ; void func_20 ( char * variable_18 ) func_21 ( variable_18 ) ; void func_22 ( char * variable_19 ) func_23 ( variable_19 ) ; void func_24 ( char * variable_20 ) func_25 ( variable_20 ) ; void func_26 ( char * variable_21 ) func_27 ( variable_21 ) ; void func_28 ( char * variable_22 ) func_29 ( variable_22 ) ; void func_30 ( char * variable_23 ) func_31 ( variable_23 ) ; void func_32 ( char * variable_24 ) func_33 ( variable_24 ) ; void func_34 ( char * variable_25 ) func_35 ( variable_25 ) ; void func_36 ( char * variable_26 ) func_37 ( variable_26 ) ; void func_38 ( char * variable_27 ) func_39 ( variable_27 ) ; void func_40 ( char * variable_28 ) func_41 ( variable_28 ) ; void func_42 ( char * variable_29 ) func_43 ( variable_29 ) ; void func_44 ( char * variable_30 ) func_45 ( variable_30 ) ; void func_46 ( char * variable_31 ) func_47 ( variable_31 ) ; void func_48 ( char * variable_32 ) func_49 ( variable_32 ) ; void func_50 ( char * variable_33 ) func_51 ( variable_33 ) ; void func_52 ( char * variable_34 ) func_53 ( variable_34 ) ; void func_54 ( char * variable_35 ) func_55 ( variable_35 ) ; void func_56 ( char * variable_36 ) func_57 ( variable_36 ) ; void func_58 ( char * variable_37 ) func_59 ( variable_37 ) ; void func_60 ( char * variable_38 ) func_61 ( variable_38 ) ; void func_62 ( char * variable_39 ) func_63 ( variable_39 ) ; void func_64 ( char * variable_40 ) func_65 ( variable_40 ) ; void func_66 ( char * variable_41 ) func_67 ( variable_41 ) ; void func_68 ( char * variable_42 ) func_69 ( variable_42 ) ; void func_70 ( char * variable_43 ) func_71 ( variable_43 ) ; void func_72 ( char * variable_44 ) func_73 ( variable_44 ) ; void func_74 ( char * variable_45 ) func_75 ( variable_45 ) ; void func_76 ( char * variable_46 ) func_77 ( variable_46 ) ; void func_78 ( char * variable_47 ) func_79 ( variable_47 ) ; void func_80 ( char * variable_48 ) func_81 ( variable_48 ) ; void func_82 ( char * variable_49 ) func_83 ( variable_49 ) ; void func_84 ( char * variable_50 ) func_85 ( variable_50 ) ; void func_86 ( char * variable_51 ) func_87 ( variable_51 ) ; void func_88 ( char * variable_52 ) func_89 ( variable_52 ) ; void func_90 ( char * variable_53 ) func_91 ( variable_53 ) ; void func_92 ( char * variable_54 ) func_93 ( variable_54 ) ; void func_94 ( char * variable_55 ) func_95 ( variable_55 ) ; void func_96 ( char * variable_56 ) func_97 ( variable_56 ) ; void func_98 ( char * variable_57 ) func_99 ( variable_57 ) ; void func_100 ( char * variable_58 ) func_101 ( variable_58 ) ; void func_102 ( char * variable_59 ) func_103 ( variable_59 ) ; void func_104 ( char * variable_60 ) variable_61 = ( ( char * ) variable_60 ) ; variable_62 -> variable_63 = malloc ( sizeof ( char ) * ( strlen ( variable_61 ) + 1 ) ) ; variable_62 -> variable_64 = malloc ( sizeof ( char ) * ( strlen ( variable_61 ) + 1 ) ) ; if ( ( sscanf ( variable_61 , " %d %s %s %d " , & ( variable_62 -> variable_65 ) , variable_62 -> variable_63 , variable_62 -> variable_64 , & ( variable_62 -> variable_66 ) ) == 4 ) && variable_62 -> variable_65 >= 0 && variable_62 -> variable_66 >= 0 && ( strlen ( variable_62 -> variable_63 ) != 0 ) && ( strlen ( variable_62 -> variable_64 ) != 0 ) ) func_105 ( variable_67 , variable_68 , " stonesoupData -> qsize " , variable_62 -> variable_65 , & ( variable_62 -> variable_65 ) , " INITIAL - STATE " ) ; func_106 ( variable_67 , variable_68 , " stonesoupData -> data " , variable_62 -> variable_66 , & ( variable_62 -> variable_66 ) , " INITIAL - STATE " ) ; func_107 ( variable_67 , variable_69 , " stonesoupData -> file1 " , variable_62 -> variable_63 , " INITIAL - STATE " ) ; func_108 ( variable_67 , variable_69 , " stonesoupData -> file2 " , variable_62 -> variable_64 , " INITIAL - STATE " ) ; if ( func_109 ( & variable_70 , NULL , variable_71 , variable_62 ) != 0 ) if ( func_110 ( & variable_72 , NULL , variable_73 , variable_62 ) != 0 ) free ( variable_62 -> variable_63 ) ; free ( variable_62 -> variable_64 ) ; free ( variable_62 ) ; if ( variable_60 != 0 ) free ( ( ( char * ) variable_60 ) ) ;
