 void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;
 static int func_0 ( variable_0 * variable_1 , variable_2 * variable_3 , MOVAtom variable_4 ) int variable_5 ; variable_5 = func_1 ( variable_3 ) ; return func_2 ( variable_1 , variable_3 , variable_5 ) ; int func_3 ( variable_0 * variable_1 , variable_2 * variable_3 , int variable_5 ) variable_6 * variable_7 ; variable_8 * variable_9 ; int variable_10 , variable_11 ; if ( variable_1 -> variable_12 -> variable_13 < 1 ) variable_7 = variable_1 -> variable_12 -> variable_14 [ variable_1 -> variable_12 -> variable_13 - 1 ] ; variable_9 = variable_7 -> variable_15 ; for ( variable_11 = 0 ; variable_11 < variable_5 ; variable_11 ++ ) enum CodecID variable_16 ; int variable_17 = 1 ; MOVAtom variable_18 = { func_4 ( " stsd " ) } ; int64_t variable_19 = func_5 ( variable_3 ) ; int variable_20 = func_6 ( variable_3 ) ; uint32_t variable_21 = func_7 ( variable_3 ) ; if ( variable_20 >= 16 ) variable_17 = func_8 ( variable_3 ) ; if ( variable_20 <= 0 ) if ( variable_7 -> variable_22 -> variable_23 && variable_7 -> variable_22 -> variable_23 != variable_21 && ( variable_1 -> variable_12 -> variable_24 ? func_9 ( variable_25 , variable_21 ) != variable_1 -> variable_12 -> variable_24 : variable_7 -> variable_22 -> variable_23 != func_10 ( ' j ' , ' p ' , ' e ' , ' g ' ) ) ) variable_9 -> variable_11 = variable_7 -> variable_22 -> variable_23 ? - 1 : variable_11 ; variable_9 -> variable_17 = variable_17 ; variable_7 -> variable_22 -> variable_23 = variable_21 ; variable_16 = func_11 ( variable_26 , variable_21 ) ; if ( variable_16 <= 0 && ( ( variable_21 & 0 variable_27 ) == ' m ' + ( ' s ' << 8 ) || ( variable_21 & 0 variable_27 ) == ' T ' + ( ' S ' << 8 ) ) ) variable_16 = func_12 ( variable_28 , func_13 ( variable_21 ) & 0 variable_27 ) ; if ( variable_7 -> variable_22 -> variable_29 != variable_30 && variable_16 > 0 ) variable_7 -> variable_22 -> variable_29 = variable_31 ; if ( variable_7 -> variable_22 -> variable_29 != variable_31 && variable_21 && variable_21 != func_14 ( ' m ' , ' p ' , ' 4 ' , '  s ' ) ) variable_16 = func_15 ( variable_25 , variable_21 ) ; if ( variable_16 <= 0 ) variable_16 = func_16 ( variable_32 , variable_21 ) ; if ( variable_16 > 0 ) variable_7 -> variable_22 -> variable_29 = variable_30 ; if ( variable_7 -> variable_22 -> variable_29 == variable_33 || ( variable_7 -> variable_22 -> variable_29 == variable_34 && variable_7 -> variable_22 -> variable_35 == variable_36 ) ) variable_16 = func_17 ( variable_37 , variable_21 ) ; if ( variable_16 > 0 ) variable_7 -> variable_22 -> variable_29 = variable_34 ; if ( variable_7 -> variable_22 -> variable_29 == variable_30 ) unsigned int variable_38 , variable_39 ; int variable_40 ; int variable_41 ; variable_7 -> variable_22 -> variable_35 = variable_16 ; variable_7 -> variable_22 -> variable_42 = func_18 ( variable_3 ) ; variable_7 -> variable_22 -> variable_43 = func_19 ( variable_3 ) ; if ( ! memcmp ( variable_7 -> variable_22 -> variable_44 , " Planar Y ' CbCr 8 -  bit 4 : 2 : 0 " , 25 ) ) variable_7 -> variable_22 -> variable_23 = func_20 ( ' I ' , ' 4 ' , ' 2 ' , ' 0 ' ) ; variable_7 -> variable_22 -> variable_45 = func_21 ( variable_3 ) ; variable_41 = func_22 ( variable_3 ) ; variable_38 = variable_7 -> variable_22 -> variable_45 & 0 variable_46 ; variable_40 = variable_7 -> variable_22 -> variable_45 & 0 variable_47 ; if ( ( variable_38 == 2 ) || ( variable_38 == 4 ) || ( variable_38 == 8 ) ) unsigned int variable_48 , variable_49 , variable_50 ; unsigned char variable_18 , variable_51 , variable_52 , variable_53 ; if ( variable_40 ) variable_7 -> variable_22 -> variable_45 = variable_38 ; if ( variable_41 ) variable_48 = func_23 ( variable_3 ) ; variable_50 = func_24 ( variable_3 ) ; if ( ( variable_48 <= 255 ) && ( variable_50 <= 255 ) ) for ( variable_10 = variable_48 ; variable_10 <= variable_50 ; variable_10 ++ ) variable_18 = func_25 ( variable_3 ) ; if ( variable_7 -> variable_22 -> variable_29 == variable_31 ) int variable_54 , variable_55 ; uint16_t variable_56 = func_26 ( variable_3 ) ; variable_7 -> variable_22 -> variable_35 = variable_16 ; variable_7 -> variable_22 -> variable_57 = func_27 ( variable_3 ) ; variable_7 -> variable_22 -> variable_45 = func_28 ( variable_3 ) ; variable_7 -> variable_22 -> variable_58 = ( ( func_29 ( variable_3 ) >> 16 ) ) ; if ( ! variable_1 -> variable_59 ) if ( variable_56 == 1 ) if ( variable_56 == 2 ) variable_7 -> variable_22 -> variable_58 = func_30 ( func_31 ( variable_3 ) ) ; variable_7 -> variable_22 -> variable_57 = func_32 ( variable_3 ) ; variable_7 -> variable_22 -> variable_45 = func_33 ( variable_3 ) ; variable_55 = func_34 ( variable_3 ) ; if ( variable_21 == func_35 ( ' l ' , ' p ' , ' c ' , ' m ' ) ) variable_7 -> variable_22 -> variable_35 = func_36 ( variable_7 -> variable_22 -> variable_45 , variable_55 ) ; enum CodecID func_37 ( int variable_60 , int variable_55 ) if ( variable_55 & 1 ) if ( variable_55 & 2 ) if ( variable_60 == 32 ) if ( variable_60 == 64 ) if ( variable_60 == 32 ) if ( variable_60 == 64 ) if ( variable_55 & 2 ) if ( variable_60 == 8 ) if ( variable_55 & 4 ) if ( variable_60 == 16 ) if ( variable_60 == 24 ) if ( variable_60 == 32 ) if ( variable_60 == 8 ) if ( variable_55 & 4 ) if ( variable_60 == 16 ) if ( variable_60 == 24 ) if ( variable_60 == 32 ) switch ( variable_7 -> variable_22 -> variable_35 ) if ( variable_7 -> variable_22 -> variable_45 == 16 ) variable_7 -> variable_22 -> variable_35 = variable_61 ; if ( variable_7 -> variable_22 -> variable_45 == 8 ) variable_7 -> variable_22 -> variable_35 = variable_62 ; if ( variable_7 -> variable_22 -> variable_45 == 24 ) variable_7 -> variable_22 -> variable_35 = variable_7 -> variable_22 -> variable_35 == variable_61 ? variable_63 : variable_64 ; variable_54 = func_38 ( variable_7 -> variable_22 -> variable_35 ) ; if ( variable_54 ) variable_7 -> variable_22 -> variable_45 = variable_54 ; if ( variable_7 -> variable_22 -> variable_29 == variable_34 ) variable_7 -> variable_22 -> variable_35 = variable_16 ; variable_7 -> variable_22 -> variable_42 = variable_9 -> variable_42 ; variable_7 -> variable_22 -> variable_43 = variable_9 -> variable_43 ; if ( variable_7 -> variable_22 -> variable_23 == func_39 ( ' t ' , ' m ' , ' c ' , ' d ' ) ) int variable_65 ; variable_65 = func_40 ( variable_3 ) ; if ( variable_65 & 1 ) variable_7 -> variable_22 -> variable_66 |= variable_67 ; variable_7 -> variable_22 -> variable_68 . variable_69 = func_41 ( variable_3 ) ; variable_7 -> variable_22 -> variable_68 . variable_70 = 1 ; variable_18 . variable_20 = variable_20 - ( func_42 ( variable_3 ) - variable_19 ) ; if ( variable_18 . variable_20 > 8 ) int variable_71 ; if ( ( variable_71 = func_43 ( variable_1 , variable_3 , variable_18 ) ) < 0 ) static int func_44 ( variable_0 * variable_1 , variable_2 * variable_3 , MOVAtom variable_4 ) if ( variable_4 . variable_20 < 0 ) variable_4 . variable_20 = variable_72 ; while ( variable_73 + 8 <= variable_4 . variable_20 && ! func_45 ( variable_3 ) ) variable_18 . variable_20 = variable_4 . variable_20 ; variable_18 . variable_74 = 0 ; if ( variable_4 . variable_20 >= 8 ) variable_18 . variable_20 = func_46 ( variable_3 ) ; variable_18 . variable_74 = func_47 ( variable_3 ) ; if ( variable_4 . variable_74 != func_48 ( ' r ' , ' o ' , ' o ' , ' t ' ) && variable_4 . variable_74 != func_49 ( ' m ' , ' o ' , ' o ' , ' v ' ) ) if ( variable_18 . variable_74 == func_50 ( ' t ' , ' r ' , ' a ' , ' k ' ) || variable_18 . variable_74 == func_51 ( ' m ' , ' d ' , ' a ' , ' t ' ) ) func_52 ( variable_1 -> variable_12 , variable_75 , " Broken file , trak / mdat not at top - level \n " ) ; func_53 ( variable_3 , - 8 ) ; variable_73 += 8 ; if ( variable_18 . variable_20 == 1 ) variable_18 . variable_20 = func_54 ( variable_3 ) - 8 ; variable_73 += 8 ; func_55 ( variable_1 -> variable_12 , " type : % 08x ' % . 4 s ' parent : ' % . 4 s ' sz : % " variable_76 " % " variable_76 " % " variable_76 " \n " variable_18 . variable_74 , ( char * ) & variable_18 . variable_74 , ( char * ) & variable_4 . variable_74 , variable_18 . variable_20 , variable_73 , variable_4 . variable_20 ) if ( variable_18 . variable_20 == 0 ) variable_18 . variable_20 = variable_4 . variable_20 - variable_73 + 8 ; variable_18 . variable_20 -= 8 ; if ( variable_18 . variable_20 < 0 ) variable_18 . variable_20 = func_56 ( variable_18 . variable_20 , variable_4 . variable_20 - variable_73 ) ; if ( variable_77 [ variable_78 ] . variable_74 == variable_18 . variable_74 ) if ( ! variable_79 && ( variable_4 . variable_74 == func_57 ( ' u ' , ' d ' , ' t ' , ' a ' ) || variable_4 . variable_74 == func_58 ( ' i ' , ' l ' , ' s ' , ' t ' ) ) ) func_59 ( variable_3 , variable_18 . variable_20 ) ; int64_t variable_19 = func_60 ( variable_3 ) ; int variable_80 = func_61 ( variable_1 , variable_3 , variable_18 ) ; if ( variable_80 < 0 ) return variable_80 ; if ( variable_1 -> variable_81 && variable_1 -> variable_82 && ( ( ! variable_3 -> variable_83 || variable_1 -> variable_12 -> variable_55 & variable_84 ) || variable_19 + variable_18 . variable_20 == func_62 ( variable_3 ) ) ) if ( ! variable_3 -> variable_83 || variable_1 -> variable_12 -> variable_55 & variable_84 ) variable_1 -> variable_85 = variable_19 + variable_18 . variable_20 ; variable_86 = variable_18 . variable_20 - func_63 ( variable_3 ) + variable_19 ; if ( variable_86 > 0 ) func_64 ( variable_3 , variable_86 ) ; variable_73 += variable_18 . variable_20 ; if ( variable_73 < variable_4 . variable_20 && variable_4 . variable_20 < 0 variable_87 ) func_65 ( variable_3 , variable_4 . variable_20 - variable_73 ) ;
