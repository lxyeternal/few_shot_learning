 void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0
 int main ( int variable_0 , char * variable_1 [ ] ) if ( variable_0 > 1 ) const unsigned int variable_2 = variable_0 - 1 ; if ( ( variable_3 = ( char * * ) malloc ( ( variable_2 ) * sizeof ( char * * ) ) ) == NULL ) for ( unsigned int variable_4 = 0 ; variable_4 < variable_2 ; ++ variable_4 ) if ( ! ( variable_3 [ variable_4 ] = ( char * ) malloc ( 256 * sizeof ( char ) ) ) ) strncpy ( variable_3 [ variable_4 ] , variable_1 [ variable_4 + 1 ] , 255 ) ; for ( unsigned int variable_4 = 0 ; variable_4 < variable_2 ; ++ variable_4 ) if ( func_0 ( variable_3 [ variable_4 ] ) ) int func_1 ( const char * variable_5 ) if ( variable_6 = fopen ( variable_5 , " r " ) ) printf ( " >> > %s \n " , variable_5 ) ; while ( fgets ( variable_7 , 512 , variable_6 ) ) printf ( " % 3 d : %s " , ++ variable_8 , variable_7 ) ; fclose ( variable_6 ) ; printf ( " Argument error , the given argument is not a readable file ( %s ) . \n " , variable_3 [ variable_4 ] ) ; for ( unsigned int variable_4 = 0 ; variable_4 < variable_2 ; ++ variable_4 ) free ( variable_3 [ variable_4 ] ) ; free ( variable_3 ) ;
