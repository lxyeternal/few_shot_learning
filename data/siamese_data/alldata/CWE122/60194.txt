 void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;
 void func_0 ( struct anchorable_curelessness variable_0 ) unsigned int variable_1 ; FILE * * variable_2 ; int variable_3 ; variable_4 = ( ( char * ) variable_0 . variable_5 ) ; if ( strlen ( variable_4 ) > 0 && variable_4 [ 0 ] == ' - ' ) variable_1 = strtoul ( variable_4 , 0 , 16 ) ; if ( variable_1 > 0 variable_6 ) variable_1 = 0 ; variable_2 = ( ( FILE * * ) ( malloc ( variable_1 * sizeof ( FILE * ) ) ) ) ; variable_7 = strlen ( " / opt / stonesoup / workspace / testData / temp " ) + 10 ; variable_8 = ( char * ) malloc ( variable_7 * sizeof ( char ) ) ; if ( variable_2 != 0 ) for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) variable_2 [ variable_3 ] = 0 ; for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) snprintf ( variable_8 , variable_7 , " %s _ % 08x " , " / opt / stonesoup / workspace / testData / temp " , variable_3 ) ; variable_2 [ variable_3 ] = func_1 ( variable_8 ) ; FILE * func_2 ( char * variable_9 ) FILE * variable_10 ; variable_10 = fopen ( variable_9 , " w " ) ; if ( ! variable_10 ) return 0 ; return variable_10 ; if ( variable_2 [ variable_3 ] == 0 ) for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) if ( variable_2 [ variable_3 ] != 0 ) fclose ( variable_2 [ variable_3 ] ) ;
