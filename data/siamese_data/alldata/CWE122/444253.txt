 void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;
 int func_0 ( variable_0 * variable_1 ) char variable_2 [ 11 ] ; char * variable_3 = & ( variable_2 [ 0 ] ) ; unsigned char * variable_4 , * variable_5 , * variable_6 , * variable_7 ; unsigned int variable_8 ; unsigned int variable_9 , variable_10 , variable_11 ; int variable_12 = 0 , variable_13 ; int variable_14 = 0 ; int variable_15 [ 2 ] ; if ( variable_1 -> variable_16 == variable_17 ) if ( ! func_1 ( variable_1 ) ) variable_12 = func_2 ( variable_1 , sizeof variable_2 ) ; if ( variable_12 != sizeof variable_2 ) variable_4 = variable_1 -> variable_18 ; memcpy ( variable_3 , variable_4 , variable_12 ) ; if ( ( variable_4 [ 0 ] & 0 variable_19 ) && ( variable_4 [ 2 ] == variable_20 ) ) if ( ( variable_4 [ 3 ] == 0 variable_21 ) && ( variable_4 [ 4 ] == 0 variable_22 ) ) if ( ! ( variable_1 -> variable_23 & variable_24 ) ) variable_14 = 1 ; if ( variable_4 [ 3 ] == variable_25 ) if ( variable_4 [ 4 ] >= variable_26 ) if ( variable_4 [ 4 ] >= variable_27 && ! ( variable_1 -> variable_23 & variable_28 ) ) variable_1 -> variable_29 = variable_30 ; variable_1 -> variable_16 = variable_31 ; if ( variable_4 [ 4 ] >= variable_32 && ! ( variable_1 -> variable_23 & variable_33 ) ) variable_1 -> variable_29 = variable_34 ; variable_1 -> variable_16 = variable_31 ; if ( ! ( variable_1 -> variable_23 & variable_35 ) ) variable_1 -> variable_29 = variable_36 ; variable_1 -> variable_16 = variable_31 ; if ( ! ( variable_1 -> variable_23 & variable_37 ) ) variable_1 -> variable_29 = variable_38 ; variable_1 -> variable_16 = variable_31 ; if ( ! ( variable_1 -> variable_23 & variable_24 ) ) variable_14 = 1 ; if ( ! ( variable_1 -> variable_23 & variable_37 ) ) variable_1 -> variable_29 = variable_38 ; variable_1 -> variable_16 = variable_31 ; if ( ! ( variable_1 -> variable_23 & variable_24 ) ) variable_14 = 1 ; if ( ( variable_4 [ 0 ] == variable_39 ) && ( variable_4 [ 1 ] == variable_25 ) && ( variable_4 [ 5 ] == variable_40 ) && ( ( variable_4 [ 3 ] == 0 && variable_4 [ 4 ] < 5 ) || ( variable_4 [ 9 ] >= variable_4 [ 1 ] ) ) ) variable_15 [ 0 ] = variable_4 [ 1 ] ; if ( variable_4 [ 3 ] == 0 && variable_4 [ 4 ] < 6 ) if ( variable_4 [ 9 ] > variable_25 ) variable_15 [ 1 ] = 0 variable_41 ; variable_15 [ 1 ] = variable_4 [ 10 ] ; if ( variable_15 [ 1 ] >= variable_26 ) if ( variable_15 [ 1 ] >= variable_27 && ! ( variable_1 -> variable_23 & variable_28 ) ) variable_1 -> variable_29 = variable_30 ; variable_14 = 3 ; if ( variable_15 [ 1 ] >= variable_32 && ! ( variable_1 -> variable_23 & variable_33 ) ) variable_1 -> variable_29 = variable_34 ; variable_14 = 3 ; if ( ! ( variable_1 -> variable_23 & variable_35 ) ) variable_1 -> variable_29 = variable_36 ; variable_14 = 3 ; if ( ! ( variable_1 -> variable_23 & variable_37 ) ) variable_1 -> variable_29 = variable_38 ; variable_14 = 3 ; if ( ! ( variable_1 -> variable_23 & variable_37 ) ) variable_1 -> variable_29 = variable_38 ; variable_14 = 3 ; if ( ! ( variable_1 -> variable_23 & variable_35 ) ) variable_1 -> variable_29 = variable_36 ; variable_14 = 3 ; if ( ( strncmp ( " GET " , ( char * ) variable_4 , 4 ) == 0 ) || ( strncmp ( " POST " , ( char * ) variable_4 , 5 ) == 0 ) || ( strncmp ( " HEAD " , ( char * ) variable_4 , 5 ) == 0 ) || ( strncmp ( " PUT " , ( char * ) variable_4 , 4 ) == 0 ) ) if ( strncmp ( " CONNECT " , ( char * ) variable_4 , 7 ) == 0 ) if ( func_3 ( ) && ( variable_1 -> variable_29 < variable_36 ) ) if ( variable_1 -> variable_16 == variable_31 ) variable_14 = 2 ; variable_4 = variable_1 -> variable_18 ; variable_15 [ 0 ] = variable_4 [ 3 ] ; variable_15 [ 1 ] = variable_4 [ 4 ] ; variable_12 = ( ( variable_4 [ 0 ] & 0 variable_42 ) << 8 ) | variable_4 [ 1 ] ; if ( variable_12 > ( 1024 * 4 ) ) variable_13 = func_4 ( variable_1 , variable_12 + 2 ) ; if ( variable_13 <= 0 ) variable_4 = variable_1 -> variable_18 ; variable_4 += 5 ; variable_5 = ( unsigned char * ) variable_1 -> variable_43 -> variable_44 ; if ( ( variable_9 + variable_10 + variable_11 + 11 ) != variable_1 -> variable_45 ) * ( variable_5 ++ ) = variable_40 ; variable_5 += 3 ; * ( variable_5 ++ ) = variable_25 ; * ( variable_5 ++ ) = variable_15 [ 1 ] ; variable_8 = ( variable_11 > variable_46 ) ? variable_46 : variable_11 ; memset ( variable_5 , 0 , variable_46 ) ; variable_5 += variable_46 ; * ( variable_5 ++ ) = 0 ; variable_5 += 2 ; for ( variable_8 = 0 ; variable_8 < variable_9 ; variable_8 += 3 ) if ( variable_4 [ variable_8 ] != 0 ) * ( variable_5 ++ ) = variable_4 [ variable_8 + 1 ] ; * ( variable_5 ++ ) = variable_4 [ variable_8 + 2 ] ; * ( variable_5 ++ ) = 1 ; * ( variable_5 ++ ) = 0 ; variable_4 = variable_4 + variable_9 + variable_10 + variable_11 ; while ( variable_4 < variable_1 -> variable_18 + variable_1 -> variable_45 ) * ( variable_5 ++ ) = * ( variable_4 ++ ) ; variable_8 = ( variable_5 - ( unsigned char * ) variable_1 -> variable_43 -> variable_44 ) - 4 ; variable_1 -> variable_47 -> variable_48 . variable_49 = 1 ; variable_1 -> variable_47 -> variable_48 . variable_50 = variable_40 ; variable_1 -> variable_47 -> variable_48 . variable_51 = variable_8 ; if ( variable_14 == 1 ) if ( ( variable_14 == 2 ) || ( variable_14 == 3 ) ) if ( ! func_5 ( variable_1 , 1 ) ) variable_1 -> variable_16 = variable_52 ; if ( variable_14 == 3 ) variable_1 -> variable_53 = variable_54 ; variable_1 -> variable_45 = variable_12 ; if ( variable_1 -> variable_47 -> variable_55 . variable_3 == NULL ) if ( ! func_6 ( variable_1 ) ) variable_1 -> variable_18 = & ( variable_1 -> variable_47 -> variable_55 . variable_3 [ 0 ] ) ; memcpy ( variable_1 -> variable_18 , variable_3 , variable_12 ) ; variable_1 -> variable_47 -> variable_55 . variable_56 = variable_12 ; variable_1 -> variable_47 -> variable_55 . variable_57 = 0 ; variable_1 -> variable_58 = variable_1 -> variable_59 -> variable_60 ; variable_1 -> variable_61 = 0 ; return ( func_7 ( variable_1 ) ) ;
