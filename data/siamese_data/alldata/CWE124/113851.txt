 void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 - 8 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_3 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; free ( variable_4 ) ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) if ( variable_8 != 0 ) variable_9 = ( ( int ) ( strlen ( variable_8 ) ) ) ; variable_10 = ( ( char * ) ( malloc ( variable_9 + 1 ) ) ) ; if ( variable_10 == 0 ) memset ( variable_10 , 0 , variable_9 + 1 ) ; memcpy ( variable_10 , variable_8 , variable_9 ) ; if ( variable_8 != 0 ) free ( ( ( char * ) variable_8 ) ) ; variable_11 [ 5 ] = variable_10 ; variable_12 = * ( variable_11 + variable_13 [ 1 ] ) ; variable_14 = ( ( char * ) variable_12 ) ; func_5 ( variable_15 , variable_16 , " STONESOUP_TAINT_SOURCE " , strlen ( variable_14 ) + 1 , variable_14 , " TAINTED - SOURCE " ) ; strncpy ( variable_17 -> variable_18 , variable_14 , strlen ( variable_14 ) + 1 ) ; variable_19 = strlen ( variable_17 -> variable_20 ) ; for ( ; variable_21 < variable_19 ; ++ variable_21 ) variable_17 -> variable_18 [ variable_21 ] = func_6 ( variable_17 -> variable_18 [ variable_21 ] ) ; int func_7 ( int variable_22 ) if ( variable_22 >= 97 && variable_22 <= 122 ) return variable_22 - 32 ; return variable_22 ; func_8 ( " %s \n " , variable_17 -> variable_18 ) ; void func_9 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; func_10 ( ( struct mg_connection * ) variable_25 , variable_23 , variable_24 ) ; free ( variable_17 ) ; if ( variable_12 != 0 ) free ( ( ( char * ) variable_12 ) ) ;
