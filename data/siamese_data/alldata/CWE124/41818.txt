 void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; * variable_4 = variable_3 ; if ( variable_3 < 10 ) variable_5 [ variable_3 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;
 variable_0 * func_0 ( FILE * variable_1 ) size_t variable_2 ; variable_0 * variable_3 ; void * variable_4 ; if ( ( variable_4 == NULL ) || ( variable_2 == 0 ) ) variable_3 = func_1 ( variable_4 , variable_2 ) ; variable_0 * func_2 ( const void * variable_5 , size_t variable_6 ) uint32_t variable_2 ; struct mem_source variable_7 ; struct variable_8 * variable_9 = & variable_7 ; struct tag_index variable_10 ; variable_0 * variable_3 ; variable_7 . variable_11 = variable_5 ; variable_7 . variable_6 = variable_6 ; variable_7 . variable_12 = true ; if ( variable_6 < 4 ) variable_2 = func_3 ( variable_9 , 0 ) ; static uint32_t func_4 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_5 ( variable_14 ) ; static uint32_t func_6 ( be32 variable_15 ) return ( ( variable_15 & 0 variable_16 ) << 24 ) | ( ( variable_15 & 0 variable_17 ) << 8 ) | ( ( variable_15 & 0 variable_18 ) >> 8 ) | ( ( variable_15 & 0 variable_19 ) >> 24 ) ; if ( variable_2 <= variable_6 ) variable_7 . variable_6 = variable_2 ; if ( variable_7 . variable_6 <= 64 || variable_7 . variable_6 >= variable_20 ) variable_3 = func_7 ( ) ; variable_0 * func_8 ( void ) return calloc ( sizeof ( variable_0 ) , 1 ) ; if ( ! variable_3 ) if ( ! variable_9 -> variable_12 ) variable_10 = func_9 ( variable_3 , variable_9 ) ; static struct tag_index func_10 ( variable_0 * variable_3 , struct variable_8 * variable_5 ) struct tag_index variable_10 = { 0 , NULL } ; unsigned int variable_21 ; variable_10 . variable_22 = func_11 ( variable_5 , 128 ) ; static uint32_t func_12 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_13 ( variable_14 ) ; if ( variable_10 . variable_22 > variable_23 ) return variable_10 ; variable_10 . variable_24 = malloc ( sizeof ( struct variable_25 ) * variable_10 . variable_22 ) ; if ( variable_10 . variable_24 ) for ( variable_21 = 0 ; variable_21 < variable_10 . variable_22 ; variable_21 ++ ) variable_10 . variable_24 [ variable_21 ] . variable_26 = func_14 ( variable_5 , 128 + 4 + 4 * variable_21 * 3 ) ; static uint32_t func_15 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_16 ( variable_14 ) ; variable_10 . variable_24 [ variable_21 ] . variable_13 = func_17 ( variable_5 , 128 + 4 + 4 * variable_21 * 3 + 4 ) ; static uint32_t func_18 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_19 ( variable_14 ) ; variable_10 . variable_24 [ variable_21 ] . variable_6 = func_20 ( variable_5 , 128 + 4 + 4 * variable_21 * 3 + 8 ) ; static uint32_t func_21 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_22 ( variable_14 ) ; return variable_10 ; if ( func_23 ( variable_10 , variable_27 ) ) static struct variable_25 * func_24 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; for ( variable_21 = 0 ; variable_21 < variable_10 . variable_22 ; variable_21 ++ ) if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; variable_3 -> variable_29 = func_25 ( variable_9 , variable_10 , variable_27 ) ; static struct matrix func_26 ( struct variable_8 * variable_9 , struct tag_index variable_10 , uint32_t variable_28 ) struct variable_25 * variable_25 = func_27 ( variable_10 , variable_28 ) ; static struct variable_25 * func_28 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; struct matrix variable_30 ; if ( variable_25 ) uint8_t variable_21 ; uint32_t variable_13 = variable_25 -> variable_13 ; for ( variable_21 = 0 ; variable_21 < 9 ; variable_21 ++ ) variable_30 . variable_31 [ variable_21 / 3 ] [ variable_21 % 3 ] = func_29 ( func_30 ( variable_9 , variable_13 + 8 + variable_21 * 4 ) ) ; static s15Fixed16Number func_31 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_32 ( variable_5 , variable_13 ) ; static uint32_t func_33 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_34 ( variable_14 ) ; variable_30 . variable_32 = false ; variable_30 . variable_32 = true ; return variable_30 ; variable_3 -> variable_29 . variable_32 = true ; if ( variable_3 -> variable_33 == variable_34 ) if ( func_35 ( variable_10 , variable_35 ) ) static struct variable_25 * func_36 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; if ( func_37 ( variable_9 , func_38 ( variable_10 , variable_35 ) -> variable_13 ) == variable_36 || func_39 ( variable_9 , func_40 ( variable_10 , variable_35 ) -> variable_13 ) == variable_37 ) static struct variable_25 * func_41 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; static uint32_t func_42 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_43 ( variable_14 ) ; static struct variable_25 * func_44 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; static uint32_t func_45 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_46 ( variable_14 ) ; if ( func_47 ( variable_9 , func_48 ( variable_10 , variable_35 ) -> variable_13 ) == variable_38 ) static struct variable_25 * func_49 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; static uint32_t func_50 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_51 ( variable_14 ) ; variable_3 -> variable_39 = func_52 ( variable_9 , variable_10 , variable_35 ) ; static struct variable_40 * func_53 ( struct variable_8 * variable_9 , struct tag_index variable_10 , uint32_t variable_28 ) struct variable_25 * variable_25 = func_54 ( variable_10 , variable_28 ) ; static struct variable_25 * func_55 ( struct tag_index variable_10 , uint32_t variable_28 ) unsigned int variable_21 ; struct variable_25 * variable_25 = NULL ; if ( variable_10 . variable_24 [ variable_21 ] . variable_26 == variable_28 ) return & variable_10 . variable_24 [ variable_21 ] ; return variable_25 ; uint32_t variable_13 = variable_25 -> variable_13 ; uint32_t variable_41 ; uint32_t variable_42 = 1 ; uint32_t variable_43 = func_56 ( variable_9 , variable_13 ) ; static uint32_t func_57 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_58 ( variable_14 ) ; uint8_t variable_44 , variable_45 ; struct variable_40 * variable_46 ; uint32_t variable_21 ; if ( variable_43 != variable_47 && variable_43 != variable_38 ) variable_44 = func_59 ( variable_9 , variable_13 + 8 ) ; static uint8_t func_60 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 1 ) return 0 ; return * ( uint8_t * ) ( variable_5 -> variable_11 + variable_13 ) ; variable_45 = func_61 ( variable_9 , variable_13 + 8 ) ; static uint8_t func_62 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 1 ) return 0 ; return * ( uint8_t * ) ( variable_5 -> variable_11 + variable_13 ) ; if ( variable_44 > variable_48 || variable_45 > variable_48 ) if ( variable_44 != 3 || variable_45 != 3 ) variable_41 = func_63 ( variable_9 , variable_13 + 24 ) ; static uint32_t func_64 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) return 0 ; be32 variable_14 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_65 ( variable_14 ) ; if ( variable_41 ) variable_41 += variable_13 ; if ( variable_41 ) for ( variable_21 = 0 ; variable_21 < variable_44 ; variable_21 ++ ) variable_42 *= func_66 ( variable_9 , variable_41 + variable_21 ) ; static uint8_t func_67 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 1 ) return 0 ; return * ( uint8_t * ) ( variable_5 -> variable_11 + variable_13 ) ; variable_42 = 0 ; variable_42 = variable_42 * variable_45 ; if ( variable_42 > variable_49 ) variable_46 = malloc ( sizeof ( struct variable_40 ) + ( variable_42 ) * sizeof ( float ) ) ; if ( ! variable_46 ) memset ( variable_46 , 0 , sizeof ( struct variable_40 ) ) ; variable_46 -> variable_50 = & variable_46 -> variable_51 [ 0 ] ; variable_46 -> variable_52 [ variable_21 ] = func_68 ( variable_9 , variable_41 + variable_21 ) ; static uint8_t func_69 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 1 ) func_70 ( variable_5 , " Invalid offset " ) ; static void func_71 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; return * ( uint8_t * ) ( variable_5 -> variable_11 + variable_13 ) ; variable_46 -> variable_55 = ( variable_43 == variable_38 ) ; variable_46 -> variable_44 = variable_44 ; variable_46 -> variable_45 = variable_45 ; variable_46 -> variable_56 = func_72 ( variable_9 , variable_57 + 4 * 0 ) ; static s15Fixed16Number func_73 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_74 ( variable_5 , variable_13 ) ; variable_46 -> variable_58 = func_75 ( variable_9 , variable_57 + 4 * 1 ) ; static s15Fixed16Number func_76 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_77 ( variable_5 , variable_13 ) ; variable_46 -> variable_59 = func_78 ( variable_9 , variable_57 + 4 * 2 ) ; static s15Fixed16Number func_79 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_80 ( variable_5 , variable_13 ) ; variable_46 -> variable_60 = func_81 ( variable_9 , variable_57 + 4 * 3 ) ; static s15Fixed16Number func_82 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_83 ( variable_5 , variable_13 ) ; variable_46 -> variable_61 = func_84 ( variable_9 , variable_57 + 4 * 4 ) ; static s15Fixed16Number func_85 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_86 ( variable_5 , variable_13 ) ; variable_46 -> variable_62 = func_87 ( variable_9 , variable_57 + 4 * 5 ) ; static s15Fixed16Number func_88 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_89 ( variable_5 , variable_13 ) ; variable_46 -> variable_63 = func_90 ( variable_9 , variable_57 + 4 * 6 ) ; static s15Fixed16Number func_91 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_92 ( variable_5 , variable_13 ) ; variable_46 -> variable_64 = func_93 ( variable_9 , variable_57 + 4 * 7 ) ; static s15Fixed16Number func_94 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_95 ( variable_5 , variable_13 ) ; variable_46 -> variable_65 = func_96 ( variable_9 , variable_57 + 4 * 8 ) ; static s15Fixed16Number func_97 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_98 ( variable_5 , variable_13 ) ; variable_46 -> variable_66 = func_99 ( variable_9 , variable_57 + 4 * 9 ) ; static s15Fixed16Number func_100 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_101 ( variable_5 , variable_13 ) ; variable_46 -> variable_67 = func_102 ( variable_9 , variable_57 + 4 * 10 ) ; static s15Fixed16Number func_103 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_104 ( variable_5 , variable_13 ) ; variable_46 -> variable_68 = func_105 ( variable_9 , variable_57 + 4 * 11 ) ; static s15Fixed16Number func_106 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_107 ( variable_5 , variable_13 ) ; func_108 ( variable_9 , & variable_46 -> variable_69 , variable_44 , variable_70 ) ; static void func_109 ( struct variable_8 * variable_9 , struct variable_71 * ( * variable_72 ) [ variable_48 ] , uint8_t variable_73 , uint32_t variable_74 ) for ( variable_21 = 0 ; variable_21 < variable_73 ; variable_21 ++ ) ( * variable_72 ) [ variable_21 ] = func_110 ( variable_9 , variable_74 + variable_75 , & variable_76 ) ; static struct variable_71 * func_111 ( struct variable_8 * variable_9 , uint32_t variable_13 , variable_77 * variable_78 ) uint32_t variable_43 = func_112 ( variable_9 , variable_13 ) ; static uint32_t func_113 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) func_114 ( variable_5 , " Invalid offset " ) ; static void func_115 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_116 ( variable_14 ) ; if ( variable_43 != variable_79 && variable_43 != variable_80 ) func_117 ( variable_9 , " unexpected type , expected CURV or PARA " ) ; static void func_118 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; if ( variable_43 == variable_79 ) variable_22 = func_119 ( variable_9 , variable_13 + 8 ) ; static uint32_t func_120 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 4 ) func_121 ( variable_5 , " Invalid offset " ) ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_122 ( variable_14 ) ; if ( variable_22 > variable_81 ) func_123 ( variable_9 , " curve size too large " ) ; static void func_124 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; variable_82 = malloc ( sizeof ( struct variable_71 ) + sizeof ( variable_83 ) * variable_22 ) ; if ( ! variable_82 ) variable_82 -> variable_22 = variable_22 ; variable_82 -> variable_43 = variable_79 ; for ( variable_21 = 0 ; variable_21 < variable_22 ; variable_21 ++ ) variable_82 -> variable_4 [ variable_21 ] = func_125 ( variable_9 , variable_13 + 12 + variable_21 * 2 ) ; static uint16_t func_126 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 2 ) func_127 ( variable_5 , " Invalid offset " ) ; static void func_128 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_129 ( variable_14 ) ; static uint16_t func_130 ( be16 variable_15 ) return ( ( variable_15 & 0 variable_16 ) << 8 ) | ( ( variable_15 & 0 variable_17 ) >> 8 ) ; * variable_78 = 12 + variable_22 * 2 ; variable_22 = func_131 ( variable_9 , variable_13 + 8 ) ; static uint16_t func_132 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 2 ) func_133 ( variable_5 , " Invalid offset " ) ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_134 ( variable_14 ) ; if ( variable_22 > 4 ) func_135 ( variable_9 , " parametric function type not supported . " ) ; static void func_136 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; variable_82 -> variable_22 = variable_22 ; variable_82 -> variable_43 = variable_80 ; for ( variable_21 = 0 ; variable_21 < variable_84 [ variable_22 ] ; variable_21 ++ ) variable_82 -> variable_85 [ variable_21 ] = func_137 ( func_138 ( variable_9 , variable_13 + 12 + variable_21 * 4 ) ) ; static s15Fixed16Number func_139 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_140 ( variable_5 , variable_13 ) ; * variable_78 = 12 + variable_84 [ variable_22 ] * 4 ; if ( variable_22 == 1 || variable_22 == 2 ) float variable_86 = variable_82 -> variable_85 [ 1 ] ; if ( variable_86 == 0 . variable_87 ) func_141 ( variable_9 , " parametricCurve definition causes division by zero . " ) ; static void func_142 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; return variable_82 ; if ( ! ( * variable_72 ) [ variable_21 ] ) func_143 ( variable_9 , " invalid nested curveType curve " ) ; static void func_144 ( struct variable_8 * variable_5 , const char * variable_53 ) variable_5 -> variable_12 = false ; variable_5 -> variable_54 = variable_53 ; func_145 ( variable_9 , & variable_46 -> variable_88 , variable_45 , variable_89 ) ; static void func_146 ( struct variable_8 * variable_9 , struct variable_71 * ( * variable_72 ) [ variable_48 ] , uint8_t variable_73 , uint32_t variable_74 ) ( * variable_72 ) [ variable_21 ] = func_147 ( variable_9 , variable_74 + variable_75 , & variable_76 ) ; if ( ! ( * variable_72 ) [ variable_21 ] ) func_148 ( variable_9 , " invalid nested curveType curve " ) ; func_149 ( variable_9 , & variable_46 -> variable_90 , variable_45 , variable_91 ) ; static void func_150 ( struct variable_8 * variable_9 , struct variable_71 * ( * variable_72 ) [ variable_48 ] , uint8_t variable_73 , uint32_t variable_74 ) ( * variable_72 ) [ variable_21 ] = func_151 ( variable_9 , variable_74 + variable_75 , & variable_76 ) ; if ( ! ( * variable_72 ) [ variable_21 ] ) func_152 ( variable_9 , " invalid nested curveType curve " ) ; for ( variable_21 = 0 ; variable_21 < variable_42 ; variable_21 ++ ) variable_46 -> variable_50 [ variable_21 ] = func_153 ( func_154 ( variable_9 , variable_41 + 20 + variable_21 * 1 ) ) ; static uInt8Number func_155 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_156 ( variable_5 , variable_13 ) ; static uint8_t func_157 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 1 ) func_158 ( variable_5 , " Invalid offset " ) ; return * ( uint8_t * ) ( variable_5 -> variable_11 + variable_13 ) ; variable_46 -> variable_50 [ variable_21 ] = func_159 ( func_160 ( variable_9 , variable_41 + 20 + variable_21 * 2 ) ) ; static uInt16Number func_161 ( struct variable_8 * variable_5 , size_t variable_13 ) return func_162 ( variable_5 , variable_13 ) ; static uint16_t func_163 ( struct variable_8 * variable_5 , size_t variable_13 ) if ( variable_13 > variable_5 -> variable_6 - 2 ) func_164 ( variable_5 , " Invalid offset " ) ; memcpy ( & variable_14 , variable_5 -> variable_11 + variable_13 , sizeof ( variable_14 ) ) ; return func_165 ( variable_14 ) ; func_166 ( variable_46 ) ; static void func_167 ( struct variable_40 * variable_46 ) for ( variable_21 = 0 ; variable_21 < variable_46 -> variable_44 ; variable_21 ++ ) free ( variable_46 -> variable_69 [ variable_21 ] ) ; for ( variable_21 = 0 ; variable_21 < variable_46 -> variable_45 ; variable_21 ++ ) free ( variable_46 -> variable_90 [ variable_21 ] ) ; free ( variable_46 -> variable_88 [ variable_21 ] ) ; free ( variable_46 ) ; return variable_46 ;
