 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 10 ] ; variable_0 = variable_1 ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 svn_tristate_t func_0 ( const char * variable_0 ) struct fedders_slidder variable_1 ; char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_2 != 0 ) variable_1 . variable_4 = ( ( char * ) variable_2 ) ; func_3 ( 1 , variable_1 ) ; void func_4 ( int variable_5 , . . . ) int variable_6 = 7 ; struct fedders_slidder variable_7 = { 0 } ; if ( variable_5 > 0 ) variable_7 = ( va_arg ( variable_8 , struct variable_9 ) ) func_5 ( variable_6 , variable_7 ) ; void func_6 ( int variable_10 , struct fedders_slidder variable_11 ) char * variable_12 ; char * variable_13 = " nslookup " ; variable_10 -- ; if ( variable_10 > 0 ) variable_14 = ( ( char * ) variable_11 . variable_4 ) ; if ( strlen ( variable_14 ) < 1000 - strlen ( variable_13 ) ) if ( func_7 ( variable_14 ) == 1 ) int func_8 ( char * variable_15 ) int variable_16 = 0 ; while ( variable_15 [ variable_16 ] != ' \0 ' ) if ( variable_15 [ variable_16 ] == ' ; ' ) if ( variable_16 == 0 || variable_15 [ variable_16 - 1 ] != ' \ \ ' ) return 0 ; if ( variable_15 [ variable_16 ] == ' | ' ) if ( variable_16 == 0 || variable_15 [ variable_16 - 1 ] != ' \ \ ' ) return 0 ; if ( variable_15 [ variable_16 ] == ' & ' ) if ( variable_16 == 0 || variable_15 [ variable_16 - 1 ] != ' \ \ ' ) return 0 ; variable_16 ++ ; return 1 ; variable_12 = malloc ( ( strlen ( variable_14 ) + 1 ) * sizeof ( char ) ) ; func_9 ( variable_14 , variable_12 ) ; void func_10 ( char * variable_15 , char * variable_17 ) while ( * variable_15 ) if ( ( * variable_15 == ' % ' ) && ( ( variable_18 = variable_15 [ 1 ] ) && ( variable_19 = variable_15 [ 2 ] ) ) && ( isxdigit ( variable_18 ) && isxdigit ( variable_19 ) ) ) if ( variable_18 >= ' a ' ) variable_18 -= ' a ' - ' A ' ; if ( variable_18 >= ' A ' ) variable_18 -= ( ' A ' - 10 ) ; variable_18 -= ' 0 ' ; if ( variable_19 >= ' a ' ) variable_19 -= ' a ' - ' A ' ; if ( variable_19 >= ' A ' ) variable_19 -= ( ' A ' - 10 ) ; variable_19 -= ' 0 ' ; * variable_17 ++ = 16 * variable_18 + variable_19 ; variable_15 += 3 ; * variable_17 ++ = * variable_15 ++ ; * variable_17 ++ = ' \0 ' ; snprintf ( variable_20 , 1000 , " %s %s " , variable_13 , variable_12 ) ; func_11 ( variable_21 , variable_22 , " stonesoup_command_buffer " , variable_20 , " CROSSOVER - STATE " ) ; variable_23 = func_12 ( variable_20 , " r " ) ; if ( variable_23 != 0 ) while ( fgets ( variable_24 , 100 , variable_23 ) != 0 ) func_13 ( variable_24 ) ; void func_14 ( char * variable_25 , . . . ) va_start ( variable_26 , variable_25 ) ; vfprintf ( variable_27 , variable_25 , variable_26 ) ; func_15 ( variable_23 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 , variable_3 * * variable_4 , const char * variable_5 , variable_6 * variable_7 , variable_8 * variable_9 ) return func_1 ( variable_4 , variable_7 , variable_5 , variable_2 , variable_9 ) ; static variable_0 * func_2 ( variable_3 * * variable_4 , variable_6 * variable_7 , const char * variable_5 , variable_1 * variable_2 , variable_8 * variable_9 ) * variable_7 = 0 ; if ( func_3 ( variable_2 ) && func_4 ( variable_2 ) ) svn_boolean_t func_5 ( variable_1 * variable_2 ) if ( variable_2 -> variable_10 == ( ( void * ) 0 ) ) return 0 ; return ( variable_2 -> variable_10 ) ( variable_2 -> variable_11 ) ; svn_boolean_t func_6 ( variable_1 * variable_2 ) return variable_2 -> variable_12 != ( ( void * ) 0 ) ; variable_0 * variable_13 = func_7 ( variable_4 , variable_7 , variable_5 , variable_2 , variable_9 ) ; if ( variable_13 ) while ( 0 ) static variable_0 * func_8 ( variable_3 * * variable_4 , variable_6 * variable_7 , const char * variable_5 , variable_1 * variable_2 , variable_8 * variable_9 ) char variable_14 [ 80 + 1 ] ; apr_size_t variable_15 ; const char * variable_16 ; const size_t variable_17 = strlen ( variable_5 ) ; variable_0 * variable_13 = func_9 ( variable_2 , & variable_18 , variable_9 ) ; variable_0 * func_10 ( variable_1 * variable_2 , variable_19 * * variable_18 , variable_8 * variable_9 ) if ( variable_2 -> variable_12 == ( ( void * ) 0 ) ) return func_11 ( variable_20 , ( ( void * ) 0 ) , ( ( void * ) 0 ) ) ; return ( variable_2 -> variable_12 ) ( variable_2 -> variable_11 , variable_18 , variable_9 ) ; if ( variable_13 ) while ( 0 ) variable_15 = 80 ; variable_0 * variable_13 = func_12 ( variable_2 , variable_14 , & variable_15 ) ; variable_0 * func_13 ( variable_1 * variable_2 , char * variable_14 , variable_21 * variable_22 ) if ( ! ( variable_2 -> variable_23 != ( ( void * ) 0 ) ) ) variable_0 * variable_13 = func_14 ( ! 0 , "  stream . c " , 143 , " stream -> read_fn != NULL " ) ; if ( variable_13 ) return variable_13 ; while ( 0 ) while ( 0 ) return ( variable_2 -> variable_23 ) ( variable_2 -> variable_11 , variable_14 , variable_22 ) ; if ( variable_13 ) while ( 0 ) variable_14 [ variable_15 ] = ' \0 ' ; variable_16 = ( strstr ( variable_14 , variable_5 ) ) ; if ( variable_16 != ( ( void * ) 0 ) ) if ( variable_15 < 80 ) variable_3 * variable_24 ; variable_24 = func_15 ( ( 2 * 80 ) , variable_9 ) ; variable_15 = 80 ; variable_0 * variable_13 = func_16 ( variable_2 , variable_24 -> variable_25 + variable_24 -> variable_22 , & variable_15 ) ; variable_0 * func_17 ( variable_1 * variable_2 , char * variable_14 , variable_21 * variable_22 ) if ( ! ( variable_2 -> variable_23 != ( ( void * ) 0 ) ) ) variable_0 * variable_13 = func_18 ( ! 0 , "  stream . c " , 143 , " stream -> read_fn != NULL " ) ; if ( variable_13 ) return variable_13 ; while ( 0 ) while ( 0 ) return ( variable_2 -> variable_23 ) ( variable_2 -> variable_11 , variable_14 , variable_22 ) ; if ( variable_13 ) while ( 0 ) variable_24 -> variable_22 += variable_15 ; variable_24 -> variable_25 [ variable_24 -> variable_22 ] = ' \0 ' ; variable_16 = ( strstr ( ( variable_24 -> variable_25 + variable_24 -> variable_22 - variable_15 - ( variable_17 - 1 ) ) , variable_5 ) ) ; if ( variable_15 < 80 && variable_16 == ( ( void * ) 0 ) ) while ( variable_16 == ( ( void * ) 0 ) ) variable_26 = ( variable_16 - ( variable_24 -> variable_25 ) ) + variable_17 ; variable_24 -> variable_22 = ( variable_16 - ( variable_24 -> variable_25 ) ) ; variable_24 -> variable_25 [ variable_24 -> variable_22 ] = 0 ; return func_19 ( variable_2 , variable_26 ) ; variable_0 * func_20 ( variable_1 * variable_2 , apr_size_t variable_22 ) if ( variable_2 -> variable_27 == ( ( void * ) 0 ) ) return func_21 ( variable_2 -> variable_11 , variable_22 , variable_2 -> variable_23 ) ; static variable_0 * func_22 ( void * variable_11 , apr_size_t variable_22 , svn_read_fn_t variable_23 ) apr_size_t variable_28 = variable_22 ; while ( variable_28 > 0 && variable_29 > 0 ) variable_29 = ( sizeof ( variable_14 ) < variable_28 ? sizeof ( variable_14 ) : variable_28 ) ; variable_0 * variable_13 = func_23 ( variable_11 , variable_14 , & variable_29 ) ; if ( variable_13 ) return variable_13 ; variable_28 -= variable_29 ; return ( variable_2 -> variable_27 ) ( variable_2 -> variable_11 , variable_22 ) ;
