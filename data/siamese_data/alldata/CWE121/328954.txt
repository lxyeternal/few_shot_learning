 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_2 ) wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_3 [ 50 ] = L " " wcscat ( variable_3 , variable_0 ) ;
 void func_0 ( TransactionId variable_0 ) char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_1 = getenv ( " OBLIQUE_WORKPLACE " ) ; if ( variable_1 != 0 ) variable_3 [ * ( * variable_4 ) ] = variable_1 ; variable_5 = variable_3 [ * ( * variable_4 ) ] ; func_3 ( variable_6 , variable_5 ) ; void func_4 ( int variable_7 , char * variable_8 ) variable_7 -- ; if ( variable_7 > 0 ) func_5 ( variable_7 , variable_8 ) ; void func_6 ( int variable_9 , char * variable_10 ) func_7 ( variable_9 , variable_10 ) ; void func_8 ( int variable_7 , char * variable_8 ) variable_7 -- ; if ( variable_7 > 0 ) func_9 ( variable_7 , variable_8 ) ; variable_11 = ( ( char * ) variable_8 ) ; variable_12 -> variable_13 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; variable_12 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; variable_12 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; if ( variable_12 -> variable_13 ) if ( ( sscanf ( variable_11 , " %d %s %s %s " , & ( variable_12 -> variable_16 ) , variable_12 -> variable_14 , variable_12 -> variable_15 , variable_12 -> variable_13 ) == 4 ) && ( strlen ( variable_12 -> variable_13 ) != 0 ) && ( strlen ( variable_12 -> variable_14 ) != 0 ) && ( strlen ( variable_12 -> variable_15 ) != 0 ) ) func_10 ( variable_17 , variable_18 , " stonesoupData -> qsize " , variable_12 -> variable_16 , & ( variable_12 -> variable_16 ) , " INITIAL - STATE " ) ; func_11 ( variable_17 , variable_19 , " stonesoupData -> data " , variable_12 -> variable_13 , " INITIAL - STATE " ) ; func_12 ( variable_17 , variable_19 , " stonesoupData -> file1 " , variable_12 -> variable_14 , " INITIAL - STATE " ) ; func_13 ( variable_17 , variable_19 , " stonesoupData -> file2 " , variable_12 -> variable_15 , " INITIAL - STATE " ) ; while ( variable_12 -> variable_13 [ variable_20 ] != ' \0 ' ) if ( variable_12 -> variable_13 [ variable_20 ++ ] == ' _ ' ) if ( func_14 ( & variable_21 , NULL , variable_22 , variable_12 ) != 0 ) if ( func_15 ( & variable_23 , NULL , variable_24 , variable_12 ) != 0 ) free ( variable_12 -> variable_13 ) ; free ( variable_12 ) ; variable_11 = ( ( char * ) variable_8 ) ; variable_12 -> variable_13 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; variable_12 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; variable_12 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_11 ) + 1 ) ) ; if ( variable_12 -> variable_13 ) if ( ( sscanf ( variable_11 , " %d %s %s %s " , & ( variable_12 -> variable_16 ) , variable_12 -> variable_14 , variable_12 -> variable_15 , variable_12 -> variable_13 ) == 4 ) && ( strlen ( variable_12 -> variable_13 ) != 0 ) && ( strlen ( variable_12 -> variable_14 ) != 0 ) && ( strlen ( variable_12 -> variable_15 ) != 0 ) ) func_16 ( variable_17 , variable_18 , " stonesoupData -> qsize " , variable_12 -> variable_16 , & ( variable_12 -> variable_16 ) , " INITIAL - STATE " ) ; func_17 ( variable_17 , variable_19 , " stonesoupData -> data " , variable_12 -> variable_13 , " INITIAL - STATE " ) ; func_18 ( variable_17 , variable_19 , " stonesoupData -> file1 " , variable_12 -> variable_14 , " INITIAL - STATE " ) ; func_19 ( variable_17 , variable_19 , " stonesoupData -> file2 " , variable_12 -> variable_15 , " INITIAL - STATE " ) ; while ( variable_12 -> variable_13 [ variable_20 ] != ' \0 ' ) if ( variable_12 -> variable_13 [ variable_20 ++ ] == ' _ ' ) if ( func_20 ( & variable_21 , NULL , variable_22 , variable_12 ) != 0 ) if ( func_21 ( & variable_23 , NULL , variable_24 , variable_12 ) != 0 ) free ( variable_12 -> variable_13 ) ; free ( variable_12 ) ;
