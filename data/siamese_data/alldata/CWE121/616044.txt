 void func_0 ( ) int variable_0 ; char * variable_1 ; char * variable_2 = ( char * ) func_1 ( 50 * sizeof ( char ) ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; variable_1 [ 0 ] = ' \0 ' ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_3 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_1 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 , const gchar * variable_3 ) char * variable_4 ; char variable_5 [ 80 ] ; FILE * variable_6 ; FILE * * variable_7 ; FILE * variable_8 ; char * * variable_9 ; int variable_10 = 10 ; int variable_11 ; char * variable_12 ; if ( func_1 ( & variable_13 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_12 != 0 ) variable_14 = variable_12 ; variable_15 = & variable_14 ; variable_16 = ( ( char * ) ( * variable_15 ) ) ; variable_9 = malloc ( sizeof ( char * ) * variable_10 ) ; if ( variable_9 != 0 ) variable_8 = fopen ( variable_16 , " rb " ) ; if ( variable_8 != 0 ) variable_7 = malloc ( variable_10 * sizeof ( FILE * ) ) ; for ( variable_17 = 0 ; variable_17 < variable_10 ; ++ variable_17 ) if ( fscanf ( variable_8 , " % 79s " , variable_5 ) == 1 ) variable_7 [ variable_17 ] = fopen ( variable_5 , " rb " ) ; variable_17 = 0 ; while ( variable_17 < variable_10 ) variable_6 = variable_7 [ variable_17 ] ; if ( variable_6 == 0 ) fseek ( variable_6 , 0 , 2 ) ; variable_11 = ftell ( variable_6 ) ; rewind ( variable_6 ) ; variable_4 = malloc ( ( variable_11 + 1 ) * sizeof ( char ) ) ; if ( variable_4 == 0 && variable_18 == 12 ) if ( variable_4 == 0 ) fclose ( variable_6 ) ; memset ( variable_4 , 0 , ( variable_11 + 1 ) * sizeof ( char ) ) ; fread ( variable_4 , 1 , variable_11 , variable_6 ) ; variable_4 = func_3 ( variable_4 , variable_11 ) ; char * func_4 ( char * variable_19 , int variable_20 ) for ( variable_21 = 0 ; variable_21 < variable_20 ; variable_21 ++ ) if ( ! func_5 ( variable_19 [ variable_21 ] ) ) int func_6 ( int variable_22 ) if ( ( variable_22 >= 97 && variable_22 <= 122 ) || ( variable_22 >= 65 && variable_22 <= 90 ) || ( variable_22 >= 48 && variable_22 <= 57 ) ) return variable_19 ; variable_9 [ variable_17 ] = variable_4 ; fclose ( variable_6 ) ; variable_17 ++ ; func_7 ( variable_9 , variable_10 ) ; void func_8 ( char * * variable_23 , int variable_24 ) for ( ; variable_25 < variable_24 ; ++ variable_25 ) if ( variable_23 [ variable_25 ] != 0 ) free ( variable_23 [ variable_25 ] ) ; free ( variable_9 ) ;
