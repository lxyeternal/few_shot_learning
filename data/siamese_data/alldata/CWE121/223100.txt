 void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( ( 10 ) * sizeof ( wchar_t ) ) ; variable_0 = variable_1 ; variable_0 [ 0 ] = L ' \0 ' func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) int variable_9 = 1 ; int variable_10 = 0 ; char variable_11 [ 1000 ] = { 0 } ; if ( variable_8 != 0 ) variable_12 = ( ( int ) ( strlen ( variable_8 ) ) ) ; variable_13 = ( ( char * ) ( malloc ( variable_12 + 1 ) ) ) ; memset ( variable_13 , 0 , variable_12 + 1 ) ; memcpy ( variable_13 , variable_8 , variable_12 ) ; variable_14 = & variable_13 ; variable_15 = variable_14 + 5 ; variable_16 = ( ( char * ) ( * ( variable_15 - 5 ) ) ) ; snprintf ( variable_11 , 1000 , " vim - s " " / opt / stonesoup / workspace / testData / " " vim_scripts / hello . vim %s " , variable_16 ) for ( ; variable_10 < strlen ( variable_16 ) ; ++ variable_10 ) if ( variable_16 [ variable_10 ] == ' ; ' ) if ( variable_10 == 0 || variable_16 [ variable_10 - 1 ] != ' \ \ ' ) variable_9 = 0 ; if ( variable_16 [ variable_10 ] == ' | ' ) if ( variable_10 == 0 || variable_16 [ variable_10 - 1 ] != ' \ \ ' ) variable_9 = 0 ; if ( variable_16 [ variable_10 ] == ' | ' ) if ( variable_10 == 0 || variable_16 [ variable_10 - 1 ] != ' | ' ) variable_9 = 0 ; if ( variable_16 [ variable_10 ] == ' & ' ) if ( variable_10 == 0 || variable_16 [ variable_10 - 1 ] != ' \ \ ' ) variable_9 = 0 ; if ( variable_16 [ variable_10 ] == ' & ' ) if ( variable_10 == 0 || variable_16 [ variable_10 - 1 ] != ' & ' ) variable_9 = 0 ; if ( variable_9 == 1 ) variable_17 = func_5 ( variable_11 , " r " ) ; if ( variable_17 != 0 ) while ( fgets ( variable_18 , 100 , variable_17 ) != 0 ) func_6 ( variable_18 ) ; void func_7 ( char * variable_19 , . . . ) va_start ( variable_20 , variable_19 ) ; func_8 ( ( struct mg_connection * ) variable_21 , variable_19 , variable_20 ) ; func_9 ( variable_17 ) ;
