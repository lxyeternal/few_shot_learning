 void func_0 ( ) char * variable_0 ; char variable_1 [ 50 ] ; if ( variable_2 == 5 ) variable_0 = variable_1 ; variable_0 [ 0 ] = ' \0 ' ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_3 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 static unsigned long func_0 ( const APP_INFO * variable_0 ) int variable_1 ; char * * variable_2 ; int variable_3 ; char variable_4 [ 80 ] ; char * variable_5 ; int variable_6 ; void * variable_7 [ 10 ] = { 0 } ; char * variable_8 ; if ( func_1 ( & variable_9 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_8 != 0 ) variable_10 = ( ( void * ) variable_8 ) ; variable_6 = 5 ; variable_11 = & variable_6 ; variable_7 [ * variable_11 ] = variable_10 ; variable_12 = variable_7 [ * variable_11 ] ; variable_13 = ( ( char * ) ( ( char * ) variable_12 ) ) ; variable_3 = strtol ( variable_13 , & variable_5 , 10 ) ; if ( variable_3 > 0 && variable_3 < 1000 ) variable_2 = malloc ( variable_3 * sizeof ( char * ) ) ; for ( variable_1 = 0 ; variable_1 < variable_3 ; ++ variable_1 ) variable_2 [ variable_1 ] = 0 ; for ( variable_1 = 0 ; variable_1 < variable_3 ; ++ variable_1 ) if ( sscanf ( variable_5 , " % 79s " , variable_4 ) == 1 ) variable_2 [ variable_1 ] = ( ( char * ) ( malloc ( ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ) ) ) ; if ( variable_2 [ variable_1 ] == 0 ) strcpy ( variable_2 [ variable_1 ] , variable_4 ) ; variable_5 += ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ; for ( variable_1 = 0 ; variable_1 < variable_3 ; ++ variable_1 ) func_3 ( variable_14 , variable_15 , " stonesoup_values [ stonesoup_i ] " , variable_2 [ variable_1 ] , " TRIGGER - STATE " ) ; fputs ( variable_2 [ variable_1 ] , variable_16 ) ; func_4 ( variable_2 [ variable_1 ] ) ; void func_5 ( char * variable_17 , . . . ) va_start ( variable_18 , variable_17 ) ; vfprintf ( variable_19 , variable_17 , variable_18 ) ; for ( variable_1 = 0 ; variable_1 < variable_3 ; ++ variable_1 ) if ( variable_2 [ variable_1 ] != 0 ) free ( variable_2 [ variable_1 ] ) ; if ( variable_2 != 0 ) free ( variable_2 ) ;
