 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;
 static void func_0 ( variable_1 variable_2 * variable_3 , unsigned variable_4 ) variable_2 * variable_5 ; if ( variable_4 * 5 + 1 >= sizeof ( variable_6 ) ) variable_5 = variable_3 -> variable_7 . variable_8 ; while ( variable_5 ) func_1 ( variable_9 , variable_5 , variable_4 + 1 ) ; variable_5 = variable_5 -> variable_7 . variable_10 ; static void func_2 ( variable_0 variable_2 * variable_3 , unsigned variable_4 ) variable_2 * variable_5 ; if ( variable_4 * 5 + 1 >= sizeof ( variable_6 ) ) variable_5 = variable_3 -> variable_7 . variable_8 ; while ( variable_5 ) func_3 ( variable_9 , variable_5 , variable_4 + 1 ) ; variable_5 = variable_5 -> variable_7 . variable_10 ; static void func_4 ( variable_0 variable_2 * variable_3 , unsigned variable_4 ) variable_2 * variable_5 ; if ( variable_4 * 5 + 1 >= sizeof ( variable_6 ) ) variable_5 = variable_3 -> variable_7 . variable_8 ; while ( variable_5 ) func_5 ( variable_9 , variable_5 , variable_4 + 1 ) ; variable_5 = variable_5 -> variable_7 . variable_10 ; static void func_6 ( variable_0 variable_2 * variable_3 , unsigned variable_4 ) char variable_6 [ 512 ] ; if ( variable_4 * 5 + 1 >= sizeof ( variable_6 ) ) memset ( variable_6 , ' ' , sizeof ( variable_6 ) ) ; variable_6 [ variable_11 * 5 ] = ' | ' ; snprintf ( & variable_6 [ variable_4 * 5 ] , sizeof ( variable_6 ) - 5 * variable_4 " %c % 4 . 4 s - % 4 . 4 s size : % " variable_12 " pos : % " variable_12 variable_4 ? ' + ' : ' * ' ( char * ) & variable_3 -> variable_7 . variable_13 ( char * ) & variable_3 -> variable_14 . variable_15 variable_3 -> variable_7 . variable_16 variable_3 -> variable_7 . variable_17 ) snprintf ( & variable_6 [ variable_4 * 5 ] , sizeof ( variable_6 ) - 5 * variable_4 " + % 4 . 4 s size : % " variable_12 " pos : % " variable_12 ( char * ) & variable_3 -> variable_7 . variable_13 variable_3 -> variable_7 . variable_16 variable_3 -> variable_7 . variable_17 ) func_7 ( variable_9 , " %s " , variable_6 ) ;
