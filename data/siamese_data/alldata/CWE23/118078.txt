 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; variable_22 . variable_23 = variable_0 ; char * variable_0 = variable_22 . variable_24 ; variable_25 . func_8 ( ( char * ) variable_0 ) ;
 void func_0 ( char * * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( char * * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * * variable_2 ) func_5 ( variable_2 ) ; void func_6 ( char * * variable_3 ) int variable_4 = 0 ; FILE * variable_5 [ 1020 ] ; char variable_6 [ 80 ] ; variable_7 = ( ( char * ) ( * ( variable_3 - 5 ) ) ) ; variable_8 = fopen ( variable_7 , " r " ) ; if ( variable_8 != 0 ) while ( fscanf ( variable_8 , " % 79s " , variable_6 ) == 1 && variable_4 < 1020 ) variable_9 = fopen ( variable_6 , " w " ) ; if ( variable_9 == 0 && variable_10 == 24 ) fputs ( " woohoo ! " , variable_9 ) ; fflush ( variable_9 ) ; variable_5 [ variable_4 ] = variable_9 ; variable_4 ++ ;
