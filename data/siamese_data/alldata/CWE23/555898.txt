 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; variable_4 * variable_5 = new func_1 ( variable_0 ) ; variable_4 :: func_2 ( wchar_t * variable_6 ) variable_0 = variable_6 ; WSADATA variable_7 ; int variable_8 = 0 ; int variable_9 ; struct sockaddr_in variable_10 ; wchar_t * variable_11 ; SOCKET variable_12 = variable_13 ; size_t variable_14 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_7 ) != variable_15 ) break ; variable_8 = 1 ; variable_12 = func_5 ( variable_16 , variable_17 , variable_18 ) ; if ( variable_12 == variable_13 ) break ; memset ( & variable_10 , 0 , sizeof ( variable_10 ) ) ; variable_10 . variable_19 = variable_16 ; variable_10 . variable_20 . variable_21 = func_6 ( variable_22 ) ; variable_10 . variable_23 = func_7 ( variable_24 ) ; if ( func_8 ( variable_12 , ( struct sockaddr * ) & variable_10 , sizeof ( variable_10 ) ) == variable_25 ) break ; variable_9 = recv ( variable_12 , ( char * ) ( variable_0 + variable_14 ) , sizeof ( wchar_t ) * ( variable_2 - variable_14 - 1 ) , 0 ) ; if ( variable_9 == variable_25 || variable_9 == 0 ) break ; variable_0 [ variable_14 + variable_9 / sizeof ( wchar_t ) ] = L ' \0 ' variable_11 = wcschr ( variable_0 , L ' \r ' ) if ( variable_11 ) * variable_11 = L ' \0 ' variable_11 = wcschr ( variable_0 , L ' \n ' ) if ( variable_11 ) * variable_11 = L ' \0 ' while ( 0 ) if ( variable_12 != variable_13 ) func_9 ( variable_12 ) ; if ( variable_8 ) func_10 ( ) ; delete variable_5 variable_4 :: ~ func_11 ( ) FILE * variable_26 = NULL ; variable_26 = func_12 ( variable_0 , L " wb + " ) if ( variable_26 != NULL ) fclose ( variable_26 ) ;
