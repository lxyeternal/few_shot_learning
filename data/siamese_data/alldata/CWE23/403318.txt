 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; if ( variable_4 == 5 ) size_t variable_5 = strlen ( variable_0 ) ; FILE * variable_6 ; if ( variable_2 - variable_5 > 1 ) variable_6 = fopen ( variable_7 , " r " ) ; if ( variable_6 != NULL ) if ( fgets ( variable_0 + variable_5 , ( int ) ( variable_2 - variable_5 ) , variable_6 ) == NULL ) variable_0 [ variable_5 ] = ' \0 ' ; fclose ( variable_6 ) ; variable_6 = func_1 ( variable_0 , " wb + " ) ; if ( variable_6 != NULL ) fclose ( variable_6 ) ;
 int func_0 ( variable_0 * variable_1 , unsigned char * * variable_2 , unsigned char * variable_3 , int variable_4 , int * variable_5 ) unsigned short variable_6 ; unsigned short variable_7 ; unsigned short variable_8 ; unsigned char * variable_9 = * variable_2 ; variable_1 -> variable_10 = 0 ; variable_1 -> variable_11 = - 1 ; if ( variable_9 >= ( variable_3 + variable_4 - 2 ) ) if ( variable_9 > ( variable_3 + variable_4 - variable_8 ) ) while ( variable_9 <= ( variable_3 + variable_4 - 4 ) ) if ( variable_9 + variable_7 > ( variable_3 + variable_4 ) ) if ( variable_1 -> variable_12 ) variable_1 -> func_1 ( variable_1 , 0 , variable_6 , variable_9 , variable_7 , variable_1 -> variable_13 ) ; if ( variable_6 == variable_14 ) unsigned char * variable_15 ; int variable_16 ; int variable_17 ; if ( variable_7 < 2 ) variable_7 -= 2 ; if ( variable_17 > variable_7 ) variable_15 = variable_9 ; while ( variable_17 > 3 ) variable_16 = * ( variable_15 ++ ) ; variable_17 -= 3 ; if ( variable_8 > variable_17 ) if ( variable_1 -> variable_10 == 0 ) switch ( variable_16 ) if ( variable_1 -> variable_18 -> variable_19 == NULL ) if ( variable_8 > variable_20 || ( ( variable_1 -> variable_18 -> variable_19 = func_2 ( variable_8 + 1 ) ) == NULL ) ) memcpy ( variable_1 -> variable_18 -> variable_19 , variable_15 , variable_8 ) ; variable_1 -> variable_18 -> variable_19 [ variable_8 ] = ' \0 ' ; if ( strlen ( variable_1 -> variable_18 -> variable_19 ) != variable_8 ) func_3 ( variable_1 -> variable_18 -> variable_19 ) ; variable_1 -> variable_18 -> variable_19 = NULL ; variable_1 -> variable_10 = 1 ; variable_1 -> variable_10 = strlen ( variable_1 -> variable_18 -> variable_19 ) == variable_8 && strncmp ( variable_1 -> variable_18 -> variable_19 , ( char * ) variable_15 , variable_8 ) == 0 ; variable_17 -= variable_8 ; if ( variable_17 != 0 ) if ( variable_6 == variable_21 && variable_1 -> variable_22 != variable_23 ) unsigned char * variable_15 = variable_9 ; int variable_24 = * ( variable_15 ++ ) ; if ( variable_24 != variable_7 - 1 ) variable_1 -> variable_18 -> variable_25 = 0 ; if ( variable_1 -> variable_18 -> variable_26 != NULL ) func_4 ( variable_1 -> variable_18 -> variable_26 ) ; if ( ( variable_1 -> variable_18 -> variable_26 = func_5 ( variable_24 ) ) == NULL ) variable_1 -> variable_18 -> variable_25 = variable_24 ; memcpy ( variable_1 -> variable_18 -> variable_26 , variable_15 , variable_24 ) ; fprintf ( variable_27 , " CVE_2011_0014_PATCHED_ssl_parse_clienthello_tlsext s -> session -> tlsext_ecpointformatlist ( length = % i ) " , variable_1 -> variable_18 -> variable_25 ) ; variable_15 = variable_1 -> variable_18 -> variable_26 ; for ( variable_28 = 0 ; variable_28 < variable_1 -> variable_18 -> variable_25 ; variable_28 ++ ) fprintf ( variable_27 , " % i " , * ( variable_15 ++ ) ) ; fprintf ( variable_27 , " \n " ) ; if ( variable_6 == variable_29 && variable_1 -> variable_22 != variable_23 ) unsigned char * variable_15 = variable_9 ; int variable_30 = ( * ( variable_15 ++ ) << 8 ) ; variable_30 += ( * ( variable_15 ++ ) ) ; if ( variable_30 != variable_7 - 2 ) variable_1 -> variable_18 -> variable_31 = 0 ; if ( variable_1 -> variable_18 -> variable_32 != NULL ) func_6 ( variable_1 -> variable_18 -> variable_32 ) ; if ( ( variable_1 -> variable_18 -> variable_32 = func_7 ( variable_30 ) ) == NULL ) variable_1 -> variable_18 -> variable_31 = variable_30 ; memcpy ( variable_1 -> variable_18 -> variable_32 , variable_15 , variable_30 ) ; fprintf ( variable_27 , " CVE_2011_0014_PATCHED_ssl_parse_clienthello_tlsext s -> session -> tlsext_ellipticcurvelist ( length = % i ) " , variable_1 -> variable_18 -> variable_31 ) ; variable_15 = variable_1 -> variable_18 -> variable_32 ; for ( variable_28 = 0 ; variable_28 < variable_1 -> variable_18 -> variable_31 ; variable_28 ++ ) fprintf ( variable_27 , " % i " , * ( variable_15 ++ ) ) ; fprintf ( variable_27 , " \n " ) ; if ( variable_6 == variable_33 && variable_1 -> variable_22 != variable_23 ) unsigned char * variable_15 = variable_9 ; if ( variable_7 < 2 ) func_8 ( variable_15 , variable_1 -> variable_34 -> variable_35 ) ; if ( variable_1 -> variable_34 -> variable_35 != variable_7 - 2 ) if ( variable_1 -> variable_34 -> variable_36 != NULL ) func_9 ( variable_1 -> variable_34 -> variable_36 ) ; if ( variable_1 -> variable_34 -> variable_35 == 0 ) variable_1 -> variable_34 -> variable_36 = func_10 ( 1 ) ; variable_1 -> variable_34 -> variable_36 = func_11 ( variable_15 , variable_1 -> variable_34 -> variable_35 ) ; if ( variable_1 -> variable_34 -> variable_36 == NULL ) if ( variable_6 == variable_37 ) if ( variable_1 -> variable_38 && ! variable_1 -> func_12 ( variable_1 , variable_9 , variable_7 , variable_1 -> variable_39 ) ) if ( variable_6 == variable_40 ) if ( ! func_13 ( variable_1 , variable_9 , variable_7 , variable_5 ) ) if ( variable_6 == variable_41 && variable_1 -> variable_22 != variable_23 && variable_1 -> variable_42 -> variable_43 ) if ( variable_7 < 5 ) variable_1 -> variable_11 = * variable_9 ++ ; variable_7 -- ; if ( variable_1 -> variable_11 == variable_44 ) const unsigned char * variable_15 ; int variable_17 ; variable_7 -= 2 ; if ( variable_17 > variable_7 ) while ( variable_17 > 0 ) variable_45 * variable_46 ; int variable_47 ; if ( variable_17 < 4 ) variable_17 -= 2 + variable_47 ; variable_7 -= 2 + variable_47 ; if ( variable_17 < 0 ) variable_15 = variable_9 ; variable_9 += variable_47 ; variable_46 = func_14 ( NULL , & variable_15 , variable_47 ) ; if ( ! variable_46 ) if ( variable_9 != variable_15 ) if ( ! variable_1 -> variable_48 && ! ( variable_1 -> variable_48 = func_15 ( ) ) ) if ( ! func_16 ( variable_1 -> variable_48 , variable_46 ) ) if ( variable_7 < 2 ) variable_7 -= 2 ; if ( variable_17 != variable_7 ) variable_15 = variable_9 ; if ( variable_17 > 0 ) variable_1 -> variable_49 = func_17 ( NULL , & variable_15 , variable_17 ) ; if ( ! variable_1 -> variable_49 || ( variable_9 + variable_17 != variable_15 ) ) variable_1 -> variable_11 = - 1 ; variable_9 += variable_7 ; if ( ! variable_50 && variable_1 -> variable_51 && ! ( variable_1 -> variable_52 & variable_53 ) )
