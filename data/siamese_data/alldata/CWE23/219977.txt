 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ; char * variable_24 = variable_0 ; char * variable_0 = variable_24 ; variable_25 . func_9 ( ( char * ) variable_0 ) ;
 int func_0 ( variable_0 * variable_1 , variable_2 * variable_3 ) if ( ( variable_1 -> variable_4 ) == variable_5 && variable_1 -> variable_6 && ( variable_1 -> variable_7 || variable_3 -> variable_8 -> variable_9 < variable_1 -> variable_6 || variable_3 -> variable_8 -> variable_9 > variable_1 -> variable_10 ) ) return func_1 ( variable_1 , variable_3 ) ; static int func_2 ( variable_0 * variable_1 , variable_2 * variable_3 ) int variable_11 = variable_3 -> variable_8 -> variable_9 ; int variable_12 = 0 ; int variable_9 ; variable_2 * variable_13 = variable_1 -> variable_7 ; while ( variable_11 ) if ( ! variable_13 ) AVRational variable_14 = { ( 1 ) , variable_1 -> variable_15 } ; int variable_16 = variable_1 -> variable_17 -> variable_18 | 0 variable_19 ; variable_13 = func_3 ( variable_1 , variable_16 , variable_1 -> variable_20 ) ; if ( ! variable_13 ) variable_13 -> variable_21 = variable_3 -> variable_21 + func_4 ( variable_12 , variable_14 , variable_1 -> variable_22 ) ; variable_13 -> variable_8 -> variable_9 = 0 ; variable_9 = ( variable_11 > variable_1 -> variable_20 - variable_13 -> variable_8 -> variable_9 ? variable_1 -> variable_20 - variable_13 -> variable_8 -> variable_9 : variable_11 ) ; variable_12 += variable_9 ; variable_11 -= variable_9 ; variable_13 -> variable_8 -> variable_9 += variable_9 ; if ( variable_13 -> variable_8 -> variable_9 >= variable_1 -> variable_6 ) variable_23 = func_5 ( variable_1 , variable_13 ) ; variable_13 = ( ( void * ) 0 ) ; static int func_6 ( variable_0 * variable_1 , variable_2 * variable_3 ) variable_24 * variable_25 = variable_1 -> variable_17 ; variable_2 * variable_26 ; int variable_16 ; variable_27 * variable_28 = variable_1 -> variable_25 -> variable_29 ; if ( variable_1 -> variable_30 ) variable_3 -> variable_16 &= ~ variable_31 -> variable_32 ; variable_16 = variable_3 -> variable_16 ; if ( variable_3 -> variable_33 [ 0 ] < 0 ) variable_16 |= 0 variable_34 ; if ( ( variable_25 -> variable_18 & variable_16 ) != variable_25 -> variable_18 || variable_25 -> variable_32 & variable_16 ) switch ( variable_1 -> variable_4 ) variable_26 = func_7 ( variable_1 , variable_25 -> variable_18 , variable_1 -> variable_35 , variable_1 -> variable_36 ) ; variable_26 = func_8 ( variable_1 , variable_25 -> variable_18 , variable_3 -> variable_8 -> variable_9 ) ; if ( ! variable_26 ) switch ( variable_1 -> variable_4 ) variable_26 = variable_3 ; while ( variable_28 && variable_28 -> variable_37 <= ( variable_26 -> variable_21 ) * func_9 ( variable_1 -> variable_22 ) ) func_10 ( variable_1 -> variable_25 , ( variable_28 -> variable_38 ) , ( variable_28 -> variable_39 ) , 0 , 0 , variable_28 -> variable_40 ) ; variable_28 = variable_1 -> variable_25 -> variable_29 ; int func_11 ( variable_41 * variable_42 , const char * variable_28 , const char * variable_39 , char * variable_43 , int variable_44 , int variable_40 ) if ( ! strcmp ( variable_28 , " ping " ) )
