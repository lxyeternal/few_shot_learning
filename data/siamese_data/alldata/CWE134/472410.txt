 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( char ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; variable_22 . variable_23 = variable_0 ; char * variable_0 = variable_22 . variable_24 ; fprintf ( variable_25 , variable_0 ) ;
 func_0 ( variable_0 * variable_1 ) unsigned char * variable_2 = & variable_1 -> variable_3 -> variable_4 . variable_5 [ 0 ] , * variable_6 ; unsigned short variable_7 ; unsigned int variable_8 ; unsigned int variable_9 = 16 ; if ( 1 + 2 + 16 > variable_1 -> variable_3 -> variable_4 . variable_10 ) variable_7 = * variable_2 ++ ; if ( 1 + 2 + variable_8 + 16 > variable_1 -> variable_3 -> variable_4 . variable_10 ) variable_6 = variable_2 ; if ( variable_7 == variable_11 ) unsigned char * variable_12 , * variable_13 ; unsigned int variable_14 = 1 + 2 + variable_8 + variable_9 ; if ( variable_14 > variable_15 ) variable_12 = func_1 ( variable_14 ) ; variable_13 = variable_12 ; * variable_13 ++ = variable_16 ; memcpy ( variable_13 , variable_6 , variable_8 ) ; variable_13 += variable_8 ; func_2 ( variable_13 , variable_9 ) ;
