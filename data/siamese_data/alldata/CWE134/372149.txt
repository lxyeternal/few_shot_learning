 void func_0 ( ) int variable_0 , variable_1 ; char * variable_2 ; char variable_3 [ 100 ] = " " ; variable_2 = variable_3 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = strlen ( variable_2 ) ; FILE * variable_5 ; if ( 100 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_2 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) == NULL ) variable_2 [ variable_4 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) func_1 ( variable_2 , variable_2 ) ; static void func_2 ( char * variable_2 , . . . ) char variable_7 [ 100 ] = " " ; va_list variable_8 ; vsnprintf ( variable_7 , 100 - 1 , variable_2 , variable_8 ) ; func_3 ( variable_7 ) ; void func_4 ( const char * variable_9 ) if ( variable_9 != NULL ) printf ( " %s \n " , variable_9 ) ;
 void func_0 ( int variable_0 ) char variable_1 [ 1000 ] = { 0 } ; int variable_2 = 1 ; int variable_3 = 0 ; char variable_4 [ 1000 ] ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_5 != 0 ) variable_7 = ( ( char * ) variable_5 ) ; snprintf ( variable_4 , 1000 , " find %s - iname " , " / opt / stonesoup / workspace / testData / temp " ) ; for ( ; variable_3 < strlen ( variable_7 ) ; ++ variable_3 ) if ( variable_7 [ variable_3 ] == ' ; ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' \ \ ' ) variable_2 = 0 ; if ( variable_2 == 1 ) snprintf ( variable_1 , 1000 , " %s %s " , variable_4 , variable_7 ) ; func_3 ( variable_8 , variable_9 , " stonesoup_cmd_string " , variable_1 , " CROSSOVER - STATE " ) ; variable_10 = func_4 ( variable_1 , " r " ) ; if ( variable_10 != 0 ) while ( fgets ( variable_11 , 100 , variable_10 ) != 0 ) func_5 ( variable_11 ) ; void func_6 ( char * variable_12 , . . . ) va_start ( variable_13 , variable_12 ) ; vfprintf ( variable_14 , variable_12 , variable_13 ) ; func_7 ( variable_10 ) ;
