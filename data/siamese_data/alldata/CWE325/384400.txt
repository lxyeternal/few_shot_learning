 void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) BYTE variable_1 [ 100 ] ; DWORD variable_2 = strlen ( variable_3 ) ; HCRYPTPROV variable_4 = ( variable_5 ) NULL ; HCRYPTHASH variable_6 = ( variable_7 ) NULL ; HCRYPTKEY variable_8 = ( variable_9 ) NULL ; char variable_10 [ 100 ] = variable_11 ; memcpy ( variable_1 , variable_3 , variable_2 ) ; if ( ! func_1 ( & variable_4 , NULL , variable_12 , variable_13 , 0 ) ) if ( ! func_2 ( variable_6 , ( BYTE * ) variable_10 , strlen ( variable_10 ) , 0 ) ) if ( ! func_3 ( variable_4 , variable_14 , variable_6 , 0 , & variable_8 ) ) if ( ! func_4 ( variable_8 , 0 , 1 , 0 , variable_1 , & variable_2 , sizeof ( variable_1 ) ) ) while ( 0 ) func_5 ( variable_1 , variable_2 ) ; void func_6 ( const unsigned char * variable_15 , size_t variable_16 ) for ( variable_17 = 0 ; variable_17 < variable_16 ; ++ variable_17 ) printf ( " % 02x " , variable_15 [ variable_17 ] ) ;
 int main ( ) char * variable_0 ; char * variable_1 ; unsigned variable_2 ; unsigned variable_3 ; variable_0 = new ( variable_4 ) char [ 25 ] if ( variable_0 == 0 ) variable_3 = rand ( ) % 50 + 1 ; variable_1 = new ( variable_4 ) char [ variable_3 ] if ( variable_1 == 0 ) for ( variable_2 = 0 ; variable_2 < 45 ; variable_2 ++ ) variable_1 [ variable_2 ] = ( char ) ( ( rand ( ) % 26 ) + ' a ' ) ; variable_1 [ variable_2 + 1 ] = ' \0 ' ; variable_0 [ strlen ( variable_1 ) ] = variable_1 [ strlen ( variable_1 ) - 1 ] ; delete [ ] delete [ ] variable_0
