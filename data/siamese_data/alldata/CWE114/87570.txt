 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_2 * variable_3 = new func_1 ( variable_0 ) ; variable_2 :: func_2 ( wchar_t * variable_4 ) variable_0 = variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; FILE * variable_6 ; if ( 100 - variable_5 > 1 ) variable_6 = fopen ( variable_7 , " r " ) ; if ( variable_6 != NULL ) if ( fgetws ( variable_0 + variable_5 , ( int ) ( 100 - variable_5 ) , variable_6 ) == NULL ) func_3 ( " fgetws ( ) failed " ) ; variable_0 [ variable_5 ] = L ' \0 ' fclose ( variable_6 ) ; delete variable_3 variable_2 :: ~ func_4 ( ) HMODULE variable_8 ; variable_8 = func_5 ( variable_0 ) ; if ( variable_8 != NULL ) FreeLibrary ( variable_8 ) ;
 int func_0 ( variable_0 * * variable_1 , const char * variable_2 , variable_3 * variable_4 , variable_5 * * variable_6 ) variable_0 * variable_7 = * variable_1 ; variable_8 * variable_9 = ( ( void * ) 0 ) ; if ( ! variable_7 && ! ( variable_7 = func_1 ( ) ) ) if ( ! variable_7 -> variable_10 ) if ( variable_4 ) variable_7 -> variable_11 = variable_4 ; if ( ( variable_12 = func_2 ( variable_7 , & variable_13 ) ) < 0 ) if ( ( variable_12 = func_3 ( variable_7 , variable_2 , & variable_13 ) ) < 0 ) static int func_4 ( variable_0 * variable_7 , const char * variable_2 , variable_5 * * variable_6 ) int variable_12 ; if ( variable_7 -> variable_14 ) variable_7 -> variable_15 |= 0 variable_16 ; if ( ! variable_7 -> variable_11 ) return func_5 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_6 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_7 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_8 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_9 ( " aac " ) ; variable_3 * func_10 ( const char * variable_29 ) variable_3 * variable_4 = ( ( void * ) 0 ) ; while ( variable_4 = func_11 ( variable_4 ) ) variable_3 * func_12 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( func_13 ( variable_29 , variable_4 -> variable_33 ) ) static int func_14 ( const char * variable_33 , const char * variable_34 ) const char * variable_35 ; int variable_36 ; int variable_37 ; if ( ! variable_33 || ! variable_34 ) return 0 ; variable_37 = ( strlen ( variable_33 ) ) ; while ( variable_35 = ( strchr ( variable_34 , ' , ' ) ) ) variable_36 = ( ( variable_35 - variable_34 > variable_37 ? variable_35 - variable_34 : variable_37 ) ) ; if ( ! func_15 ( variable_33 , variable_34 , variable_36 ) ) return 1 ; variable_34 = variable_35 + 1 ; return ! func_16 ( variable_33 , variable_34 ) ; return variable_4 ; return ( ( void * ) 0 ) ; for ( variable_26 = 2048 ; variable_26 <= variable_21 && ! ( * variable_4 ) ; variable_26 = ( ( ( variable_26 << 1 ) > ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) ? ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) : ( variable_26 << 1 ) ) ) ) void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_17 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_18 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_19 ( & variable_22 , 1 , & variable_39 ) ; variable_3 * func_20 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_21 ( variable_22 , variable_42 , & variable_44 ) ; variable_3 * func_22 ( variable_41 * variable_22 , int variable_42 , int * variable_44 ) AVProbeData variable_45 = * variable_22 ; variable_3 * variable_46 = ( ( void * ) 0 ) ; variable_3 * variable_4 ; int variable_39 ; int variable_47 = 0 ; int variable_43 = 0 ; static const uint8_t variable_48 [ 32 ] ; if ( ! variable_45 . variable_23 ) variable_45 . variable_23 = variable_48 ; if ( variable_45 . variable_40 > ' \n ' && func_23 ( variable_45 . variable_23 , " ID3 " ) ) int variable_49 = func_24 ( variable_45 . variable_23 ) ; if ( variable_45 . variable_40 > variable_49 + 16 ) variable_45 . variable_23 += variable_49 ; variable_45 . variable_40 -= variable_49 ; variable_47 = 1 ; variable_4 = ( ( void * ) 0 ) ; while ( variable_46 = func_25 ( variable_46 ) ) variable_3 * func_26 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( ! variable_42 == ! ( variable_46 -> variable_15 & 0 variable_28 ) ) variable_39 = 0 ; if ( variable_46 -> variable_50 ) variable_39 = ( ( variable_46 -> variable_50 ) ( & variable_45 ) ) ; if ( variable_46 -> variable_51 && func_27 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_28 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_29 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ( variable_39 > ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ? variable_39 : ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ) ; if ( variable_46 -> variable_51 ) if ( func_30 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_31 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_32 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ' 2 ' ; if ( variable_39 > variable_43 ) variable_43 = variable_39 ; variable_4 = variable_46 ; if ( variable_39 == variable_43 ) variable_4 = ( ( void * ) 0 ) ; return variable_4 ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_33 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; return 0 ; if ( variable_7 -> variable_11 && variable_7 -> variable_11 -> variable_15 & 0 variable_28 || ! variable_7 -> variable_11 && ( variable_7 -> variable_11 = func_34 ( & variable_22 , 0 , & variable_39 ) ) ) variable_3 * func_35 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_36 ( variable_22 , variable_42 , & variable_44 ) ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; return 0 ; if ( ( variable_12 = func_37 ( & variable_7 -> variable_14 , variable_2 , 1 | variable_7 -> variable_55 , ( & variable_7 -> variable_56 ) , variable_6 ) ) < 0 ) return variable_12 ; if ( variable_7 -> variable_11 ) return 0 ; return func_38 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_39 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_40 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_41 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_42 ( " aac " ) ; void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_43 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_44 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_45 ( & variable_22 , 1 , & variable_39 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_46 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; if ( variable_7 -> variable_11 -> variable_15 & 0 variable_57 ) if ( ! func_47 ( variable_2 ) ) int func_48 ( const char * variable_2 ) char variable_23 [ 1024 ] ; return variable_2 && func_49 ( variable_23 , ( sizeof ( variable_23 ) ) , variable_2 , 1 ) >= 0 ; int func_50 ( char * variable_23 , int variable_40 , const char * variable_58 , int variable_59 ) const char * variable_35 ; char * variable_54 ; char variable_60 [ 20 ] ; char variable_61 ; int variable_62 ; int variable_36 ; int variable_63 ; variable_54 = variable_23 ; variable_35 = variable_58 ; variable_63 = 0 ; variable_61 = * ( variable_35 ++ ) ; if ( variable_61 == ' \0 ' ) if ( variable_61 == ' % ' ) variable_62 = 0 ; while ( func_51 ( ( * variable_35 ) ) ) variable_62 = variable_62 * ' \n ' + ( * ( variable_35 ++ ) ) - 48 ; variable_61 = * ( variable_35 ++ ) ; while ( func_52 ( variable_61 ) ) switch ( variable_61 ) if ( variable_63 ) variable_63 = 1 ; snprintf ( variable_60 , sizeof ( variable_60 ) , " % 0 *  d " , variable_62 , variable_59 ) ; variable_36 = ( strlen ( variable_60 ) ) ; if ( variable_54 - variable_23 + variable_36 > ( variable_40 - 1 ) ) memcpy ( variable_54 , variable_60 , variable_36 ) ; variable_54 += variable_36 ; if ( variable_54 - variable_23 < ( variable_40 - 1 ) ) * ( variable_54 ++ ) = variable_61 ; if ( ! variable_63 ) return 0 ; return - 1 ; variable_7 -> variable_64 = variable_7 -> variable_65 = ( ( variable_66 ) 0 variable_67 ) ; if ( variable_7 -> variable_11 -> variable_68 > 0 ) if ( ! ( variable_7 -> variable_69 = func_53 ( ( variable_7 -> variable_11 -> variable_68 ) ) ) ) if ( variable_7 -> variable_11 -> variable_70 ) * ( ( const AVClass * * ) ( variable_7 -> variable_69 ) ) = variable_7 -> variable_11 -> variable_70 ; if ( ( variable_12 = func_54 ( variable_7 -> variable_69 , & variable_13 ) ) < 0 ) if ( ! ( variable_7 -> variable_15 & 0 variable_71 ) && variable_7 -> variable_11 -> variable_72 ) if ( ( variable_12 = ( ( variable_7 -> variable_11 -> variable_72 ) ( variable_7 ) ) ) < 0 ) if ( variable_9 ) if ( ! strcmp ( variable_7 -> variable_11 -> variable_33 , " mp3 " ) || ! strcmp ( variable_7 -> variable_11 -> variable_33 , " aac " ) )
