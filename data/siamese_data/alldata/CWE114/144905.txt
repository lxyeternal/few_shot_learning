 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( variable_2 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = func_9 ( variable_0 ) ; if ( variable_23 != NULL ) FreeLibrary ( variable_23 ) ;
 void func_0 ( char * variable_0 , int variable_1 , variable_2 * variable_3 , int variable_4 ) const char * variable_5 ; const char * variable_6 ; const char * variable_7 = ( ( void * ) 0 ) ; const AVCodec * variable_8 ; int variable_9 ; AVRational variable_10 ; if ( ! variable_0 || variable_1 <= 0 ) variable_5 = func_1 ( variable_3 -> variable_5 ) ; variable_6 = func_2 ( variable_3 -> variable_11 ) ; const char * func_3 ( enum AVCodecID variable_12 ) const AVCodecDescriptor * variable_13 ; variable_14 * variable_15 ; if ( variable_12 == variable_16 ) return " none " ; variable_13 = func_4 ( variable_12 ) ; if ( variable_13 ) return variable_13 -> variable_17 ; variable_15 = func_5 ( variable_12 ) ; variable_14 * func_6 ( enum AVCodecID variable_12 ) return func_7 ( variable_12 , 0 ) ; static variable_14 * func_8 ( enum AVCodecID variable_12 , int variable_18 ) variable_14 * variable_8 ; variable_14 * variable_19 = ( ( void * ) 0 ) ; variable_8 = variable_20 ; variable_12 = func_9 ( variable_12 ) ; static enum AVCodecID func_10 ( enum AVCodecID variable_12 ) switch ( variable_12 ) return variable_21 ; return variable_22 ; return variable_12 ; while ( variable_8 ) if ( ( ( variable_18 ? func_11 ( variable_8 ) : func_12 ( variable_8 ) ) ) && ( variable_8 -> variable_12 ) == variable_12 ) int func_13 ( const AVCodec * variable_15 ) return variable_15 && variable_15 -> variable_23 ; int func_14 ( const AVCodec * variable_15 ) return variable_15 && ( variable_15 -> variable_24 || variable_15 -> variable_25 ) ; if ( variable_8 -> variable_26 & 0 variable_27 && ! variable_19 ) variable_19 = variable_8 ; return variable_8 ; variable_8 = variable_8 -> variable_28 ; return variable_19 ; if ( variable_15 ) return variable_15 -> variable_17 ; variable_15 = func_15 ( variable_12 ) ; variable_14 * func_16 ( enum AVCodecID variable_12 ) return func_17 ( variable_12 , 1 ) ; static variable_14 * func_18 ( enum AVCodecID variable_12 , int variable_18 ) variable_14 * variable_8 ; variable_14 * variable_19 = ( ( void * ) 0 ) ; variable_8 = variable_20 ; variable_12 = func_19 ( variable_12 ) ; while ( variable_8 ) if ( ( ( variable_18 ? func_20 ( variable_8 ) : func_21 ( variable_8 ) ) ) && ( variable_8 -> variable_12 ) == variable_12 ) if ( variable_8 -> variable_26 & 0 variable_27 && ! variable_19 ) variable_19 = variable_8 ; return variable_8 ; variable_8 = variable_8 -> variable_28 ; return variable_19 ; if ( variable_15 ) return variable_15 -> variable_17 ; return " unknown_codec " ; if ( variable_3 -> variable_7 != - ' c ' ) if ( variable_3 -> variable_15 ) variable_8 = variable_3 -> variable_15 ; variable_8 = ( ( variable_4 ? func_22 ( variable_3 -> variable_11 ) : func_23 ( variable_3 -> variable_11 ) ) ) ; variable_14 * func_24 ( enum AVCodecID variable_12 ) return func_25 ( variable_12 , 0 ) ; variable_14 * func_26 ( enum AVCodecID variable_12 ) return func_27 ( variable_12 , 1 ) ; if ( variable_8 ) variable_7 = func_28 ( variable_8 , variable_3 -> variable_7 ) ; const char * func_29 ( const AVCodec * variable_15 , int variable_7 ) const AVProfile * variable_8 ; if ( variable_7 == - ' c ' || ! variable_15 -> variable_29 ) return ( ( void * ) 0 ) ; for ( variable_8 = variable_15 -> variable_29 ; variable_8 -> variable_7 != - ' c ' ; variable_8 ++ ) if ( variable_8 -> variable_7 == variable_7 ) return variable_8 -> variable_17 ; return ( ( void * ) 0 ) ; snprintf ( variable_0 , variable_1 , " %s : %s %s " , ( variable_5 ? variable_5 : " unknown " ) , variable_6 , ( variable_3 -> variable_30 ? " ( hq ) " : " " ) ) ; variable_0 [ 0 ] ^= '  a ' ^ ' A ' ; if ( variable_7 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " ( %s ) " , variable_7 ) ; if ( variable_3 -> variable_31 ) char variable_32 [ 32 ] ; snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " ( %s / 0 x % 04X ) " , variable_32 , variable_3 -> variable_31 ) ; switch ( variable_3 -> variable_5 ) if ( ( variable_3 -> variable_33 ) != variable_34 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %s " , func_30 ( variable_3 -> variable_33 ) ) ; if ( variable_3 -> variable_35 && variable_3 -> variable_35 <= func_31 ( variable_3 -> variable_33 ) -> variable_36 [ 0 ] . variable_37 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " ( %d bpc ) " , variable_3 -> variable_35 ) ; if ( variable_3 -> variable_38 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %d x %d " , variable_3 -> variable_38 , variable_3 -> variable_39 ) ; if ( variable_3 -> variable_40 . variable_41 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " [ SAR %d : %d DAR %d : %d ] " , variable_3 -> variable_40 . variable_41 , variable_3 -> variable_40 . variable_42 , variable_10 . variable_41 , variable_10 . variable_42 ) ; if ( func_32 ( ) >= 48 ) int variable_43 = ( func_33 ( variable_3 -> variable_44 . variable_41 , variable_3 -> variable_44 . variable_42 ) ) ; snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %d / %d " , variable_3 -> variable_44 . variable_41 / variable_43 , variable_3 -> variable_44 . variable_42 / variable_43 ) ; if ( variable_4 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , q = %d - %d " , variable_3 -> variable_45 , variable_3 -> variable_46 ) ; if ( variable_3 -> variable_47 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %d Hz " , variable_3 -> variable_47 ) ; if ( ( variable_3 -> variable_48 ) != variable_49 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %s " , func_34 ( variable_3 -> variable_48 ) ) ; if ( func_35 ( ) >= 48 ) int variable_43 = ( func_36 ( variable_3 -> variable_44 . variable_41 , variable_3 -> variable_44 . variable_42 ) ) ; if ( variable_43 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %d / %d " , variable_3 -> variable_44 . variable_41 / variable_43 , variable_3 -> variable_44 . variable_42 / variable_43 ) ; if ( variable_4 ) if ( variable_3 -> variable_50 & 0 variable_27 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , pass 1 " ) ; if ( variable_3 -> variable_50 & 0 variable_51 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , pass 2 " ) ; variable_9 = func_37 ( variable_3 ) ; static int func_38 ( variable_2 * variable_52 ) int variable_53 ; int variable_54 ; switch ( variable_52 -> variable_5 ) variable_53 = variable_52 -> variable_53 ; variable_54 = func_39 ( variable_52 -> variable_11 ) ; int func_40 ( enum AVCodecID variable_11 ) switch ( variable_11 ) return 2 ; return 3 ; return 4 ; return func_41 ( variable_11 ) ; int func_42 ( enum AVCodecID variable_11 ) switch ( variable_11 ) return 4 ; return 8 ; return 16 ; return 24 ; return 32 ; return 64 ; return 0 ; variable_53 = ( variable_54 ? variable_52 -> variable_47 * variable_52 -> variable_55 * variable_54 : variable_52 -> variable_53 ) ; variable_53 = 0 ; return variable_53 ; if ( variable_9 != 0 ) snprintf ( variable_0 + strlen ( variable_0 ) , variable_1 - strlen ( variable_0 ) , " , %d kb / s " , variable_9 / 1000 ) ;
