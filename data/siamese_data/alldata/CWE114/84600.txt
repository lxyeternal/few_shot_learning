 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_2 = wcslen ( variable_0 ) ; wchar_t * variable_3 = func_3 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; HMODULE variable_5 ; variable_5 = func_4 ( variable_0 ) ; if ( variable_5 != NULL ) FreeLibrary ( variable_5 ) ;
 void func_0 ( int variable_0 ) char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_1 = getenv ( " AMOEBIDAE_PRESBYACUSIA " ) ; if ( variable_1 != 0 ) variable_3 = ( ( char * ) variable_1 ) ; if ( strlen ( variable_3 ) < 20 ) variable_4 = ( struct stonesoup_struct * ) malloc ( sizeof ( struct variable_5 ) ) ; if ( variable_4 != NULL ) memset ( variable_4 -> variable_6 , 0 , 20 ) ; variable_4 -> variable_7 = variable_4 -> variable_6 ; func_3 ( variable_3 , variable_4 -> variable_6 ) ; variable_8 = strlen ( variable_4 -> variable_7 ) ; func_4 ( variable_9 , variable_10 , " stonesoup_opt_var " , variable_8 , & variable_8 , " TRIGGER - POINT " ) ; for ( ; variable_11 < variable_8 ; ++ variable_11 ) variable_4 -> variable_6 [ variable_11 ] = func_5 ( variable_4 -> variable_6 [ variable_11 ] ) ; int func_6 ( int variable_12 ) if ( variable_12 >= 97 && variable_12 <= 122 ) return variable_12 - 32 ; return variable_12 ; func_7 ( " %s \n " , variable_4 -> variable_6 ) ; void func_8 ( char * variable_13 , . . . ) va_start ( variable_14 , variable_13 ) ; vfprintf ( variable_15 , variable_13 , variable_14 ) ; func_9 ( " %s \n " , variable_4 -> variable_7 ) ; void func_10 ( char * variable_13 , . . . ) va_start ( variable_14 , variable_13 ) ; vfprintf ( variable_15 , variable_13 , variable_14 ) ; free ( variable_4 ) ;
 variable_0 * func_0 ( const char * * variable_1 , variable_2 * * variable_3 , const apr_array_header_t * variable_4 , svn_boolean_t variable_5 , variable_6 * variable_7 , variable_6 * variable_8 ) int variable_9 ; if ( variable_4 -> variable_10 <= 0 ) * variable_1 = func_1 ( ( ( const char * * ) ( variable_4 -> variable_11 ) ) [ 0 ] , variable_8 ) ; const char * func_2 ( const char * variable_12 , variable_6 * variable_13 ) return func_3 ( variable_14 , variable_12 , variable_13 ) ; static const char * func_4 ( path_type_t variable_15 , const char * variable_16 , variable_6 * variable_13 ) char * variable_17 ; char * variable_18 ; const char * variable_19 ; apr_size_t variable_20 ; apr_size_t variable_21 = 0 ; apr_size_t variable_22 = 0 ; svn_boolean_t variable_23 = 0 ; char * variable_24 = ( ( void * ) 0 ) ; if ( variable_16 [ 0 ] == ' \0 ' ) return " " ; variable_18 = variable_17 = ( memset ( func_5 ( variable_13 , strlen ( variable_16 ) + 1 ) , 0 , strlen ( variable_16 ) + 1 ) ) ; variable_19 = variable_16 ; if ( variable_15 == variable_14 ) while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != ' : ' ) variable_19 ++ ; if ( ( * variable_19 ) == ' : ' && ( * ( variable_19 + 1 ) ) == 47 && ( * ( variable_19 + 2 ) ) == 47 ) const char * variable_25 ; variable_23 = ! 0 ; variable_19 = variable_16 ; while ( ( * variable_19 ) != ' : ' ) * ( variable_18 ++ ) = func_6 ( * ( variable_19 ++ ) ) ; static char func_7 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; variable_21 ++ ; * ( variable_18 ++ ) = ' : ' ; * ( variable_18 ++ ) = 47 ; * ( variable_18 ++ ) = 47 ; variable_19 += 3 ; variable_21 += 3 ; variable_25 = variable_19 ; while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != 64 ) variable_19 ++ ; if ( ( * variable_19 ) == 64 ) variable_20 = ( variable_19 - variable_25 + 1 ) ; memcpy ( variable_18 , variable_25 , variable_20 ) ; variable_18 += variable_20 ; variable_19 ++ ; variable_19 = variable_25 ; if ( ( * variable_19 ) == ' [ ' ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( ( * variable_19 ) == ' : ' || ( * variable_19 ) >= 48 && ( * variable_19 ) <= ' 9 ' || ( * variable_19 ) >= ' a ' && ( * variable_19 ) <= ' f ' || ( * variable_19 ) >= 65 && ( * variable_19 ) <= ' F ' ) * ( variable_18 ++ ) = func_8 ( * ( variable_19 ++ ) ) ; static char func_9 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; if ( ( * variable_19 ) == ' ] ' ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != ' : ' ) * ( variable_18 ++ ) = func_10 ( * ( variable_19 ++ ) ) ; static char func_11 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; if ( ( * variable_19 ) == ' : ' ) if ( variable_19 [ 1 ] == 56 && variable_19 [ 2 ] == 48 && ( variable_19 [ 3 ] == 47 || ! variable_19 [ 3 ] ) && ! strncmp ( variable_17 , " http : " , 5 ) ) variable_19 += 3 ; if ( variable_19 [ 1 ] == 52 && variable_19 [ 2 ] == 52 && variable_19 [ 3 ] == 51 && ( variable_19 [ 4 ] == 47 || ! variable_19 [ 4 ] ) && ! strncmp ( variable_17 , " https : " , 6 ) ) variable_19 += 4 ; if ( variable_19 [ 1 ] == 51 && variable_19 [ 2 ] == ' 6 ' && variable_19 [ 3 ] == ' 9 ' && variable_19 [ 4 ] == 48 && ( variable_19 [ 5 ] == 47 || ! variable_19 [ 5 ] ) && ! strncmp ( variable_17 , " svn : " , 4 ) ) variable_19 += 5 ; if ( variable_19 [ 1 ] == 47 || ! variable_19 [ 1 ] ) variable_19 += 1 ; while ( * variable_19 && ( * variable_19 ) != 47 ) * ( variable_18 ++ ) = func_12 ( * ( variable_19 ++ ) ) ; static char func_13 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; * variable_18 = * variable_19 ; if ( * variable_19 ) variable_19 ++ ; variable_18 ++ ; variable_24 = variable_18 ; variable_22 = 1 ; if ( ! variable_23 && variable_15 != variable_27 ) variable_19 = variable_16 ; if ( ( * variable_19 ) == 47 ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( * variable_19 ) const char * variable_28 = variable_19 ; apr_size_t variable_29 = 0 ; if ( variable_28 [ 0 ] == 47 ) variable_29 = 1 ; if ( variable_15 == variable_14 && variable_28 [ 0 ] == 37 ) variable_29 = 3 ; variable_20 = ( variable_28 - variable_19 ) ; if ( variable_20 == 0 || variable_20 == 1 && variable_19 [ 0 ] == 46 || variable_15 == variable_14 && variable_20 == 3 && variable_19 [ 0 ] == 37 && variable_19 [ 1 ] == 50 && ( func_14 ( variable_19 [ 2 ] ) ) == '  E ' ) static char func_15 ( char variable_26 ) if ( variable_26 < ' a ' || variable_26 > ' z ' ) return variable_26 ; return ( char ) ( variable_26 - ' a ' + 65 ) ; memcpy ( variable_18 , variable_19 , variable_20 ) ; variable_18 += variable_20 ; if ( variable_29 ) * ( variable_18 ++ ) = 47 ; variable_22 ++ ; variable_19 = variable_28 + variable_29 ; if ( variable_22 > 0 && ( * ( variable_18 - 1 ) ) == 47 && ! ( variable_23 && variable_16 [ variable_21 ] == ' \0 ' ) ) variable_18 -- ; * variable_18 = ' \0 ' ; if ( variable_24 ) int variable_30 = 0 ; variable_19 = variable_24 ; while ( * variable_19 ) switch ( * variable_19 ) if ( ! ( 0 != ( variable_31 [ ( unsigned char ) ( * ( variable_19 + 1 ) ) ] & ( 0 variable_32 | 0 variable_33 ) ) ) || ! ( 0 != ( variable_31 [ ( unsigned char ) ( * ( variable_19 + 2 ) ) ] & ( 0 variable_32 | 0 variable_33 ) ) ) ) variable_30 += 2 ; variable_19 += 2 ; if ( ! variable_34 [ ( unsigned char ) ( * variable_19 ) ] ) variable_30 += 2 ; variable_19 ++ ; if ( variable_30 > 0 ) apr_size_t variable_35 = ( variable_36 ) ( variable_24 - variable_17 ) ; variable_18 = ( func_16 ( variable_13 , ( ( variable_36 ) ( variable_19 - variable_17 ) ) + variable_30 + 1 ) ) ; memcpy ( variable_18 , variable_17 , variable_35 ) ; variable_17 = variable_18 ; return variable_17 ; if ( variable_4 -> variable_10 == 1 ) for ( variable_9 = 1 ; variable_9 < variable_4 -> variable_10 ; ++ variable_9 ) const char * variable_12 = func_17 ( ( ( const char * * ) ( variable_4 -> variable_11 ) ) [ variable_9 ] , variable_8 ) ; const char * func_18 ( const char * variable_12 , variable_6 * variable_13 ) return func_19 ( variable_14 , variable_12 , variable_13 ) ; if ( ( * ( * variable_1 ) ) != ' \0 ' ) * variable_1 = ( func_20 ( * variable_1 , variable_12 , variable_8 ) ) ; char * func_21 ( const char * variable_37 , const char * variable_38 , variable_6 * variable_13 ) apr_size_t variable_39 ; apr_size_t variable_9 = 0 ; while ( 1 ) if ( variable_37 [ variable_9 ] != variable_38 [ variable_9 ] ) return ( func_22 ( variable_13 , " " , sizeof ( " " ) ) ) ; if ( variable_37 [ variable_9 ] == ' : ' ) variable_9 ++ ; variable_9 += 3 ; variable_39 = func_23 ( variable_14 , variable_37 + variable_9 , variable_38 + variable_9 , variable_13 ) ; static apr_size_t func_24 ( path_type_t variable_40 , const char * variable_41 , const char * variable_42 , variable_6 * variable_13 ) apr_size_t variable_43 ; apr_size_t variable_44 ; apr_size_t variable_9 = 0 ; apr_size_t variable_45 = 0 ; variable_43 = strlen ( variable_41 ) ; variable_44 = strlen ( variable_42 ) ; if ( variable_41 [ 0 ] == ' \0 ' || variable_42 [ 0 ] == ' \0 ' ) return 0 ; while ( variable_41 [ variable_9 ] == variable_42 [ variable_9 ] ) if ( variable_41 [ variable_9 ] == 47 ) variable_45 = variable_9 ; variable_9 ++ ; if ( variable_9 == variable_43 || variable_9 == variable_44 ) if ( variable_9 == 1 && variable_41 [ 0 ] == 47 && variable_42 [ 0 ] == 47 ) return 1 ; if ( variable_40 == variable_46 && variable_9 == 0 ) return 0 ; if ( variable_9 == variable_43 && variable_42 [ variable_9 ] == 47 || variable_9 == variable_44 && variable_41 [ variable_9 ] == 47 || variable_9 == variable_43 && variable_9 == variable_44 ) return variable_9 ; if ( variable_45 == 0 && variable_41 [ 0 ] == 47 && variable_42 [ 0 ] == 47 ) return 1 ; return variable_45 ; if ( variable_39 == 0 || variable_39 == 1 && ( variable_37 + variable_9 ) [ 0 ] == 47 ) return ( func_25 ( variable_13 , " " , sizeof ( " " ) ) ) ; return func_26 ( variable_13 , variable_37 , variable_39 + variable_9 ) ; * variable_1 = ( func_27 ( variable_7 , * variable_1 ) ) ; if ( variable_3 != ( ( void * ) 0 ) ) size_t variable_47 ; variable_47 = strlen ( * variable_1 ) ; if ( variable_47 > 0 ) variable_48 += variable_47 ; if ( variable_48 [ 0 ] == 47 || variable_48 [ 0 ] && ! func_28 ( * variable_1 , variable_47 ) ) svn_boolean_t func_29 ( const char * variable_12 , apr_size_t variable_49 ) func_30 ( variable_12 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : func_31 ( " svn_uri_is_canonical ( uri , ( ( void * ) 0 ) ) " , "  dirent_uri . c " , 958 , variable_50 ) ; svn_boolean_t func_32 ( const char * variable_12 , variable_6 * variable_8 ) const char * variable_51 = variable_12 ; const char * variable_25 = variable_12 ; if ( ( * variable_12 ) == ' \0 ' ) if ( ! func_33 ( variable_12 ) ) while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != ' : ' ) variable_51 ++ ; if ( ! ( ( * variable_51 ) == ' : ' && ( * ( variable_51 + 1 ) ) == 47 && ( * ( variable_51 + 2 ) ) == 47 ) ) variable_51 = variable_12 ; while ( ( * variable_51 ) != ' : ' ) if ( ( * variable_51 ) >= 65 && ( * variable_51 ) <= ' Z ' ) variable_51 ++ ; variable_51 += 3 ; if ( ! ( * variable_51 ) ) variable_25 = variable_51 ; while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != 64 ) variable_51 ++ ; if ( ( * variable_51 ) == 64 ) variable_25 = variable_51 + 1 ; variable_51 = variable_25 ; if ( ( * variable_51 ) == ' [ ' ) variable_51 ++ ; while ( ( * variable_51 ) == ' : ' || ( * variable_51 ) >= 48 && ( * variable_51 ) <= ' 9 ' || ( * variable_51 ) >= ' a ' && ( * variable_51 ) <= ' f ' ) variable_51 ++ ; if ( ( * variable_51 ) != ' ] ' ) variable_51 ++ ; while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != ' : ' ) if ( ( * variable_51 ) >= 65 && ( * variable_51 ) <= ' Z ' ) variable_51 ++ ; if ( ( * variable_51 ) == ' : ' ) variable_51 ++ ; variable_24 = variable_51 ; while ( ( * variable_51 ) >= 48 && ( * variable_51 ) <= ' 9 ' ) variable_52 = 10 * variable_52 + ( ( * variable_51 ) - 48 ) ; variable_51 ++ ; if ( variable_51 == variable_24 ) if ( * variable_51 && ( * variable_51 ) != 47 ) if ( variable_52 == 80 && strncmp ( variable_12 , " http : " , 5 ) == 0 ) if ( variable_52 == 443 && strncmp ( variable_12 , " https : " , 6 ) == 0 ) if ( variable_52 == 3690 && strncmp ( variable_12 , " svn : " , 4 ) == 0 ) variable_24 = variable_51 ; apr_size_t variable_20 = ( variable_51 - variable_25 ) ; if ( variable_20 == 1 && ( * variable_25 ) == 46 ) if ( ( * variable_51 ) == 47 && ( * ( variable_51 + 1 ) ) == 47 ) if ( ! ( * variable_51 ) && ( * ( variable_51 - 1 ) ) == 47 && variable_51 - 1 != variable_12 ) if ( ! ( * variable_51 ) ) if ( ( * variable_51 ) == 47 ) variable_51 ++ ; variable_25 = variable_51 ; while ( * variable_51 && ( * variable_51 ) != 47 ) variable_51 ++ ; variable_51 = variable_24 ; while ( * variable_51 ) if ( ( * variable_51 ) == 37 ) if ( ( ( * ( variable_51 + 1 ) ) < 48 || ( * ( variable_51 + 1 ) ) > ' 9 ' ) && ( ( * ( variable_51 + 1 ) ) < 65 || ( * ( variable_51 + 1 ) ) > '  F ' ) ) if ( ( ( * ( variable_51 + 2 ) ) < 48 || ( * ( variable_51 + 2 ) ) > ' 9 ' ) && ( ( * ( variable_51 + 2 ) ) < 65 || ( * ( variable_51 + 2 ) ) > '  F ' ) ) variable_53 [ 0 ] = * ( ++ variable_51 ) ; variable_53 [ 1 ] = * ( ++ variable_51 ) ; variable_53 [ 2 ] = ' \0 ' ; variable_54 = ( ( int ) ( strtol ( variable_53 , ( ( void * ) 0 ) , 16 ) ) ) ; if ( variable_34 [ variable_54 ] ) if ( ( * variable_51 ) != 47 && ! variable_34 [ ( unsigned char ) ( * variable_51 ) ] ) variable_51 ++ ; return variable_49 == func_34 ( variable_12 , variable_49 ) ; static apr_size_t func_35 ( const char * variable_12 , apr_size_t variable_49 ) for ( variable_9 = 0 ; variable_9 < variable_49 ; variable_9 ++ ) if ( variable_12 [ variable_9 ] == 47 ) if ( variable_9 > 0 && variable_12 [ variable_9 - 1 ] == ' : ' && variable_9 < variable_49 - 1 && variable_12 [ variable_9 + 1 ] == 47 ) if ( variable_9 == 5 && strncmp ( " file " , variable_12 , 4 ) == 0 ) for ( variable_9 += 2 ; variable_9 < variable_49 ; variable_9 ++ ) if ( variable_12 [ variable_9 ] == 47 ) return variable_49 ; variable_48 ++ ; * ( ( const char * * ) ( func_36 ( * variable_3 ) ) ) = func_37 ( variable_48 , variable_7 ) ;
 int func_0 ( variable_0 * * variable_1 , const char * variable_2 , variable_3 * variable_4 , variable_5 * * variable_6 ) variable_0 * variable_7 = * variable_1 ; variable_8 * variable_9 = ( ( void * ) 0 ) ; if ( ! variable_7 && ! ( variable_7 = func_1 ( ) ) ) if ( ! variable_7 -> variable_10 ) if ( variable_4 ) variable_7 -> variable_11 = variable_4 ; if ( ( variable_12 = func_2 ( variable_7 , & variable_13 ) ) < 0 ) if ( ( variable_12 = func_3 ( variable_7 , variable_2 , & variable_13 ) ) < 0 ) static int func_4 ( variable_0 * variable_7 , const char * variable_2 , variable_5 * * variable_6 ) int variable_12 ; if ( variable_7 -> variable_14 ) variable_7 -> variable_15 |= 0 variable_16 ; if ( ! variable_7 -> variable_11 ) return func_5 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_6 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_7 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_8 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_9 ( " aac " ) ; variable_3 * func_10 ( const char * variable_29 ) variable_3 * variable_4 = ( ( void * ) 0 ) ; while ( variable_4 = func_11 ( variable_4 ) ) variable_3 * func_12 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( func_13 ( variable_29 , variable_4 -> variable_33 ) ) static int func_14 ( const char * variable_33 , const char * variable_34 ) const char * variable_35 ; int variable_36 ; int variable_37 ; if ( ! variable_33 || ! variable_34 ) return 0 ; variable_37 = ( strlen ( variable_33 ) ) ; while ( variable_35 = ( strchr ( variable_34 , ' , ' ) ) ) variable_36 = ( ( variable_35 - variable_34 > variable_37 ? variable_35 - variable_34 : variable_37 ) ) ; if ( ! func_15 ( variable_33 , variable_34 , variable_36 ) ) return 1 ; variable_34 = variable_35 + 1 ; return ! func_16 ( variable_33 , variable_34 ) ; return variable_4 ; return ( ( void * ) 0 ) ; for ( variable_26 = 2048 ; variable_26 <= variable_21 && ! ( * variable_4 ) ; variable_26 = ( ( ( variable_26 << 1 ) > ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) ? ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) : ( variable_26 << 1 ) ) ) ) void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_17 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_18 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_19 ( & variable_22 , 1 , & variable_39 ) ; variable_3 * func_20 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_21 ( variable_22 , variable_42 , & variable_44 ) ; variable_3 * func_22 ( variable_41 * variable_22 , int variable_42 , int * variable_44 ) AVProbeData variable_45 = * variable_22 ; variable_3 * variable_46 = ( ( void * ) 0 ) ; variable_3 * variable_4 ; int variable_39 ; int variable_47 = 0 ; int variable_43 = 0 ; static const uint8_t variable_48 [ 32 ] ; if ( ! variable_45 . variable_23 ) variable_45 . variable_23 = variable_48 ; if ( variable_45 . variable_40 > ' \n ' && func_23 ( variable_45 . variable_23 , " ID3 " ) ) int variable_49 = func_24 ( variable_45 . variable_23 ) ; if ( variable_45 . variable_40 > variable_49 + 16 ) variable_45 . variable_23 += variable_49 ; variable_45 . variable_40 -= variable_49 ; variable_47 = 1 ; variable_4 = ( ( void * ) 0 ) ; while ( variable_46 = func_25 ( variable_46 ) ) variable_3 * func_26 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( ! variable_42 == ! ( variable_46 -> variable_15 & 0 variable_28 ) ) variable_39 = 0 ; if ( variable_46 -> variable_50 ) variable_39 = ( ( variable_46 -> variable_50 ) ( & variable_45 ) ) ; if ( variable_46 -> variable_51 && func_27 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_28 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_29 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ( variable_39 > ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ? variable_39 : ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ) ; if ( variable_46 -> variable_51 ) if ( func_30 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_31 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_32 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ' 2 ' ; if ( variable_39 > variable_43 ) variable_43 = variable_39 ; variable_4 = variable_46 ; if ( variable_39 == variable_43 ) variable_4 = ( ( void * ) 0 ) ; return variable_4 ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_33 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; return 0 ; if ( variable_7 -> variable_11 && variable_7 -> variable_11 -> variable_15 & 0 variable_28 || ! variable_7 -> variable_11 && ( variable_7 -> variable_11 = func_34 ( & variable_22 , 0 , & variable_39 ) ) ) variable_3 * func_35 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_36 ( variable_22 , variable_42 , & variable_44 ) ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; return 0 ; if ( ( variable_12 = func_37 ( & variable_7 -> variable_14 , variable_2 , 1 | variable_7 -> variable_55 , ( & variable_7 -> variable_56 ) , variable_6 ) ) < 0 ) return variable_12 ; if ( variable_7 -> variable_11 ) return 0 ; return func_38 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_39 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_40 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_41 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_42 ( " aac " ) ; void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_43 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_44 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_45 ( & variable_22 , 1 , & variable_39 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_46 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; if ( variable_7 -> variable_11 -> variable_15 & 0 variable_57 ) if ( ! func_47 ( variable_2 ) ) int func_48 ( const char * variable_2 ) char variable_23 [ 1024 ] ; return variable_2 && func_49 ( variable_23 , ( sizeof ( variable_23 ) ) , variable_2 , 1 ) >= 0 ; int func_50 ( char * variable_23 , int variable_40 , const char * variable_58 , int variable_59 ) const char * variable_35 ; char * variable_54 ; char variable_60 [ 20 ] ; char variable_61 ; int variable_62 ; int variable_36 ; int variable_63 ; variable_54 = variable_23 ; variable_35 = variable_58 ; variable_63 = 0 ; variable_61 = * ( variable_35 ++ ) ; if ( variable_61 == ' \0 ' ) if ( variable_61 == ' % ' ) variable_62 = 0 ; while ( func_51 ( ( * variable_35 ) ) ) variable_62 = variable_62 * ' \n ' + ( * ( variable_35 ++ ) ) - 48 ; variable_61 = * ( variable_35 ++ ) ; while ( func_52 ( variable_61 ) ) switch ( variable_61 ) if ( variable_63 ) variable_63 = 1 ; snprintf ( variable_60 , sizeof ( variable_60 ) , " % 0 *  d " , variable_62 , variable_59 ) ; variable_36 = ( strlen ( variable_60 ) ) ; if ( variable_54 - variable_23 + variable_36 > ( variable_40 - 1 ) ) memcpy ( variable_54 , variable_60 , variable_36 ) ; variable_54 += variable_36 ; if ( variable_54 - variable_23 < ( variable_40 - 1 ) ) * ( variable_54 ++ ) = variable_61 ; if ( ! variable_63 ) return 0 ; return - 1 ; variable_7 -> variable_64 = variable_7 -> variable_65 = ( ( variable_66 ) 0 variable_67 ) ; if ( variable_7 -> variable_11 -> variable_68 > 0 ) if ( ! ( variable_7 -> variable_69 = func_53 ( ( variable_7 -> variable_11 -> variable_68 ) ) ) ) if ( variable_7 -> variable_11 -> variable_70 ) * ( ( const AVClass * * ) ( variable_7 -> variable_69 ) ) = variable_7 -> variable_11 -> variable_70 ; if ( ( variable_12 = func_54 ( variable_7 -> variable_69 , & variable_13 ) ) < 0 ) if ( ! ( variable_7 -> variable_15 & 0 variable_71 ) && variable_7 -> variable_11 -> variable_72 ) if ( ( variable_12 = ( ( variable_7 -> variable_11 -> variable_72 ) ( variable_7 ) ) ) < 0 ) if ( variable_9 ) if ( ! strcmp ( variable_7 -> variable_11 -> variable_33 , " mp3 " ) || ! strcmp ( variable_7 -> variable_11 -> variable_33 , " aac " ) )
