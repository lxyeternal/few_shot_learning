 static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; * variable_2 = variable_3 ; twoIntsStruct variable_3 = * variable_2 ; func_1 ( variable_3 . variable_4 ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; func_3 ( variable_3 . variable_6 ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_2 ) ;
 func_0 ( const unsigned int variable_0 , struct variable_1 * variable_2 , const char struct variable_3 * variable_4 , const struct variable_5 * variable_6 ) int variable_7 ; if ( ( variable_2 -> variable_8 ) && variable_9 ) if ( variable_4 && variable_4 -> variable_10 ) variable_11 = kmalloc ( variable_12 * 2 , variable_13 ) ; if ( variable_11 == NULL ) variable_7 = func_1 ( variable_11 , variable_9 , strlen ( variable_9 ) , variable_6 ) + 1 ; variable_7 *= 2 ; if ( variable_7 < 2 ) variable_14 -> variable_15 = func_2 ( variable_7 - 2 ) ; variable_16 [ 1 ] . variable_17 = variable_7 ; func_3 ( variable_14 , variable_7 - 1 ) ; variable_18 = func_4 ( variable_0 , variable_2 , variable_16 , 2 , & variable_19 , 0 ) ; variable_20 = ( struct smb2_tree_connect_rsp * ) variable_16 [ 0 ] . variable_21 ; if ( variable_18 != 0 ) variable_2 -> variable_22 = variable_20 -> variable_23 . variable_24 ; if ( variable_20 -> variable_25 & variable_26 ) if ( variable_20 -> variable_25 & variable_27 ) if ( variable_20 -> variable_25 & variable_28 ) func_5 ( variable_29 , " unknown share type %d \n " , variable_20 -> variable_25 ) ; variable_4 -> variable_30 = func_6 ( variable_20 -> variable_31 ) ; variable_4 -> variable_32 = variable_20 -> variable_33 ; variable_4 -> variable_34 = func_7 ( variable_20 -> variable_35 ) ; variable_4 -> variable_36 = variable_37 ; variable_4 -> variable_38 = false ; variable_4 -> variable_39 = variable_20 -> variable_23 . variable_24 ; func_8 ( variable_4 -> variable_40 , variable_9 , sizeof ( variable_4 -> variable_40 ) ) ; if ( ( variable_20 -> variable_33 & variable_41 ) && ( ( variable_4 -> variable_30 & variable_42 ) == 0 ) ) func_9 ( variable_4 ) ; if ( variable_4 -> variable_2 -> variable_8 -> variable_43 -> variable_44 ) variable_18 = variable_4 -> variable_2 -> variable_8 -> variable_43 -> func_10 ( variable_0 , variable_4 ) ; func_11 ( variable_19 , variable_20 ) ; return variable_18 ; if ( variable_20 -> variable_23 . variable_45 == variable_46 )
 static int func_0 ( variable_0 * variable_1 , variable_0 * variable_2 ) unsigned int variable_3 ; unsigned int variable_4 ; int variable_5 , variable_6 ; unsigned int variable_7 , variable_8 , variable_9 , variable_10 ; int variable_11 , variable_12 ; int variable_13 ; int variable_14 = 0 ; variable_1 -> variable_15 . variable_16 = variable_1 -> variable_17 . variable_18 ; variable_1 -> variable_15 . variable_19 = variable_1 -> variable_17 . variable_20 ; variable_3 = func_1 ( & variable_1 -> variable_21 ) ; if ( variable_3 == 0 ) variable_2 -> variable_22 = 0 ; if ( ! variable_2 -> variable_23 ) variable_1 -> variable_24 = NULL ; variable_7 = func_2 ( & variable_1 -> variable_21 ) ; if ( variable_7 > 9 ) if ( variable_7 > 4 ) variable_7 -= 5 ; variable_1 -> variable_25 = 0 ; variable_7 = variable_26 [ variable_7 ] ; variable_1 -> variable_7 = variable_7 ; variable_1 -> variable_27 = variable_7 & 3 ; variable_1 -> variable_28 = variable_1 -> variable_7 ; variable_4 = func_3 ( & variable_1 -> variable_21 ) ; if ( variable_4 >= variable_29 ) if ( ! variable_2 -> variable_30 [ variable_4 ] ) variable_1 -> variable_31 = * variable_2 -> variable_30 [ variable_4 ] ; if ( ! variable_2 -> variable_32 [ variable_1 -> variable_31 . variable_33 ] ) if ( variable_1 -> variable_31 . variable_33 != variable_1 -> variable_34 variable_2 -> variable_32 [ variable_1 -> variable_31 . variable_33 ] -> new variable_2 -> variable_32 [ variable_1 -> variable_31 . variable_33 ] -> new = 0 variable_1 -> variable_34 = variable_1 -> variable_31 . variable_33 ; variable_1 -> variable_35 = * variable_2 -> variable_32 [ variable_1 -> variable_31 . variable_33 ] ; if ( variable_1 -> variable_36 != variable_1 -> variable_35 . variable_36 || variable_1 -> variable_37 != variable_1 -> variable_35 . variable_37 * ( 2 - variable_1 -> variable_35 . variable_38 ) || variable_1 -> variable_39 -> variable_40 != variable_1 -> variable_35 . variable_41 || variable_1 -> variable_42 != variable_1 -> variable_35 . variable_43 ) variable_14 = 1 ; if ( variable_1 -> variable_41 != variable_1 -> variable_35 . variable_41 || variable_1 -> variable_43 != variable_1 -> variable_35 . variable_43 ) variable_1 -> variable_41 = variable_1 -> variable_35 . variable_41 ; variable_1 -> variable_43 = variable_1 -> variable_35 . variable_43 ; variable_14 = 1 ; if ( ( variable_6 = func_4 ( variable_1 ) ) < 0 ) variable_1 -> variable_39 -> variable_44 = func_5 ( & variable_1 -> variable_35 ) ; variable_1 -> variable_39 -> variable_45 = variable_1 -> variable_35 . variable_46 ; variable_1 -> variable_39 -> variable_47 = variable_1 -> variable_35 . variable_48 ; variable_13 = ( variable_1 -> variable_49 && ( 16 * variable_1 -> variable_35 . variable_36 != variable_1 -> variable_39 -> variable_50 || 16 * variable_1 -> variable_35 . variable_37 * ( 2 - variable_1 -> variable_35 . variable_38 ) != variable_1 -> variable_39 -> variable_51 || variable_1 -> variable_39 -> variable_40 != variable_1 -> variable_35 . variable_41 || variable_1 -> variable_42 != variable_1 -> variable_35 . variable_43 || func_6 ( variable_1 -> variable_35 . variable_52 , variable_1 -> variable_39 -> variable_53 ) || variable_1 -> variable_36 != variable_1 -> variable_35 . variable_36 || variable_1 -> variable_37 != variable_1 -> variable_35 . variable_37 * ( 2 - variable_1 -> variable_35 . variable_38 ) ) ) ; if ( variable_2 -> variable_39 -> variable_54 != func_7 ( variable_2 , 0 ) ) variable_13 = 1 ; variable_1 -> variable_36 = variable_1 -> variable_35 . variable_36 ; variable_1 -> variable_37 = variable_1 -> variable_35 . variable_37 * ( 2 - variable_1 -> variable_35 . variable_38 ) ; variable_1 -> variable_55 = variable_1 -> variable_36 * variable_1 -> variable_37 ; variable_1 -> variable_56 = variable_1 -> variable_36 + 1 ; variable_1 -> variable_57 = variable_1 -> variable_36 * 4 ; variable_1 -> variable_58 = variable_1 -> variable_35 . variable_43 <= 1 ; variable_1 -> variable_59 = 16 * variable_1 -> variable_36 ; variable_1 -> variable_60 = 16 * variable_1 -> variable_37 ; variable_6 = func_8 ( variable_1 ) ; if ( variable_6 < 0 ) if ( variable_1 -> variable_35 . variable_61 ) variable_1 -> variable_39 -> variable_62 = variable_1 -> variable_35 . variable_63 > 0 ? variable_64 : variable_65 ; if ( variable_1 -> variable_35 . variable_66 ) if ( variable_1 -> variable_39 -> variable_67 != variable_1 -> variable_35 . variable_67 ) variable_14 = 1 ; variable_1 -> variable_39 -> variable_68 = variable_1 -> variable_35 . variable_68 ; variable_1 -> variable_39 -> variable_69 = variable_1 -> variable_35 . variable_69 ; variable_1 -> variable_39 -> variable_67 = variable_1 -> variable_35 . variable_67 ; if ( variable_1 -> variable_49 && ( variable_1 -> variable_59 != variable_1 -> variable_39 -> variable_50 || variable_1 -> variable_60 != variable_1 -> variable_39 -> variable_51 || variable_13 || variable_14 ) ) if ( variable_1 != variable_2 ) if ( ( variable_6 = func_9 ( variable_1 , 1 ) ) < 0 ) variable_1 -> variable_39 -> variable_54 = variable_6 ; if ( ( variable_6 = func_10 ( variable_1 , 1 ) ) < 0 ) if ( ! variable_1 -> variable_49 ) if ( variable_1 != variable_2 ) if ( ( variable_6 = func_11 ( variable_1 , 1 ) ) < 0 ) variable_1 -> variable_39 -> variable_54 = variable_6 ; if ( ( variable_6 = func_12 ( variable_1 , 0 ) ) < 0 ) if ( variable_1 == variable_2 && variable_1 -> variable_70 != variable_4 ) variable_1 -> variable_70 = variable_4 ; variable_1 -> variable_71 = func_13 ( & variable_1 -> variable_21 , variable_1 -> variable_35 . variable_72 ) ; variable_1 -> variable_73 = 0 ; variable_1 -> variable_74 = 0 ; variable_11 = variable_2 -> variable_75 ; variable_12 = variable_2 -> variable_76 ; variable_1 -> variable_76 = variable_1 -> variable_77 == 0 ; if ( variable_1 -> variable_35 . variable_38 ) variable_1 -> variable_75 = variable_78 ; if ( ! variable_1 -> variable_35 . variable_79 && variable_7 == variable_80 ) if ( func_14 ( & variable_1 -> variable_21 ) ) variable_1 -> variable_75 = variable_81 + func_15 ( & variable_1 -> variable_21 ) ; variable_1 -> variable_75 = variable_78 ; variable_1 -> variable_74 = variable_1 -> variable_35 . variable_82 ; variable_1 -> variable_83 = variable_1 -> variable_75 != variable_78 ; if ( variable_2 -> variable_22 != 0 ) if ( variable_11 != variable_1 -> variable_75 || variable_12 != variable_1 -> variable_76 ) if ( ! variable_2 -> variable_24 ) if ( variable_1 -> variable_71 != variable_1 -> variable_84 && variable_1 -> variable_84 >= 0 ) int variable_85 = variable_1 -> variable_84 ; int variable_86 = 1 << variable_1 -> variable_35 . variable_72 ; if ( variable_85 > variable_1 -> variable_71 ) variable_85 -= variable_86 ; if ( ( variable_1 -> variable_71 - variable_85 ) > variable_1 -> variable_35 . variable_48 ) variable_85 = ( variable_1 -> variable_71 - variable_1 -> variable_35 . variable_48 ) - 1 ; if ( variable_85 < 0 ) variable_85 += variable_86 ; variable_1 -> variable_84 = variable_85 ; if ( variable_2 -> variable_23 ) if ( ! func_16 ( variable_1 ) || variable_1 -> variable_75 == variable_11 ) if ( variable_2 -> variable_24 -> variable_71 != variable_1 -> variable_71 ) if ( ! ( ( variable_11 == variable_81 && variable_1 -> variable_75 == variable_87 ) || ( variable_11 == variable_87 && variable_1 -> variable_75 == variable_81 ) ) ) if ( variable_12 != variable_1 -> variable_76 ) variable_1 -> variable_75 = variable_11 ; variable_1 -> variable_76 = variable_12 ; while ( variable_1 -> variable_71 != variable_1 -> variable_84 && variable_1 -> variable_84 >= 0 && ! variable_2 -> variable_23 && variable_1 -> variable_71 != ( variable_1 -> variable_84 + 1 ) % ( 1 << variable_1 -> variable_35 . variable_72 ) ) variable_88 * variable_89 = variable_1 -> variable_90 ? variable_1 -> variable_91 [ 0 ] : NULL ; if ( ! variable_1 -> variable_35 . variable_92 ) for ( variable_9 = 0 ; variable_9 < func_17 ( variable_1 -> variable_93 ) ; variable_9 ++ ) variable_1 -> variable_93 [ variable_9 ] = variable_94 ; if ( func_18 ( variable_1 ) < 0 ) variable_1 -> variable_84 ++ ; variable_1 -> variable_84 %= 1 << variable_1 -> variable_35 . variable_72 ; variable_1 -> variable_24 -> variable_71 = variable_1 -> variable_84 ; if ( ( variable_6 = func_19 ( variable_1 , 1 ) ) < 0 && variable_1 -> variable_39 -> variable_95 & variable_96 ) if ( func_20 ( variable_1 , variable_1 -> variable_97 , variable_1 -> variable_98 ) < 0 && ( variable_1 -> variable_39 -> variable_95 & variable_96 ) ) if ( variable_1 -> variable_90 ) if ( variable_89 ) variable_1 -> variable_91 [ 0 ] -> variable_99 = variable_89 -> variable_99 + 2 ; variable_1 -> variable_91 [ 0 ] -> variable_71 = variable_1 -> variable_84 ; if ( variable_2 -> variable_23 ) if ( ! func_21 ( variable_1 ) || variable_1 -> variable_75 == variable_11 ) variable_2 -> variable_24 = NULL ; variable_2 -> variable_23 = func_22 ( variable_1 ) ; if ( variable_2 -> variable_24 -> variable_71 != variable_1 -> variable_71 ) variable_2 -> variable_23 = 1 ; variable_2 -> variable_24 = NULL ; variable_2 -> variable_23 = 0 ; variable_2 -> variable_23 = func_23 ( variable_1 ) ; if ( ! func_24 ( variable_1 ) || variable_2 -> variable_23 ) if ( func_25 ( variable_1 ) < 0 ) if ( func_26 ( variable_1 ) ) for ( variable_9 = ( variable_1 -> variable_75 == variable_87 ) ; variable_9 < variable_1 -> variable_37 ; variable_9 ++ ) memset ( variable_1 -> variable_100 , - 1 , ( variable_1 -> variable_37 * variable_1 -> variable_56 - 1 ) * sizeof ( * variable_1 -> variable_100 ) ) ; variable_2 -> variable_101 = - 1 ; if ( variable_1 != variable_2 && ( variable_6 = func_27 ( variable_1 , variable_2 ) ) < 0 ) for ( variable_9 = 0 ; variable_9 < variable_1 -> variable_102 ; variable_9 ++ ) if ( variable_1 -> variable_103 [ variable_9 ] ) variable_6 = func_28 ( variable_1 -> variable_103 [ variable_9 ] , variable_1 -> variable_104 ) ; if ( variable_6 < 0 ) variable_1 -> variable_24 -> variable_71 = variable_1 -> variable_71 ; if ( variable_3 << func_29 ( variable_1 ) >= variable_1 -> variable_55 || variable_3 >= variable_1 -> variable_55 ) variable_1 -> variable_105 = variable_1 -> variable_106 = variable_3 % variable_1 -> variable_36 ; variable_1 -> variable_107 = variable_1 -> variable_108 = ( variable_3 / variable_1 -> variable_36 ) << func_30 ( variable_1 ) ; if ( variable_1 -> variable_75 == variable_87 ) variable_1 -> variable_107 = variable_1 -> variable_108 = variable_1 -> variable_108 + 1 ; if ( variable_1 -> variable_75 == variable_78 ) variable_1 -> variable_109 = variable_1 -> variable_71 ; variable_1 -> variable_110 = 1 << variable_1 -> variable_35 . variable_72 ; variable_1 -> variable_109 = 2 * variable_1 -> variable_71 + 1 ; variable_1 -> variable_110 = 1 << ( variable_1 -> variable_35 . variable_72 + 1 ) ; if ( variable_1 -> variable_35 . variable_111 == 0 ) variable_1 -> variable_112 = func_31 ( & variable_1 -> variable_21 , variable_1 -> variable_35 . variable_113 ) ; if ( variable_1 -> variable_31 . variable_114 == 1 && variable_1 -> variable_75 == variable_78 ) variable_1 -> variable_115 = func_32 ( & variable_1 -> variable_21 ) ; if ( variable_1 -> variable_35 . variable_111 == 1 && ! variable_1 -> variable_35 . variable_116 ) variable_1 -> variable_117 [ 0 ] = func_33 ( & variable_1 -> variable_21 ) ; if ( variable_1 -> variable_31 . variable_114 == 1 && variable_1 -> variable_75 == variable_78 ) variable_1 -> variable_117 [ 1 ] = func_34 ( & variable_1 -> variable_21 ) ; if ( variable_1 -> variable_31 . variable_118 ) variable_1 -> variable_119 = func_35 ( & variable_1 -> variable_21 ) ; variable_1 -> variable_120 [ 0 ] = variable_1 -> variable_31 . variable_120 [ 0 ] ; variable_1 -> variable_120 [ 1 ] = variable_1 -> variable_31 . variable_120 [ 1 ] ; if ( variable_1 -> variable_27 != variable_121 ) unsigned variable_122 [ 2 ] ; variable_122 [ 0 ] = variable_122 [ 1 ] = variable_1 -> variable_75 == variable_78 ? 15 : 31 ; if ( variable_1 -> variable_27 == variable_80 ) variable_1 -> variable_123 = func_36 ( & variable_1 -> variable_21 ) ; variable_5 = func_37 ( & variable_1 -> variable_21 ) ; if ( variable_5 ) variable_1 -> variable_120 [ 0 ] = func_38 ( & variable_1 -> variable_21 ) + 1 ; if ( variable_1 -> variable_27 == variable_80 ) variable_1 -> variable_120 [ 1 ] = func_39 ( & variable_1 -> variable_21 ) + 1 ; variable_1 -> variable_120 [ 1 ] = 1 ; if ( variable_1 -> variable_120 [ 0 ] - 1 > variable_122 [ 0 ] || variable_1 -> variable_120 [ 1 ] - 1 > variable_122 [ 1 ] ) if ( variable_1 -> variable_27 == variable_80 ) variable_1 -> variable_124 = 2 ; variable_1 -> variable_124 = 1 ; variable_1 -> variable_124 = 0 ; variable_1 -> variable_120 [ 0 ] = variable_1 -> variable_120 [ 1 ] = 0 ; if ( variable_1 -> variable_27 != variable_121 && func_40 ( variable_1 ) < 0 ) variable_1 -> variable_120 [ 1 ] = variable_1 -> variable_120 [ 0 ] = 0 ; if ( ( variable_1 -> variable_31 . variable_125 && variable_1 -> variable_27 == variable_126 ) || ( variable_1 -> variable_31 . variable_127 == 1 && variable_1 -> variable_27 == variable_80 ) ) if ( variable_1 -> variable_31 . variable_127 == 2 && variable_1 -> variable_27 == variable_80 ) variable_1 -> variable_128 = 0 ; for ( variable_9 = 0 ; variable_9 < 2 ; variable_9 ++ ) variable_1 -> variable_129 [ variable_9 ] = 0 ; variable_1 -> variable_130 [ variable_9 ] = 0 ; if ( variable_1 -> variable_77 && func_41 ( variable_2 , & variable_1 -> variable_21 , ! ( variable_1 -> variable_39 -> variable_131 & variable_132 ) || variable_2 -> variable_22 == 0 ) < 0 && ( variable_1 -> variable_39 -> variable_95 & variable_96 ) ) if ( variable_1 -> variable_27 != variable_121 && variable_1 -> variable_31 . variable_133 ) variable_8 = func_42 ( & variable_1 -> variable_21 ) ; if ( variable_8 > 2 ) variable_1 -> variable_134 = variable_8 ; variable_1 -> variable_135 = 0 ; variable_8 = variable_1 -> variable_31 . variable_136 + func_43 ( & variable_1 -> variable_21 ) ; if ( variable_8 > 51 + 6 * ( variable_1 -> variable_35 . variable_41 - 8 ) ) variable_1 -> variable_137 = variable_8 ; variable_1 -> variable_138 [ 0 ] = func_44 ( variable_1 , 0 , variable_1 -> variable_137 ) ; variable_1 -> variable_138 [ 1 ] = func_45 ( variable_1 , 1 , variable_1 -> variable_137 ) ; variable_1 -> variable_139 = 1 ; variable_1 -> variable_140 = 52 ; variable_1 -> variable_141 = 52 ; if ( variable_1 -> variable_31 . variable_142 ) variable_8 = func_46 ( & variable_1 -> variable_21 ) ; if ( variable_8 > 2 ) variable_1 -> variable_139 = variable_8 ; if ( variable_1 -> variable_139 < 2 ) variable_1 -> variable_139 ^= 1 ; if ( variable_1 -> variable_139 ) variable_1 -> variable_140 += func_47 ( & variable_1 -> variable_21 ) << 1 ; variable_1 -> variable_141 += func_48 ( & variable_1 -> variable_21 ) << 1 ; if ( variable_1 -> variable_140 > 104U || variable_1 -> variable_141 > 104U ) if ( variable_1 -> variable_39 -> variable_143 >= variable_144 || ( variable_1 -> variable_39 -> variable_143 >= variable_145 && variable_1 -> variable_27 != variable_121 ) || ( variable_1 -> variable_39 -> variable_143 >= variable_146 && variable_1 -> variable_27 == variable_80 ) || ( variable_1 -> variable_39 -> variable_143 >= variable_147 && variable_1 -> variable_77 == 0 ) ) variable_1 -> variable_139 = 0 ; if ( variable_1 -> variable_139 == 1 && variable_2 -> variable_148 > 1 ) if ( variable_1 -> variable_39 -> variable_149 & variable_150 ) variable_2 -> variable_148 = 1 ; if ( ! variable_2 -> variable_151 ) variable_2 -> variable_151 = 1 ; if ( variable_1 != variable_2 ) variable_2 -> variable_101 = variable_7 ; memcpy ( variable_2 -> variable_152 , variable_2 -> variable_120 , sizeof ( variable_2 -> variable_152 ) ) ; variable_1 -> variable_153 = ++ variable_2 -> variable_22 ; if ( variable_1 -> variable_153 ) variable_2 -> variable_154 [ ( variable_1 -> variable_153 - 1 ) & ( variable_155 - 1 ) ] = variable_1 -> variable_107 ; if ( variable_2 -> variable_154 [ variable_1 -> variable_153 & ( variable_155 - 1 ) ] + 3 >= variable_1 -> variable_107 && variable_2 -> variable_154 [ variable_1 -> variable_153 & ( variable_155 - 1 ) ] <= variable_1 -> variable_107 && variable_1 -> variable_153 >= variable_155 ) func_49 ( variable_1 -> variable_39 , variable_156 , " Possibly too many slices ( %d >= %d ) , increase MAX_SLICES and recompile if there are artifacts \n " , variable_1 -> variable_153 , variable_155 ) ; int * variable_157 = variable_1 -> variable_157 [ variable_1 -> variable_153 & ( variable_155 - 1 ) ] [ variable_10 ] ; if ( variable_10 < variable_1 -> variable_124 && variable_9 < variable_1 -> variable_120 [ variable_10 ] && variable_1 -> variable_158 [ variable_10 ] [ variable_9 ] . variable_159 . variable_160 [ 0 ] ) variable_161 * variable_160 = variable_1 -> variable_158 [ variable_10 ] [ variable_9 ] . variable_159 . variable_160 [ 0 ] -> variable_162 ; for ( variable_163 = 0 ; variable_163 < variable_1 -> variable_90 ; variable_163 ++ ) if ( variable_1 -> variable_91 [ variable_163 ] -> variable_159 . variable_160 [ 0 ] -> variable_162 == variable_160 ) for ( variable_163 = 0 ; variable_163 < variable_1 -> variable_164 ; variable_163 ++ ) if ( variable_1 -> variable_165 [ variable_163 ] && variable_1 -> variable_165 [ variable_163 ] -> variable_159 . variable_160 [ 0 ] -> variable_162 == variable_160 ) variable_166 [ variable_9 ] = variable_1 -> variable_90 + variable_163 ; variable_157 [ 0 ] = variable_157 [ 1 ] = - 1 ; for ( variable_9 = 0 ; variable_9 < 16 ; variable_9 ++ ) variable_157 [ variable_9 + 2 ] = 4 * variable_166 [ variable_9 ] + ( variable_1 -> variable_158 [ variable_10 ] [ variable_9 ] . variable_167 & 3 ) ; variable_157 [ 18 + 0 ] = variable_157 [ 18 + 1 ] = - 1 ; for ( variable_9 = 16 ; variable_9 < 48 ; variable_9 ++ ) variable_157 [ variable_9 + 4 ] = 4 * variable_166 [ ( variable_9 - 16 ) >> 1 ] + ( variable_1 -> variable_158 [ variable_10 ] [ variable_9 ] . variable_167 & 3 ) ; if ( variable_1 -> variable_120 [ 0 ] ) variable_1 -> variable_168 . variable_169 = & variable_1 -> variable_158 [ 0 ] [ 0 ] ; if ( variable_1 -> variable_120 [ 1 ] ) variable_1 -> variable_168 . variable_170 = & variable_1 -> variable_158 [ 1 ] [ 0 ] ; variable_1 -> variable_168 . variable_120 = variable_1 -> variable_120 [ 0 ] ; if ( variable_1 -> variable_39 -> variable_171 & variable_172 ) func_50 ( variable_1 -> variable_39 , variable_173 , " slice : %d %s mb : %d %c %s %s pps : % u frame : %d poc : %d / %d ref : %d / %d qp : %d loop : %d : %d : %d weight : %d %s %s \n " , variable_1 -> variable_153 , ( variable_1 -> variable_75 == variable_78 ? " F " : variable_1 -> variable_75 == variable_81 ? " T " : " B " ) , variable_3 , func_51 ( variable_1 -> variable_7 ) , variable_1 -> variable_25 ? " fix " : " " , variable_1 -> variable_174 == variable_175 ? " IDR " : " " , variable_4 , variable_1 -> variable_71 , variable_1 -> variable_24 -> variable_176 [ 0 ] , variable_1 -> variable_24 -> variable_176 [ 1 ] , variable_1 -> variable_120 [ 0 ] , variable_1 -> variable_120 [ 1 ] , variable_1 -> variable_137 , variable_1 -> variable_139 , variable_1 -> variable_140 / 2 - 26 , variable_1 -> variable_141 / 2 - 26 , variable_1 -> variable_128 , variable_1 -> variable_128 == 1 && variable_1 -> variable_177 ? " c " : " " , variable_1 -> variable_7 == variable_80 ? ( variable_1 -> variable_123 ? " SPAT " : " TEMP " ) : " " ) ;
