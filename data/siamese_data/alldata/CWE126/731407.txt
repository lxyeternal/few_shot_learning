 void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_3 = variable_0 ; wchar_t * variable_0 = variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , wcslen ( variable_4 ) * sizeof ( wchar_t ) ) ; func_2 ( variable_4 ) ; void func_3 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )
 static func_0 ( struct variable_0 * variable_0 , const void * variable_1 , size_t variable_2 ) struct variable_3 * variable_4 ; unsigned long variable_5 ; int variable_6 ; const char * variable_7 = variable_1 , * variable_8 , * variable_9 ; if ( variable_2 <= 1 || ! variable_7 || variable_7 [ variable_2 - 1 ] != ' \0 ' ) variable_2 -- ; variable_8 = variable_7 + variable_2 ; variable_9 = memchr ( variable_7 , ' # ' , variable_2 ) ; if ( ! variable_9 ) variable_10 = variable_2 ; const char * variable_11 ; variable_10 = variable_9 - variable_7 ; variable_9 ++ ; const char * variable_12 ; int variable_13 , variable_14 , variable_15 , variable_16 ; variable_11 = memchr ( variable_9 , ' # ' , variable_8 - variable_9 ) ? : variable_8 variable_13 = variable_11 - variable_9 ; if ( ! variable_13 ) variable_12 = memchr ( variable_9 , ' = ' , variable_13 ) ? : variable_8 variable_14 = variable_12 - variable_9 ; variable_12 ++ ; variable_15 = variable_11 - variable_12 ; if ( variable_14 == sizeof ( variable_17 ) - 1 && memcmp ( variable_9 , variable_17 , variable_14 ) == 0 ) if ( variable_15 <= 0 ) variable_6 = func_1 ( variable_12 , 10 , & variable_5 ) ; if ( variable_6 < 0 ) if ( variable_5 < 1 || variable_5 > 511 ) variable_0 -> variable_18 . variable_19 [ 0 ] = - variable_5 ; while ( variable_9 = variable_11 + 1 , variable_9 < variable_8 ) if ( variable_0 -> variable_18 . variable_19 [ 0 ] ) variable_6 = func_2 ( variable_0 , variable_10 ) ; if ( variable_6 < 0 ) variable_4 = kmalloc ( sizeof ( * variable_4 ) + variable_10 + 1 , variable_20 ) ; if ( ! variable_4 ) variable_4 -> variable_2 = variable_10 ; memcpy ( variable_4 -> variable_7 , variable_7 , variable_10 ) ; variable_4 -> variable_7 [ variable_10 ] = ' \0 ' ; func_3 ( variable_0 -> variable_21 . variable_7 , variable_4 ) ;
