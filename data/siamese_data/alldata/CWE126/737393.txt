 void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 50 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , strlen ( variable_3 ) * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 static int func_0 ( struct variable_0 * variable_1 , struct variable_2 struct variable_3 * variable_4 , size_t variable_5 ) struct variable_6 * variable_7 = variable_6 -> variable_7 ; struct variable_8 * variable_9 = ( struct sockaddr_ec * ) variable_4 -> variable_10 ; struct variable_11 * variable_12 ; struct ec_addr variable_13 ; struct aunhdr variable_14 ; if ( variable_4 -> variable_15 & ~ ( variable_16 | variable_17 ) ) if ( variable_9 == NULL ) struct variable_18 * variable_19 = func_1 ( variable_7 ) ; variable_13 . variable_20 = variable_19 -> variable_20 ; variable_13 . variable_21 = variable_19 -> variable_21 ; if ( variable_4 -> variable_22 < sizeof ( struct variable_8 ) ) variable_13 . variable_20 = variable_9 -> variable_13 . variable_20 ; variable_13 . variable_21 = variable_9 -> variable_13 . variable_21 ; variable_12 = variable_23 [ variable_13 . variable_21 ] ; if ( variable_12 == NULL ) variable_12 = variable_23 [ 0 ] ; if ( variable_12 == NULL ) if ( variable_5 + 15 > variable_12 -> variable_24 ) if ( variable_12 -> variable_25 == variable_26 ) if ( variable_27 == NULL ) memset ( & variable_14 , 0 , sizeof ( variable_14 ) ) ; variable_14 . variable_28 = variable_28 ; variable_14 . variable_29 = variable_29 & 0 variable_30 ; variable_14 . variable_31 = 2 ; variable_32 [ 0 ] . variable_33 = ( void * ) & variable_14 ; variable_32 [ 0 ] . variable_34 = variable_35 ; void variable_36 * variable_37 = variable_4 -> variable_38 [ variable_39 ] . variable_33 ; size_t variable_34 = variable_4 -> variable_38 [ variable_39 ] . variable_34 ; if ( ! func_2 ( variable_40 , variable_37 , variable_34 ) ) variable_32 [ variable_39 + 1 ] . variable_33 = variable_37 ; variable_32 [ variable_39 + 1 ] . variable_34 = variable_34 ; variable_35 += variable_34 ; variable_14 . variable_41 = variable_42 ; variable_43 . variable_38 = & variable_32 [ 0 ] ; variable_43 . variable_44 = variable_4 -> variable_44 + 1 ; variable_43 . variable_45 = NULL ; variable_43 . variable_46 = 0 ; variable_43 . variable_15 = 0 ; variable_47 = func_3 ( variable_27 , & variable_43 , variable_35 ) ; return variable_47 ;
