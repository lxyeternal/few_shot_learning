 void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = strtoul ( variable_4 , NULL , 0 ) ; while ( 0 ) wchar_t * variable_19 ; if ( variable_0 > wcslen ( variable_20 ) ) variable_19 = ( wchar_t * ) malloc ( variable_0 * sizeof ( wchar_t ) ) ; wcscpy ( variable_19 , variable_20 ) ; func_7 ( variable_19 ) ; void func_8 ( const wchar_t * variable_21 ) if ( variable_21 != NULL ) wprintf ( L " % ls \n " , variable_21 ) free ( variable_19 ) ;
 static int func_0 ( struct variable_0 * variable_1 , int char variable_2 * variable_3 , int variable_2 * variable_4 ) struct variable_5 * variable_6 ; struct variable_7 * variable_8 ; struct sctp_getaddrs_old variable_9 ; struct variable_10 * variable_11 ; union sctp_addr variable_12 ; int variable_13 ; void * variable_14 ; void * variable_15 ; if ( variable_16 < sizeof ( struct variable_17 ) ) variable_16 = sizeof ( struct variable_17 ) ; if ( func_1 ( & variable_9 , variable_3 , variable_16 ) ) if ( variable_9 . variable_18 <= 0 ) if ( 0 == variable_9 . variable_19 ) variable_6 = & func_2 ( variable_1 ) -> variable_20 -> variable_21 . variable_22 ; variable_8 = func_3 ( variable_1 , variable_9 . variable_19 ) ; if ( ! variable_8 ) variable_6 = & variable_8 -> variable_21 . variable_22 ; variable_14 = kmalloc ( sizeof ( union variable_23 ) * variable_9 . variable_18 , variable_24 ) ; if ( ! variable_14 ) if ( func_4 ( & variable_6 -> variable_25 ) ) variable_11 = func_5 ( variable_6 -> variable_25 . variable_26 struct variable_10 , variable_27 ) if ( func_6 ( & variable_11 -> variable_28 ) ) variable_15 = variable_14 ; memcpy ( & variable_12 , & variable_11 -> variable_28 , sizeof ( variable_12 ) ) ; variable_13 = func_7 ( variable_12 . variable_29 . variable_30 ) -> variable_31 ; memcpy ( variable_15 , & variable_12 , variable_13 ) ; variable_15 += variable_13 ;
