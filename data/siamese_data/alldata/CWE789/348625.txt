 void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = strtoul ( variable_1 , NULL , 0 ) ; func_1 ( variable_0 ) ; static void func_2 ( size_t variable_0 ) if ( variable_4 ) wchar_t * variable_5 ; if ( variable_0 > wcslen ( variable_6 ) ) variable_5 = new wchar_t [ variable_0 ] ; wcscpy ( variable_5 , variable_6 ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_7 ) if ( variable_7 != NULL ) wprintf ( L " % ls \n " , variable_7 ) delete [ ] variable_5
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) int variable_9 ; union misestimating_bradawls variable_10 [ 10 ] = { 0 } ; union misestimating_bradawls variable_11 ; if ( variable_8 != 0 ) variable_11 . variable_12 = variable_8 ; variable_10 [ 5 ] = variable_11 ; variable_9 = 5 ; variable_13 = & variable_9 ; variable_14 = * ( variable_10 + * variable_13 ) ; variable_15 = ( ( char * ) variable_14 . variable_12 ) ; variable_16 = malloc ( sizeof ( char ) * ( strlen ( variable_15 ) + 1 ) ) ; if ( variable_16 != NULL && variable_17 != NULL && ( sscanf ( variable_15 , " %s %s " , variable_17 , variable_16 ) == 2 ) && ( strlen ( variable_16 ) != 0 ) && ( strlen ( variable_17 ) != 0 ) ) func_5 ( variable_18 , variable_19 , " stonesoup_str " , variable_16 , " INITIAL - STATE " ) ; if ( func_6 ( variable_16 ) ) int func_7 ( char * variable_20 ) variable_21 = strchr ( variable_20 , ' / ' ) ; if ( variable_21 == 0 ) variable_22 = func_8 ( variable_16 ) ; char * func_9 ( char * variable_20 ) char * variable_23 = malloc ( sizeof ( char ) * ( strlen ( " / opt / stonesoup / workspace / testData / " ) * strlen ( variable_20 ) + 1 ) ) ; if ( variable_23 == NULL ) strcpy ( variable_23 , " / opt / stonesoup / workspace / testData / " ) ; func_10 ( variable_18 , variable_19 , " abs_path " , variable_23 , " Generated absolute path " ) ; strcat ( variable_23 , variable_20 ) ; return variable_23 ; if ( variable_22 != NULL ) if ( func_11 ( variable_22 ) ) int func_12 ( char * variable_20 ) if ( func_13 ( variable_20 , variable_24 ) != - 1 ) func_14 ( variable_22 , variable_17 ) ; void func_15 ( char * variable_25 , char * variable_26 ) strcat ( variable_27 , variable_25 ) ; strcat ( variable_27 , " . pid " ) ; if ( ( variable_28 = func_16 ( variable_27 , variable_29 | variable_30 , 0666 ) ) == - 1 ) if ( func_17 ( variable_28 , " q " , sizeof ( char ) ) == - 1 ) if ( func_18 ( variable_28 ) == - 1 ) func_19 ( variable_26 ) ; void func_20 ( char * variable_27 ) variable_31 = fopen ( variable_27 , " r " ) ; if ( variable_31 != NULL ) while ( ( variable_32 = fgetc ( variable_31 ) ) != variable_33 ) func_21 ( " %c " , variable_32 ) ; void func_22 ( char * variable_34 , . . . ) va_start ( variable_35 , variable_34 ) ; func_23 ( ( struct mg_connection * ) variable_36 , variable_34 , variable_35 ) ; fclose ( variable_31 ) ; variable_37 = fopen ( variable_22 , " rb " ) ; fseek ( variable_37 , 0 , 2 ) ; variable_38 = ftell ( variable_37 ) ; rewind ( variable_37 ) ; variable_39 = ( ( char * ) ( malloc ( sizeof ( char ) * ( variable_38 + 1 ) ) ) ) ; if ( variable_39 != NULL ) fread ( variable_39 , sizeof ( char ) , variable_38 , variable_37 ) ; variable_39 [ variable_38 ] = ' \0 ' ; func_24 ( variable_39 ) ; void func_25 ( char * variable_34 , . . . ) va_start ( variable_35 , variable_34 ) ; func_26 ( ( struct mg_connection * ) variable_36 , variable_34 , variable_35 ) ; free ( variable_39 ) ; fclose ( variable_37 ) ; free ( variable_22 ) ; free ( variable_16 ) ;
