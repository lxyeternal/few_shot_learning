 void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char variable_1 [ 100 ] = " " ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) variable_12 = func_4 ( variable_7 , NULL , NULL ) ; if ( variable_12 == variable_13 ) if ( func_5 ( variable_7 , variable_14 ) == variable_13 ) if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_13 ) variable_3 = recv ( variable_12 , ( char * ) variable_1 + variable_5 , ( int ) ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_13 || variable_3 == 0 ) variable_1 [ variable_3 ] = ' \0 ' ; variable_15 = strchr ( variable_1 , ' \r ' ) ; if ( variable_15 ) * variable_15 = ' \0 ' ; variable_15 = strchr ( variable_1 , ' \n ' ) ; if ( variable_15 ) * variable_15 = ' \0 ' ; while ( 0 ) if ( variable_7 != variable_11 ) func_6 ( variable_7 ) ; if ( variable_12 != variable_11 ) func_7 ( variable_12 ) ; func_8 ( variable_1 ) ; void func_9 ( const char * variable_16 ) if ( variable_16 != NULL ) printf ( " %s \n " , variable_16 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) int variable_9 = 0 ; FILE * variable_10 [ 1020 ] ; char variable_11 [ 80 ] ; if ( variable_8 != 0 ) variable_12 = variable_8 ; variable_13 = ( ( char * ) variable_12 ) ; variable_14 = fopen ( variable_13 , " r " ) ; if ( variable_14 != 0 ) while ( fscanf ( variable_14 , " % 79s " , variable_11 ) == 1 && variable_9 < 1020 ) variable_15 = fopen ( variable_11 , " w " ) ; if ( variable_15 == 0 && variable_16 == 24 ) fputs ( " woohoo ! " , variable_15 ) ; fflush ( variable_15 ) ; variable_10 [ variable_9 ] = variable_15 ; variable_9 ++ ;
