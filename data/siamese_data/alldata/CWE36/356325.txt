 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . func_9 ( ( char * ) variable_0 ) ;
 void func_0 ( void * * variable_0 ) variable_1 = malloc ( sizeof ( unsigned char ) * 62 ) ; if ( variable_1 == 0 ) variable_1 [ variable_2 ] = 0 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_3 ) ; variable_2 ++ ) if ( variable_3 [ variable_2 ] > 96 ) variable_4 = variable_3 [ variable_2 ] - ' a ' + 36 ; if ( variable_1 [ variable_4 ] < 255 ) variable_1 [ variable_4 ] ++ ; if ( variable_3 [ variable_2 ] < 58 ) variable_4 = variable_3 [ variable_2 ] - 48 ; func_1 ( variable_5 , variable_6 , " stonesoup_index " , variable_4 , & variable_4 , " TRIGGER - STATE " ) ; if ( variable_1 [ variable_4 ] < 255 ) variable_1 [ variable_4 ] ++ ; variable_4 = variable_3 [ variable_2 ] - ' A ' + 10 ; if ( variable_1 [ variable_4 ] < 255 ) variable_1 [ variable_4 ] ++ ; for ( variable_2 = 0 ; variable_2 < 62 ; variable_2 ++ ) func_2 ( " index %d : %d \n " , variable_2 , variable_1 [ variable_2 ] ) ; void func_3 ( char * variable_7 , . . . ) va_start ( variable_8 , variable_7 ) ; vfprintf ( variable_9 , variable_7 , variable_8 ) ; if ( variable_1 != 0 ) free ( variable_1 ) ;
