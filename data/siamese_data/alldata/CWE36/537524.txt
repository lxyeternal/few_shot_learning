 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 = 0 ; int variable_8 ; struct sockaddr_in variable_9 ; wchar_t * variable_10 ; SOCKET variable_11 = variable_12 ; SOCKET variable_13 = variable_12 ; size_t variable_14 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_15 ) break ; variable_7 = 1 ; variable_11 = func_5 ( variable_16 , variable_17 , variable_18 ) ; if ( variable_11 == variable_12 ) break ; memset ( & variable_9 , 0 , sizeof ( variable_9 ) ) ; variable_9 . variable_19 = variable_16 ; variable_9 . variable_20 . variable_21 = variable_22 ; variable_9 . variable_23 = func_6 ( variable_24 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_9 , sizeof ( variable_9 ) ) == variable_25 ) break ; if ( func_7 ( variable_11 , variable_26 ) == variable_25 ) break ; variable_13 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_13 == variable_25 ) break ; variable_8 = recv ( variable_13 , ( char * ) ( variable_0 + variable_14 ) , sizeof ( wchar_t ) * ( variable_2 - variable_14 - 1 ) , 0 ) ; if ( variable_8 == variable_25 || variable_8 == 0 ) break ; variable_0 [ variable_14 + variable_8 / sizeof ( wchar_t ) ] = L ' \0 ' variable_10 = wcschr ( variable_0 , L ' \r ' ) if ( variable_10 ) * variable_10 = L ' \0 ' variable_10 = wcschr ( variable_0 , L ' \n ' ) if ( variable_10 ) * variable_10 = L ' \0 ' while ( 0 ) if ( variable_11 != variable_12 ) func_9 ( variable_11 ) ; if ( variable_13 != variable_12 ) func_10 ( variable_13 ) ; if ( variable_7 ) func_11 ( ) ; delete variable_4 variable_3 :: ~ func_12 ( ) FILE * variable_27 = NULL ; variable_27 = func_13 ( variable_0 , L " wb + " ) if ( variable_27 != NULL ) fclose ( variable_27 ) ;
