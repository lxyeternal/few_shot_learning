 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 = 0 ; int variable_8 ; struct sockaddr_in variable_9 ; char * variable_10 ; SOCKET variable_11 = variable_12 ; size_t variable_13 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_14 ) break ; variable_7 = 1 ; variable_11 = func_5 ( variable_15 , variable_16 , variable_17 ) ; if ( variable_11 == variable_12 ) break ; memset ( & variable_9 , 0 , sizeof ( variable_9 ) ) ; variable_9 . variable_18 = variable_15 ; variable_9 . variable_19 . variable_20 = func_6 ( variable_21 ) ; variable_9 . variable_22 = func_7 ( variable_23 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_9 , sizeof ( variable_9 ) ) == variable_24 ) break ; variable_8 = recv ( variable_11 , ( char * ) ( variable_0 + variable_13 ) , sizeof ( char ) * ( variable_2 - variable_13 - 1 ) , 0 ) ; if ( variable_8 == variable_24 || variable_8 == 0 ) break ; variable_0 [ variable_13 + variable_8 / sizeof ( char ) ] = ' \0 ' ; variable_10 = strchr ( variable_0 , ' \r ' ) ; if ( variable_10 ) * variable_10 = ' \0 ' ; variable_10 = strchr ( variable_0 , ' \n ' ) ; if ( variable_10 ) * variable_10 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_12 ) func_9 ( variable_11 ) ; if ( variable_7 ) func_10 ( ) ; delete variable_4 variable_3 :: ~ func_11 ( ) variable_25 = func_12 ( variable_0 , " wb + " ) ; if ( variable_25 != NULL ) fclose ( variable_25 ) ;
