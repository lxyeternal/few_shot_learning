 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = func_8 ( variable_0 , ( variable_22 | variable_23 ) , 0 , NULL , variable_24 , variable_25 , NULL ) ; if ( variable_21 != variable_26 ) CloseHandle ( variable_21 ) ;
 static struct variable_0 * func_0 ( struct variable_0 * variable_1 , int variable_2 ) unsigned int variable_3 ; unsigned int variable_4 , variable_5 ; variable_6 * variable_7 , * variable_8 ; u8 variable_9 = sizeof ( struct variable_10 ) ; int variable_11 ; __wsum variable_12 ; variable_3 = func_1 ( variable_1 ) -> variable_13 ; if ( func_2 ( variable_1 -> variable_14 <= variable_3 ) ) if ( func_3 ( variable_1 , variable_2 | variable_15 ) ) variable_11 = variable_1 -> variable_16 - func_4 ( variable_1 ) ; variable_12 = func_5 ( variable_1 , variable_11 , variable_1 -> variable_14 - variable_11 , 0 ) ; variable_11 += variable_1 -> variable_17 ; * ( __sum16 * ) ( variable_1 -> variable_18 + variable_11 ) = func_6 ( variable_12 ) ; variable_1 -> variable_19 = variable_20 ; if ( ( func_7 ( variable_1 ) < variable_1 -> variable_21 + variable_9 ) && func_8 ( variable_1 , variable_9 , 0 , variable_22 ) ) variable_4 = func_9 ( variable_1 , & variable_8 ) ; variable_5 = func_10 ( variable_1 ) - func_11 ( variable_1 ) + variable_4 ; variable_7 = func_12 ( variable_1 ) ; memmove ( variable_7 - variable_9 , variable_7 , variable_5 ) ;
