 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; variable_7 = func_1 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_2 ( variable_7 ) ;
 int func_0 ( variable_0 * variable_1 , int variable_2 , const uint8_t * * variable_3 , int * variable_4 ) for ( ; variable_1 -> variable_5 > 0 ; variable_1 -> variable_5 -- ) variable_1 -> variable_6 [ variable_1 -> variable_7 ++ ] = variable_1 -> variable_6 [ variable_1 -> variable_8 ++ ] ; if ( ! * variable_4 && variable_2 == variable_9 ) variable_2 = 0 ; variable_1 -> variable_10 = variable_1 -> variable_7 ; if ( variable_2 == variable_9 ) * variable_4 = variable_1 -> variable_8 = variable_1 -> variable_7 + variable_2 ; if ( variable_1 -> variable_7 ) void * variable_11 = func_1 ( variable_1 -> variable_6 , & variable_1 -> variable_12 , variable_2 + variable_1 -> variable_7 + variable_13 ) ; if ( ! variable_11 ) variable_1 -> variable_6 = variable_11 ; if ( variable_2 > - variable_13 ) memcpy ( & variable_1 -> variable_6 [ variable_1 -> variable_7 ] , * variable_3 , variable_2 + variable_13 ) ; variable_1 -> variable_7 = 0 ; * variable_3 = variable_1 -> variable_6 ; variable_1 -> variable_14 = ( variable_1 -> variable_14 << 8 ) | variable_1 -> variable_6 [ variable_1 -> variable_10 + variable_2 ] ; variable_1 -> variable_15 = ( variable_1 -> variable_15 << 8 ) | variable_1 -> variable_6 [ variable_1 -> variable_10 + variable_2 ] ; variable_1 -> variable_5 ++ ; if ( variable_1 -> variable_5 ) func_2 ( NULL , " overread %d , state : % X next : %d index : %d o_index : %d \n " , variable_1 -> variable_5 , variable_1 -> variable_14 , variable_2 , variable_1 -> variable_7 , variable_1 -> variable_8 ) ; func_3 ( NULL , " % X % X % X % X \n " , ( * variable_3 ) [ 0 ] , ( * variable_3 ) [ 1 ] , ( * variable_3 ) [ 2 ] , ( * variable_3 ) [ 3 ] ) ;
