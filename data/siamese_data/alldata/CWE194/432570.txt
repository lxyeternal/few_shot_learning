 void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = ( short ) atoi ( variable_2 ) ; if ( variable_0 < 100 ) char * variable_5 = ( char * ) malloc ( variable_0 ) ; memset ( variable_5 , ' A ' , variable_0 - 1 ) ; variable_5 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_5 ) ;
 int func_0 ( const char * variable_0 , struct variable_1 * variable_2 , int variable_3 , int variable_4 ) char * variable_5 , variable_6 [ 512 ] , variable_7 [ 512 ] ; struct variable_8 * variable_9 = func_1 ( 16 ) ; if ( func_2 ( variable_0 ) || ! variable_2 || ! variable_9 ) variable_5 = func_3 ( func_4 ( variable_9 ) ) ; if ( func_5 ( variable_5 , " Digest " , strlen ( " Digest " ) ) ) variable_5 += strlen ( " Digest " ) ; while ( * variable_5 && * ( variable_5 = func_6 ( variable_5 ) ) ) while ( * variable_5 && * variable_5 != ' = ' && * variable_5 != ' , ' && ! isspace ( * variable_5 ) ) variable_6 [ variable_10 ++ ] = * variable_5 ++ ; variable_6 [ variable_10 ] = ' \0 ' ; variable_5 = func_7 ( variable_5 ) ; if ( * variable_5 == ' = ' ) variable_5 = func_8 ( ++ variable_5 ) ; if ( * variable_5 == ' \ " ' ) variable_5 ++ ; while ( * variable_5 && * variable_5 != ' \ " ' ) if ( * variable_5 == ' \ \ ' && variable_5 [ 1 ] != ' \0 ' ) variable_5 ++ ; variable_7 [ variable_10 ++ ] = * variable_5 ++ ; while ( * variable_5 && * variable_5 != ' , ' && ! isspace ( * variable_5 ) ) variable_7 [ variable_10 ++ ] = * variable_5 ++ ; variable_7 [ variable_10 ] = ' \0 ' ; while ( * variable_5 && * variable_5 != ' , ' ) variable_5 ++ ; if ( * variable_5 ) variable_5 ++ ; if ( ! func_9 ( variable_6 , " username " ) ) func_10 ( variable_2 , variable_11 , variable_7 ) ; if ( ! func_11 ( variable_6 , " realm " ) ) func_12 ( variable_2 , variable_12 , variable_7 ) ; if ( ! func_13 ( variable_6 , " nonce " ) ) func_14 ( variable_2 , variable_13 , variable_7 ) ; if ( ! func_15 ( variable_6 , " uri " ) ) func_16 ( variable_2 , variable_14 , variable_7 ) ; if ( ! func_17 ( variable_6 , " domain " ) ) func_18 ( variable_2 , variable_15 , variable_7 ) ; if ( ! func_19 ( variable_6 , " response " ) ) func_20 ( variable_2 , variable_16 , variable_7 ) ; if ( ! func_21 ( variable_6 , " algorithm " ) ) if ( func_22 ( variable_7 , " MD5 " ) ) func_23 ( variable_17 , " Digest algorithm : \ " % variable_18 \ " not supported . \n " , variable_7 ) ; if ( ! func_24 ( variable_6 , " cnonce " ) ) func_25 ( variable_2 , variable_19 , variable_7 ) ; if ( ! func_26 ( variable_6 , " opaque " ) ) func_27 ( variable_2 , variable_20 , variable_7 ) ; if ( ! func_28 ( variable_6 , " qop " ) && ! func_29 ( variable_7 , " auth " ) ) if ( ! func_30 ( variable_6 , " nc " ) ) if ( sscanf ( variable_7 , " % 30lx " , & variable_21 ) != 1 ) func_31 ( variable_17 , " Incorrect Digest nc value : \ " % variable_18 \ " . \n " , variable_7 ) ; func_32 ( variable_2 , variable_22 , variable_7 ) ;
