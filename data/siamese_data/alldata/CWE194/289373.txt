 void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memmove ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 , variable_0 * variable_3 ) char variable_4 [ 1000 ] ; char variable_5 [ 150 ] ; int variable_6 ; void * variable_7 [ 10 ] = { 0 } ; char * variable_8 ; if ( func_1 ( & variable_9 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_8 = getenv ( " PROLETARIES_LIS " ) ; if ( variable_8 != 0 ) variable_10 = ( ( void * ) variable_8 ) ; variable_6 = 5 ; variable_11 = & variable_6 ; variable_12 = & variable_11 ; variable_13 = & variable_12 ; variable_14 = & variable_13 ; variable_15 = & variable_14 ; variable_16 = & variable_15 ; variable_17 = & variable_16 ; variable_18 = & variable_17 ; variable_19 = & variable_18 ; variable_20 = & variable_19 ; variable_7 [ * ( * ( * ( * ( * ( * ( * ( * ( * ( * variable_20 ) ) ) ) ) ) ) ) ) ] = variable_10 ; variable_21 = variable_7 [ * ( * ( * ( * ( * ( * ( * ( * ( * ( * variable_20 ) ) ) ) ) ) ) ) ) ] ; variable_22 = ( ( char * ) ( ( char * ) variable_21 ) ) ; variable_23 = getenv ( " DBPGHOST " ) ; variable_24 = getenv ( " DBPGUSER " ) ; variable_25 = getenv ( " DBPGPASSWORD " ) ; variable_26 = getenv ( " DBPGPORT " ) ; variable_27 = getenv ( " SS_DBPGDATABASE " ) ; if ( variable_23 != 0 && variable_26 != 0 && variable_24 != 0 && variable_25 != 0 && variable_27 != 0 ) snprintf ( variable_5 , 150 , " dbname = %s host = %s user = %s password = %s port = %s " , variable_27 , variable_23 , variable_24 , variable_25 , variable_26 ) ; variable_28 = func_3 ( variable_5 ) ; variable_29 = ( rand ( ) % 1000 ) + 100 ; snprintf ( variable_4 , 1000 , " INSERT INTO shippers ( shipperid , companyname ) VALUES ( ' %d ' , ' %s ' ) ; " , variable_29 , variable_22 ) ; variable_30 = func_4 ( variable_28 , variable_4 ) ; if ( func_5 ( variable_30 ) != variable_31 ) func_6 ( variable_30 ) ; variable_32 = func_7 ( variable_30 ) ; func_8 ( " Query OK , %s rows affected \n " , variable_32 ) ; void func_9 ( char * variable_33 , . . . ) va_start ( variable_34 , variable_33 ) ; vfprintf ( variable_35 , variable_33 , variable_34 ) ; func_10 ( variable_30 ) ;
