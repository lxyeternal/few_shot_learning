 void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) WSADATA variable_1 ; int variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_2 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_2 == variable_19 || variable_2 == 0 ) variable_5 [ variable_2 ] = ' \0 ' ; variable_3 = atoi ( variable_5 ) ; if ( variable_3 > variable_22 || variable_3 < variable_23 ) variable_0 = - 1 ; variable_0 = variable_3 ; while ( 0 ) return variable_0 ; char variable_24 [ 100 ] ; char variable_25 [ 100 ] = " " ; memset ( variable_24 , ' A ' , 100 - 1 ) ; variable_24 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_25 , variable_24 , variable_0 ) ; variable_25 [ variable_0 ] = ' \0 ' ; func_9 ( variable_25 ) ; void func_10 ( const char * variable_26 ) if ( variable_26 != NULL ) printf ( " %s \n " , variable_26 ) ;
 static char func_0 ( const struct variable_1 const struct variable_2 * variable_3 ) char * variable_4 , * variable_5 ; unsigned int variable_6 = variable_7 -> variable_8 ? strlen ( variable_7 -> variable_8 ) + 1 : 0 ; unsigned int variable_9 = func_1 ( variable_7 -> variable_10 , variable_11 + 1 ) ; variable_4 = kmalloc ( variable_9 + variable_6 + 1 , variable_12 ) ; if ( variable_4 == NULL ) strncpy ( variable_4 , variable_7 -> variable_10 , variable_9 ) ; variable_5 = variable_4 + variable_9 ; * variable_5 = func_2 ( variable_3 ) ; strncpy ( variable_5 + 1 , variable_7 -> variable_8 , variable_6 ) ; variable_5 += variable_6 ; * variable_5 = ' \0 ' ; func_3 ( variable_4 , func_4 ( variable_3 ) ) ; func_5 ( 1 , " %s :  full_path = %s " , variable_13 , variable_4 ) ; return variable_4 ;
