 void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 1 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = ( short ) atoi ( variable_1 ) ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;
 static void func_0 ( variable_0 * variable_1 ) struct liriodendra_axson variable_2 ; char * variable_3 ; if ( func_1 ( & variable_4 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_3 != 0 ) variable_2 . variable_5 = ( ( char * ) variable_3 ) ; func_3 ( variable_2 ) ; void func_4 ( const struct liriodendra_axson variable_6 ) int variable_7 = 7 ; func_5 ( variable_7 , variable_6 ) ; void func_6 ( int variable_8 , struct liriodendra_axson variable_9 ) struct variable_10 * variable_11 ; variable_8 -- ; if ( variable_8 > 0 ) variable_12 = ( ( char * ) ( ( struct variable_13 ) variable_9 ) . variable_5 ) ; variable_11 = malloc ( sizeof ( struct variable_10 ) ) ; if ( variable_11 ) variable_11 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_11 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_11 -> variable_16 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; if ( variable_11 -> variable_14 ) if ( ( sscanf ( variable_12 , " %d %s %s %s " , & ( variable_11 -> variable_17 ) , variable_11 -> variable_15 , variable_11 -> variable_16 , variable_11 -> variable_14 ) == 4 ) && ( strlen ( variable_11 -> variable_14 ) != 0 ) ) func_7 ( variable_18 , variable_19 , " stonesoupData -> qsize " , variable_11 -> variable_17 , & ( variable_11 -> variable_17 ) , " INITIAL - STATE " ) ; func_8 ( variable_18 , variable_20 , " stonesoupData -> data " , variable_11 -> variable_14 , " INITIAL - STATE " ) ; func_9 ( variable_18 , variable_20 , " stonesoupData -> file1 " , variable_11 -> variable_15 , " INITIAL - STATE " ) ; func_10 ( variable_18 , variable_20 , " stonesoupData -> file2 " , variable_11 -> variable_16 , " INITIAL - STATE " ) ; variable_11 -> variable_21 = strlen ( variable_11 -> variable_14 ) ; while ( variable_11 -> variable_14 [ variable_22 ] != ' \0 ' ) if ( variable_11 -> variable_14 [ variable_22 ] >= ' A ' && variable_11 -> variable_14 [ variable_22 ] <= ' Z ' ) func_11 ( variable_11 ) ; void func_12 ( struct variable_10 * variable_11 ) for ( variable_23 = 0 ; variable_23 < strlen ( variable_11 -> variable_14 ) - 1 ; variable_23 ++ ) if ( variable_11 -> variable_14 [ variable_23 ] >= ' A ' && variable_11 -> variable_14 [ variable_23 ] <= ' Z ' ) variable_11 -> variable_14 [ variable_23 ] += 32 ; func_13 ( variable_18 , variable_19 , " stonesoupData -> qsize " , variable_11 -> variable_17 , & ( variable_11 -> variable_17 ) , " CROSSOVER - STATE " ) ; func_14 ( variable_18 , variable_20 , " stonesoupData -> data " , variable_11 -> variable_14 , " CROSSOVER - STATE " ) ; func_15 ( variable_18 , variable_20 , " stonesoupData -> file1 " , variable_11 -> variable_15 , " CROSSOVER - STATE " ) ; func_16 ( variable_18 , variable_20 , " stonesoupData -> file2 " , variable_11 -> variable_16 , " CROSSOVER - STATE " ) ; if ( func_17 ( & variable_24 , NULL , variable_25 , ( void * ) variable_11 ) != 0 ) if ( func_18 ( & variable_26 , NULL , variable_27 , ( void * ) variable_11 ) != 0 ) func_19 ( variable_18 , variable_19 , " stonesoupData -> qsize " , variable_11 -> variable_17 , & ( variable_11 -> variable_17 ) , " FINAL - STATE " ) ; func_20 ( variable_18 , variable_20 , " stonesoupData -> data " , variable_11 -> variable_14 , " FINAL - STATE " ) ; func_21 ( variable_18 , variable_20 , " stonesoupData -> file1 " , variable_11 -> variable_15 , " FINAL - STATE " ) ; func_22 ( variable_18 , variable_20 , " stonesoupData -> file2 " , variable_11 -> variable_16 , " FINAL - STATE " ) ; func_23 ( " String : %s \n " , variable_11 -> variable_14 ) ; void func_24 ( char * variable_28 , . . . ) va_start ( variable_29 , variable_28 ) ; vfprintf ( variable_30 , variable_28 , variable_29 ) ; free ( variable_11 -> variable_14 ) ; free ( variable_11 ) ;
