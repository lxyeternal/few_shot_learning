 void func_0 ( ) int variable_0 ; variable_0 = - 1 ; while ( 1 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;
 variable_0 :: func_0 ( ) if ( variable_1 == - 1 ) variable_2 * variable_3 = variable_4 [ variable_1 ] ; if ( ! variable_3 || func_1 ( variable_3 ) ) int32_t variable_5 = variable_1 ; variable_5 -- ; if ( variable_5 == - 1 ) if ( ! variable_4 [ variable_5 ] ) if ( func_2 ( variable_4 [ variable_5 ] ) ) while ( variable_5 < variable_1 ) variable_5 ++ ; variable_2 * variable_6 = variable_4 [ variable_5 ] ; variable_2 * variable_7 = variable_8 [ variable_9 ] ; variable_10 * variable_11 ; if ( variable_7 -> func_3 ( ) ) variable_11 = func_4 ( variable_12 , variable_6 -> variable_13 , variable_6 -> variable_14 -> func_5 ( variable_15 ) ) ; variable_11 = func_6 ( variable_12 , variable_6 -> variable_13 , variable_6 -> variable_14 -> func_7 ( variable_15 ) , variable_7 -> variable_16 ) ; variable_2 * variable_17 = new func_8 ( variable_6 -> func_9 ( ) , variable_6 -> variable_18 , variable_6 -> variable_13 , variable_11 , variable_6 -> variable_19 , variable_6 -> variable_14 ) ; func_10 ( variable_17 ) ; variable_4 [ variable_5 ] = variable_17 ;
