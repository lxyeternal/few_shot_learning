 void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) char variable_20 [ 100 ] ; char variable_21 [ 100 ] = " " ; memset ( variable_20 , ' A ' , 100 - 1 ) ; variable_20 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_21 , variable_20 , variable_0 ) ; variable_21 [ variable_0 ] = ' \0 ' ; func_7 ( variable_21 ) ; void func_8 ( const char * variable_22 ) if ( variable_22 != NULL ) printf ( " %s \n " , variable_22 ) ;
 void func_0 ( variable_0 * variable_1 , const gchar * variable_2 , void * variable_3 , guint32 variable_4 ) guint32 variable_5 = ( variable_6 ) ( strlen ( variable_2 ) ) ; guint32 variable_7 = ( variable_5 + 3 ) / 4 + 1 ; variable_8 = ( func_1 ( variable_7 * sizeof ( variable_6 ) ) ) ; for ( variable_9 = 0 ; variable_9 < variable_5 ; variable_9 ++ ) variable_10 = ( ( unsigned char ) variable_2 [ variable_9 ] ) ; if ( ( * func_2 ( ) ) [ ( int ) variable_10 ] & ( ( unsigned short ) variable_11 ) ) variable_10 = ( tolower ( variable_10 ) ) ; variable_12 << = 8 ; variable_12 |= variable_10 ; variable_8 [ variable_9 / 4 ] = variable_12 ; if ( variable_9 % 4 != 0 ) while ( variable_9 % 4 != 0 ) variable_9 ++ ; variable_12 << = 8 ; variable_8 [ variable_9 / 4 - 1 ] = variable_12 ; variable_8 [ variable_7 - 1 ] = 0 variable_13 ; variable_14 [ 0 ] . variable_15 = variable_7 ; variable_14 [ 0 ] . variable_14 = variable_8 ; variable_14 [ 1 ] . variable_15 = 0 ; variable_14 [ 1 ] . variable_14 = ( ( void * ) 0 ) ; func_3 ( variable_1 , variable_14 , variable_3 ) ; void func_4 ( variable_0 * variable_1 , variable_16 * variable_14 , void * variable_17 ) if ( ! variable_1 || ! variable_14 ) for ( variable_18 = variable_14 ; variable_18 -> variable_15 > 0 ; variable_18 ++ ) if ( variable_18 -> variable_15 > 100 ) for ( variable_9 = 0 ; variable_9 < variable_18 -> variable_15 ; variable_9 ++ ) if ( ! variable_19 ) variable_19 = variable_1 ; variable_19 = ( func_5 ( variable_19 , variable_20 , variable_21 , variable_1 , 1 ) ) ; static void * func_6 ( variable_0 * variable_1 , guint32 variable_14 , void * ( * variable_22 ) ( void * ) , void * variable_23 , int variable_24 ) variable_25 = variable_1 -> variable_26 ; if ( ! variable_25 ) variable_25 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; switch ( variable_1 -> variable_29 ) variable_25 -> variable_30 . variable_31 = 1 ; variable_25 -> variable_32 = ( ( void * ) 0 ) ; variable_25 -> variable_33 = ( ( void * ) 0 ) ; variable_25 -> variable_34 = ( ( void * ) 0 ) ; variable_25 -> variable_35 = variable_14 ; variable_25 -> variable_17 = func_7 ( variable_23 ) ; variable_25 -> variable_30 . variable_24 = variable_24 ; variable_1 -> variable_26 = variable_25 ; return variable_25 -> variable_17 ; if ( variable_14 == variable_25 -> variable_35 ) return variable_25 -> variable_17 ; if ( variable_14 < variable_25 -> variable_35 ) if ( ! variable_25 -> variable_33 ) variable_36 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; variable_25 -> variable_33 = variable_36 ; variable_36 -> variable_32 = variable_25 ; variable_36 -> variable_33 = ( ( void * ) 0 ) ; variable_36 -> variable_34 = ( ( void * ) 0 ) ; variable_36 -> variable_35 = variable_14 ; variable_36 -> variable_17 = func_8 ( variable_23 ) ; variable_36 -> variable_30 . variable_24 = variable_24 ; variable_25 = variable_36 ; variable_25 = variable_25 -> variable_33 ; if ( variable_14 > variable_25 -> variable_35 ) if ( ! variable_25 -> variable_34 ) variable_36 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; variable_25 -> variable_34 = variable_36 ; variable_36 -> variable_32 = variable_25 ; variable_36 -> variable_33 = ( ( void * ) 0 ) ; variable_36 -> variable_34 = ( ( void * ) 0 ) ; variable_36 -> variable_35 = variable_14 ; variable_36 -> variable_17 = func_9 ( variable_23 ) ; variable_36 -> variable_30 . variable_24 = variable_24 ; variable_25 = variable_36 ; variable_25 = variable_25 -> variable_34 ; switch ( variable_1 -> variable_29 ) variable_25 -> variable_30 . variable_31 = 0 ; func_10 ( variable_1 , variable_25 ) ; inline static void func_11 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_12 ( variable_25 ) ; inline static variable_28 * func_13 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( ! variable_32 ) variable_25 -> variable_30 . variable_31 = 1 ; func_14 ( variable_1 , variable_25 ) ; inline static void func_15 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_16 ( variable_25 ) ; inline static variable_28 * func_17 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( variable_32 -> variable_30 . variable_31 == 1 ) func_18 ( variable_1 , variable_25 ) ; inline static void func_19 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_37 = func_20 ( variable_25 ) ; inline static variable_28 * func_21 ( variable_28 * variable_25 ) variable_32 = func_22 ( variable_25 ) ; inline static variable_28 * func_23 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( ! variable_32 ) variable_38 = func_24 ( variable_32 ) ; inline static variable_28 * func_25 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( ! variable_38 ) if ( variable_32 == variable_38 -> variable_33 ) return variable_38 -> variable_34 ; return variable_38 -> variable_33 ; if ( variable_37 && variable_37 -> variable_30 . variable_31 == 0 ) variable_32 = func_26 ( variable_25 ) ; inline static variable_28 * func_27 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; variable_32 -> variable_30 . variable_31 = 1 ; variable_37 -> variable_30 . variable_31 = 1 ; variable_38 = func_28 ( variable_25 ) ; inline static variable_28 * func_29 ( variable_28 * variable_25 ) variable_32 = func_30 ( variable_25 ) ; inline static variable_28 * func_31 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( variable_32 ) return variable_32 -> variable_32 ; variable_38 -> variable_30 . variable_31 = 0 ; func_32 ( variable_1 , variable_38 ) ; inline static void func_33 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_34 ( variable_25 ) ; if ( ! variable_32 ) variable_25 -> variable_30 . variable_31 = 1 ; func_35 ( variable_1 , variable_25 ) ; func_36 ( variable_1 , variable_25 ) ; inline static void func_37 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_38 ( variable_25 ) ; inline static variable_28 * func_39 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; variable_38 = func_40 ( variable_32 ) ; inline static variable_28 * func_41 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; if ( ! variable_38 ) if ( variable_25 == variable_32 -> variable_34 && variable_32 == variable_38 -> variable_33 ) func_42 ( variable_1 , variable_32 ) ; inline static void func_43 ( variable_0 * variable_1 , variable_28 * variable_25 ) if ( variable_25 -> variable_32 ) if ( variable_25 -> variable_32 -> variable_33 == variable_25 ) variable_25 -> variable_32 -> variable_33 = variable_25 -> variable_34 ; variable_25 -> variable_32 -> variable_34 = variable_25 -> variable_34 ; variable_1 -> variable_26 = variable_25 -> variable_34 ; variable_25 -> variable_34 -> variable_32 = variable_25 -> variable_32 ; variable_25 -> variable_32 = variable_25 -> variable_34 ; variable_25 -> variable_34 = variable_25 -> variable_34 -> variable_33 ; if ( variable_25 -> variable_34 ) variable_25 -> variable_34 -> variable_32 = variable_25 ; variable_25 -> variable_32 -> variable_33 = variable_25 ; variable_25 = variable_25 -> variable_33 ; if ( variable_25 == variable_32 -> variable_33 && variable_32 == variable_38 -> variable_34 ) func_44 ( variable_1 , variable_32 ) ; inline static void func_45 ( variable_0 * variable_1 , variable_28 * variable_25 ) if ( variable_25 -> variable_32 ) if ( variable_25 -> variable_32 -> variable_33 == variable_25 ) variable_25 -> variable_32 -> variable_33 = variable_25 -> variable_33 ; variable_25 -> variable_32 -> variable_34 = variable_25 -> variable_33 ; variable_1 -> variable_26 = variable_25 -> variable_33 ; variable_25 -> variable_33 -> variable_32 = variable_25 -> variable_32 ; variable_25 -> variable_32 = variable_25 -> variable_33 ; variable_25 -> variable_33 = variable_25 -> variable_33 -> variable_34 ; if ( variable_25 -> variable_33 ) variable_25 -> variable_33 -> variable_32 = variable_25 ; variable_25 -> variable_32 -> variable_34 = variable_25 ; variable_25 = variable_25 -> variable_34 ; func_46 ( variable_1 , variable_25 ) ; inline static void func_47 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_48 ( variable_25 ) ; inline static variable_28 * func_49 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; variable_38 = func_50 ( variable_32 ) ; inline static variable_28 * func_51 ( variable_28 * variable_25 ) return variable_25 -> variable_32 ; variable_32 -> variable_30 . variable_31 = 1 ; variable_38 -> variable_30 . variable_31 = 0 ; if ( variable_25 == variable_32 -> variable_33 && variable_32 == variable_38 -> variable_33 ) func_52 ( variable_1 , variable_38 ) ; inline static void func_53 ( variable_0 * variable_1 , variable_28 * variable_25 ) if ( variable_25 -> variable_32 ) if ( variable_25 -> variable_32 -> variable_33 == variable_25 ) variable_25 -> variable_32 -> variable_33 = variable_25 -> variable_33 ; variable_25 -> variable_32 -> variable_34 = variable_25 -> variable_33 ; variable_1 -> variable_26 = variable_25 -> variable_33 ; variable_25 -> variable_33 -> variable_32 = variable_25 -> variable_32 ; variable_25 -> variable_32 = variable_25 -> variable_33 ; variable_25 -> variable_33 = variable_25 -> variable_33 -> variable_34 ; if ( variable_25 -> variable_33 ) variable_25 -> variable_33 -> variable_32 = variable_25 ; variable_25 -> variable_32 -> variable_34 = variable_25 ; func_54 ( variable_1 , variable_38 ) ; inline static void func_55 ( variable_0 * variable_1 , variable_28 * variable_25 ) if ( variable_25 -> variable_32 ) if ( variable_25 -> variable_32 -> variable_33 == variable_25 ) variable_25 -> variable_32 -> variable_33 = variable_25 -> variable_34 ; variable_25 -> variable_32 -> variable_34 = variable_25 -> variable_34 ; variable_1 -> variable_26 = variable_25 -> variable_34 ; variable_25 -> variable_34 -> variable_32 = variable_25 -> variable_32 ; variable_25 -> variable_32 = variable_25 -> variable_34 ; variable_25 -> variable_34 = variable_25 -> variable_34 -> variable_33 ; if ( variable_25 -> variable_34 ) variable_25 -> variable_34 -> variable_32 = variable_25 ; variable_25 -> variable_32 -> variable_33 = variable_25 ; return variable_25 -> variable_17 ; variable_20 = variable_18 -> variable_14 [ variable_9 ] ; if ( ! variable_19 ) func_56 ( variable_19 , variable_20 , variable_17 ) ; void func_57 ( variable_0 * variable_1 , guint32 variable_14 , void * variable_17 ) variable_25 = variable_1 -> variable_26 ; if ( ! variable_25 ) variable_25 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; switch ( variable_1 -> variable_29 ) variable_25 -> variable_30 . variable_31 = 1 ; variable_25 -> variable_32 = ( ( void * ) 0 ) ; variable_25 -> variable_33 = ( ( void * ) 0 ) ; variable_25 -> variable_34 = ( ( void * ) 0 ) ; variable_25 -> variable_35 = variable_14 ; variable_25 -> variable_17 = variable_17 ; variable_25 -> variable_30 . variable_24 = 0 ; variable_1 -> variable_26 = variable_25 ; if ( variable_14 == variable_25 -> variable_35 ) variable_25 -> variable_17 = variable_17 ; if ( variable_14 < variable_25 -> variable_35 ) if ( ! variable_25 -> variable_33 ) variable_36 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; variable_25 -> variable_33 = variable_36 ; variable_36 -> variable_32 = variable_25 ; variable_36 -> variable_33 = ( ( void * ) 0 ) ; variable_36 -> variable_34 = ( ( void * ) 0 ) ; variable_36 -> variable_35 = variable_14 ; variable_36 -> variable_17 = variable_17 ; variable_36 -> variable_30 . variable_24 = 0 ; variable_25 = variable_36 ; variable_25 = variable_25 -> variable_33 ; if ( variable_14 > variable_25 -> variable_35 ) if ( ! variable_25 -> variable_34 ) variable_36 = ( ( variable_1 -> variable_27 ) ( sizeof ( variable_28 ) ) ) ; variable_25 -> variable_34 = variable_36 ; variable_36 -> variable_32 = variable_25 ; variable_36 -> variable_33 = ( ( void * ) 0 ) ; variable_36 -> variable_34 = ( ( void * ) 0 ) ; variable_36 -> variable_35 = variable_14 ; variable_36 -> variable_17 = variable_17 ; variable_36 -> variable_30 . variable_24 = 0 ; variable_25 = variable_36 ; variable_25 = variable_25 -> variable_34 ; switch ( variable_1 -> variable_29 ) variable_25 -> variable_30 . variable_31 = 0 ; func_58 ( variable_1 , variable_25 ) ; inline static void func_59 ( variable_0 * variable_1 , variable_28 * variable_25 ) variable_32 = func_60 ( variable_25 ) ; if ( ! variable_32 ) variable_25 -> variable_30 . variable_31 = 1 ; func_61 ( variable_1 , variable_25 ) ; func_62 ( variable_8 ) ;
