 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; fclose ( variable_3 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 , variable_0 ) ; static void func_8 ( char * variable_0 , . . . ) va_start ( variable_5 , variable_0 ) ; vfprintf ( variable_6 , variable_0 , variable_5 ) ;
 int func_0 ( void ) int variable_0 , variable_1 , variable_2 ; struct variable_3 * variable_4 ; struct variable_5 * variable_6 ; struct variable_3 * variable_7 ; struct variable_8 * variable_9 ; variable_0 = func_1 ( variable_10 , variable_11 , variable_12 ) ; variable_13 . variable_14 = variable_10 ; variable_13 . variable_15 = 0 ; variable_13 . variable_16 = 0 ; variable_13 . variable_17 = variable_18 ; variable_4 = ( struct cn_msg * ) variable_19 ; variable_4 -> variable_20 . variable_21 = variable_18 ; variable_4 -> variable_20 . variable_22 = variable_23 ; variable_9 = ( struct hv_kvp_msg * ) variable_4 -> variable_24 ; variable_9 -> variable_25 . variable_26 = variable_27 ; variable_4 -> variable_28 = 0 ; variable_4 -> variable_1 = sizeof ( struct variable_8 ) ; variable_1 = func_2 ( variable_0 , variable_4 ) ; while ( 1 ) struct variable_29 * variable_30 = ( struct sockaddr * ) & variable_13 ; variable_1 = recvfrom ( variable_0 , variable_31 , sizeof ( variable_31 ) , 0 , variable_30 , & variable_32 ) ; if ( variable_1 < 0 || variable_13 . variable_16 ) variable_6 = ( struct nlmsghdr * ) variable_31 ; variable_7 = ( struct cn_msg * ) func_3 ( variable_6 ) ; variable_9 = ( struct hv_kvp_msg * ) variable_7 -> variable_24 ; switch ( variable_9 -> variable_25 . variable_26 ) if ( func_4 ( variable_9 -> variable_25 . variable_33 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_36 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_37 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_38 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_39 ) ) strcpy ( variable_9 -> variable_34 . variable_35 . variable_24 . variable_36 , " " ) ; if ( func_5 ( variable_9 -> variable_25 . variable_33 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_36 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_37 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_38 , variable_9 -> variable_34 . variable_35 . variable_24 . variable_39 ) ) strcpy ( variable_9 -> variable_34 . variable_35 . variable_24 . variable_36 , " " ) ; if ( func_6 ( variable_9 -> variable_25 . variable_33 , variable_9 -> variable_34 . variable_40 . variable_36 , variable_9 -> variable_34 . variable_40 . variable_37 ) ) strcpy ( variable_9 -> variable_34 . variable_40 . variable_36 , " " ) ; func_7 ( variable_9 -> variable_25 . variable_33 , variable_9 -> variable_34 . variable_41 . variable_42 , variable_9 -> variable_34 . variable_41 . variable_24 . variable_36 , variable_43 , variable_9 -> variable_34 . variable_41 . variable_24 . variable_38 , variable_44 ) ; variable_45 = ( char * ) variable_9 -> variable_34 . variable_41 . variable_24 . variable_36 ; variable_46 = ( char * ) variable_9 -> variable_34 . variable_41 . variable_24 . variable_38 ; switch ( variable_9 -> variable_34 . variable_41 . variable_42 ) func_8 ( variable_46 , variable_44 ) ; strcpy ( variable_45 , " FullyQualifiedDomainName " ) ; strcpy ( variable_45 , " IntegrationServicesVersion " ) ; strcpy ( variable_46 , variable_47 ) ; func_9 ( variable_48 , variable_46 , variable_44 ) ; strcpy ( variable_45 , " NetworkAddressIPv4 " ) ; func_10 ( variable_49 , variable_46 , variable_44 ) ; strcpy ( variable_45 , " NetworkAddressIPv6 " ) ; strcpy ( variable_46 , variable_50 ) ; strcpy ( variable_45 , " OSBuildNumber " ) ; strcpy ( variable_46 , variable_51 ) ; strcpy ( variable_45 , " OSName " ) ; strcpy ( variable_46 , variable_52 ) ; strcpy ( variable_45 , " OSMajorVersion " ) ; strcpy ( variable_46 , variable_53 ) ; strcpy ( variable_45 , " OSMinorVersion " ) ; strcpy ( variable_46 , variable_50 ) ; strcpy ( variable_45 , " OSVersion " ) ; strcpy ( variable_46 , variable_54 ) ; strcpy ( variable_45 , " ProcessorArchitecture " ) ; strcpy ( variable_46 , " Unknown Key " ) ; strcpy ( variable_45 , " " ) ; variable_7 -> variable_20 . variable_21 = variable_18 ; variable_7 -> variable_20 . variable_22 = variable_23 ; variable_7 -> variable_28 = 0 ; variable_7 -> variable_1 = sizeof ( struct variable_8 ) ;
