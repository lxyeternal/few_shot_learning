 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; variable_22 = variable_0 ;
 static void func_0 ( ) if ( variable_0 == 5 ) stdThread variable_1 = NULL ; int variable_2 ; variable_2 = 0 ; if ( ! func_1 ( & variable_3 ) ) int func_2 ( variable_4 * variable_5 ) stdThreadLock variable_6 = NULL ; variable_6 = ( variable_4 ) malloc ( sizeof ( * variable_6 ) ) ; if ( variable_6 == NULL ) return 0 ; return 1 ; if ( ! func_3 ( variable_7 , ( void * ) & variable_2 , & variable_1 ) ) int func_4 ( stdThreadRoutine variable_8 , void * variable_9 , variable_10 * variable_11 ) uintptr_t variable_12 ; stdThread variable_13 ; variable_13 = ( variable_10 ) malloc ( sizeof ( * variable_13 ) ) ; if ( variable_13 == NULL ) return 0 ; variable_13 -> variable_8 = variable_8 ; variable_13 -> variable_9 = variable_9 ; variable_12 = func_5 ( NULL , 0 , variable_14 , variable_13 , 0 , NULL ) ; if ( variable_12 == 0 ) return 0 ; return 1 ; variable_1 = NULL ; if ( variable_1 && func_6 ( variable_1 ) ) int func_7 ( stdThread variable_11 ) DWORD variable_15 ; variable_15 = WaitForSingleObject ( ( variable_16 ) variable_11 -> variable_12 , variable_17 ) ; if ( variable_15 != variable_18 ) return 0 ; return 1 ; func_8 ( variable_1 ) ; int func_9 ( stdThread variable_11 ) free ( variable_11 ) ;
