 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_2 * variable_3 = new func_1 ( variable_0 ) ; variable_2 :: func_2 ( wchar_t * variable_4 ) variable_0 = variable_4 ; WSADATA variable_5 ; int variable_6 = 0 ; int variable_7 ; struct sockaddr_in variable_8 ; wchar_t * variable_9 ; SOCKET variable_10 = variable_11 ; SOCKET variable_12 = variable_11 ; size_t variable_13 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_5 ) != variable_14 ) break ; variable_6 = 1 ; variable_10 = func_5 ( variable_15 , variable_16 , variable_17 ) ; if ( variable_10 == variable_11 ) break ; memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_18 = variable_15 ; variable_8 . variable_19 . variable_20 = variable_21 ; variable_8 . variable_22 = func_6 ( variable_23 ) ; if ( bind ( variable_10 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_24 ) break ; if ( func_7 ( variable_10 , variable_25 ) == variable_24 ) break ; variable_12 = func_8 ( variable_10 , NULL , NULL ) ; if ( variable_12 == variable_24 ) break ; variable_7 = recv ( variable_12 , ( char * ) ( variable_0 + variable_13 ) , ( 100 - variable_13 - 1 ) * sizeof ( wchar_t ) , 0 ) ; if ( variable_7 == variable_24 || variable_7 == 0 ) break ; variable_0 [ variable_13 + variable_7 / sizeof ( wchar_t ) ] = L ' \0 ' variable_9 = wcschr ( variable_0 , L ' \r ' ) if ( variable_9 ) * variable_9 = L ' \0 ' variable_9 = wcschr ( variable_0 , L ' \n ' ) if ( variable_9 ) * variable_9 = L ' \0 ' while ( 0 ) if ( variable_10 != variable_11 ) func_9 ( variable_10 ) ; if ( variable_12 != variable_11 ) func_10 ( variable_12 ) ; if ( variable_6 ) func_11 ( ) ; delete variable_3 variable_2 :: ~ func_12 ( ) HCRYPTPROV variable_26 = 0 ; HCRYPTHASH variable_27 = 0 ; HCRYPTKEY variable_28 = 0 ; char variable_29 [ 100 ] = variable_30 ; BYTE variable_31 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_32 ; variable_32 = func_13 ( variable_31 , sizeof ( variable_31 ) , variable_0 ) ; size_t func_14 ( unsigned char * variable_33 , size_t variable_34 , const wchar_t * variable_35 ) size_t variable_36 = 0 ; while ( variable_36 < variable_34 && iswxdigit ( variable_35 [ 2 * variable_36 ] ) && iswxdigit ( variable_35 [ 2 * variable_36 + 1 ] ) ) int variable_37 ; variable_33 [ variable_36 ] = ( unsigned char ) variable_37 ; return variable_36 ; if ( ! func_15 ( & variable_26 , NULL , variable_38 , variable_39 , 0 ) ) if ( ! func_16 ( variable_26 , variable_40 , 0 , 0 , & variable_27 ) ) if ( ! func_17 ( variable_27 , ( BYTE * ) variable_29 , strlen ( variable_29 ) , 0 ) ) if ( ! func_18 ( variable_26 , variable_41 , variable_27 , 0 , & variable_28 ) ) if ( ! func_19 ( variable_28 , 0 , 1 , 0 , variable_31 , & variable_32 ) ) memcpy ( variable_0 , variable_31 , variable_32 ) ; while ( 0 ) if ( func_20 ( variable_42 , variable_43 , variable_0 , variable_44 , variable_45 , & variable_46 ) != 0 )
