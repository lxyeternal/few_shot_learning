 static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( twoIntsStruct * ) malloc ( 10 * sizeof ( variable_0 ) ) ; variable_1 [ variable_2 ] . variable_3 = variable_2 ; variable_1 [ variable_2 ] . variable_4 = variable_2 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_5 ) variable_0 * * variable_6 = ( variable_0 * * ) variable_5 ; variable_0 * variable_1 = ( * variable_6 ) ; variable_1 [ variable_2 ] . variable_3 = variable_2 ; variable_1 [ variable_2 ] . variable_4 = variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) func_3 ( variable_1 [ variable_2 ] . variable_3 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; func_5 ( variable_1 [ variable_2 ] . variable_4 ) ; void func_6 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;
 func_0 ( register struct variable_0 * variable_1 , int variable_2 ) variable_3 * variable_4 = variable_1 -> variable_4 ; register struct variable_5 * variable_5 register struct variable_6 * variable_7 ; int variable_8 ; struct variable_9 * variable_10 ; if ( variable_2 > sizeof ( struct variable_5 ) ) variable_2 = sizeof ( struct variable_5 ) ; variable_5 = func_1 ( variable_1 , struct ip * ) variable_7 = ( struct udphdr * ) ( ( variable_11 ) variable_5 + variable_2 ) ; variable_8 = func_2 ( ( variable_12 ) variable_7 -> variable_13 ) ; if ( variable_5 -> variable_14 != variable_8 ) if ( variable_8 > variable_5 -> variable_14 ) variable_5 -> variable_14 = variable_8 ; if ( variable_7 -> variable_15 ) ( ( struct ipovly * ) variable_5 ) -> variable_16 = 0 ; ( ( struct ipovly * ) variable_5 ) -> variable_17 = variable_7 -> variable_13 ; if ( func_3 ( variable_1 , variable_8 + sizeof ( struct variable_5 ) ) ) if ( func_4 ( variable_7 -> variable_18 ) == variable_19 ) if ( variable_4 -> variable_20 ) if ( func_5 ( variable_7 -> variable_18 ) == variable_21 ) variable_10 = variable_4 -> variable_22 ; if ( variable_10 == & variable_4 -> variable_23 || variable_10 -> variable_24 != variable_7 -> variable_25 || variable_10 -> variable_26 . variable_27 != variable_5 -> variable_28 . variable_27 ) struct variable_9 * variable_29 ; for ( variable_29 = variable_4 -> variable_23 . variable_30 ; variable_29 != variable_29 = variable_29 -> variable_30 ) if ( variable_29 -> variable_24 == variable_7 -> variable_25 && variable_29 -> variable_26 . variable_27 == variable_5 -> variable_28 . variable_27 ) variable_10 = variable_29 ; if ( variable_29 == & variable_4 -> variable_23 ) variable_10 = NULL ; variable_4 -> variable_22 = variable_10 ; if ( variable_10 == NULL ) variable_10 = func_6 ( variable_4 ) ; if ( ! variable_10 ) if ( func_7 ( variable_10 ) == - 1 ) variable_10 -> variable_26 = variable_5 -> variable_28 ; variable_10 -> variable_24 = variable_7 -> variable_25 ; if ( ( variable_10 -> variable_31 = func_8 ( variable_10 ) ) == 0 ) variable_10 -> variable_31 = variable_5 -> variable_32 ; variable_10 -> variable_33 = variable_5 -> variable_34 ; variable_10 -> variable_35 = variable_7 -> variable_18 ; variable_2 += sizeof ( struct variable_6 ) ; variable_1 -> variable_36 -= variable_2 ; variable_1 -> variable_37 += variable_2 ; if ( func_9 ( variable_10 , variable_1 ) == - 1 ) variable_1 -> variable_36 += variable_2 ; variable_1 -> variable_37 -= variable_2 ; func_10 ( variable_1 , variable_38 , variable_39 , 0 , strerror ( variable_40 ) ) ;
