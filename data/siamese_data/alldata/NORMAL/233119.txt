 variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;
 variable_0 :: func_0 ( GLint variable_1 , GLint variable_2 , variable_3 GLsizei variable_4 , variable_5 GLenum variable_6 , const variable_7 < variable_8 > variable_9 & variable_10 ) if ( func_1 ( ) ) if ( variable_11 -> func_2 ( ) && ! variable_12 :: func_3 ( ) ) if ( variable_13 < 0 || variable_4 < 0 ) if ( variable_14 . func_4 ( ) ) const WebGLRectangleObject * variable_15 = func_5 ( ) ; GLsizei variable_16 = variable_15 ? variable_15 -> func_6 ( ) : 0 ; GLsizei variable_17 = variable_15 ? variable_15 -> func_7 ( ) : 0 ; switch ( variable_18 ) variable_19 = 1 ; variable_19 = 3 ; variable_19 = 4 ; uint32_t variable_20 = 0 ; int variable_21 = 0 ; bool variable_22 = false ; bool variable_23 = false ; switch ( variable_6 ) variable_22 = true ; variable_20 = 1 * variable_19 ; variable_21 = variable_24 :: variable_25 :: variable_26 ; variable_22 = true ; variable_20 = 2 ; variable_21 = variable_24 :: variable_25 :: variable_27 ; if ( func_8 ( variable_28 :: variable_29 ) || func_9 ( variable_28 :: variable_30 ) ) variable_22 = true ; variable_23 = true ; variable_20 = 4 * variable_19 ; variable_21 = variable_24 :: variable_25 :: variable_31 ; if ( ! variable_22 ) const variable_8 & variable_32 = variable_14 . func_10 ( ) ; int variable_33 = func_11 ( variable_32 . func_12 ( ) ) ; if ( variable_33 != variable_21 ) CheckedUint32 variable_34 = func_13 ( variable_4 , variable_13 , variable_20 , variable_35 ) ; CheckedUint32 variable_36 = func_14 ( variable_13 ) * variable_20 ; CheckedUint32 variable_37 = func_15 ( variable_36 , variable_35 ) ; if ( ! variable_34 . func_16 ( ) ) uint32_t variable_38 = variable_32 . func_17 ( ) ; if ( variable_34 . func_18 ( ) > variable_38 ) void * variable_39 = variable_32 . func_19 ( ) ; if ( ! variable_39 ) bool variable_40 = false ; if ( variable_41 && variable_41 -> func_20 ( ) && variable_41 -> func_21 ( 0 ) . func_22 ( ) ) variable_40 = variable_41 -> func_23 ( 0 ) . func_24 ( ) ; if ( variable_23 != variable_40 ) if ( variable_41 ) if ( ! variable_41 -> func_25 ( ) ) bool variable_42 = false ; if ( variable_43 -> func_26 ( variable_43 :: variable_44 :: variable_45 ) ) GLenum variable_46 = 0 ; GLenum variable_47 = 0 ; if ( variable_6 == variable_46 && variable_18 == variable_47 ) variable_42 = true ; switch ( variable_18 ) switch ( variable_6 ) variable_42 = true ; if ( ! variable_42 ) if ( variable_13 == 0 || variable_4 == 0 ) if ( variable_48 :: func_27 ( variable_1 , variable_2 , variable_13 , variable_4 , variable_16 , variable_17 ) ) if ( variable_1 >= variable_16 || variable_1 + variable_13 <= 0 || variable_2 >= variable_17 || variable_2 + variable_4 <= 0 ) GLint variable_49 = variable_50 :: max ( variable_1 , 0 ) ; GLint variable_51 = variable_50 :: min ( variable_1 + variable_13 , variable_16 ) ; GLsizei variable_52 = variable_51 - variable_49 ; GLint variable_53 = variable_50 :: max ( variable_2 , 0 ) ; GLint variable_54 = variable_50 :: min ( variable_2 + variable_4 , variable_17 ) ; GLsizei variable_55 = variable_54 - variable_53 ; if ( variable_52 < 0 || variable_55 < 0 || variable_52 > variable_13 || variable_55 > variable_4 ) if ( ! variable_56 ) if ( variable_18 == variable_57 || variable_18 == variable_58 ) bool variable_59 ; if ( variable_41 ) variable_59 = ! variable_41 -> func_28 ( 0 ) . func_29 ( ) ; variable_59 = variable_43 -> func_30 ( ) . variable_60 == 0 ; if ( variable_59 ) if ( variable_18 == variable_57 && variable_6 == variable_61 ) variable_62 * variable_63 = variable_64 < variable_62 * > variable_39 for ( GLint variable_65 = 0 ; variable_65 < variable_4 ; ++ variable_65 ) memset ( variable_63 , 0 variable_66 , variable_36 . func_31 ( ) ) ; variable_63 += variable_37 . func_32 ( ) ; variable_62 * variable_67 = variable_63 ; variable_67 += 3 ; variable_62 * variable_68 = variable_67 + 4 * variable_13 ; while ( variable_67 != variable_68 ) * variable_67 = 0 variable_66 ; variable_67 += 4 ; variable_63 += variable_37 . func_33 ( ) ; float * variable_69 = variable_63 + 3 ; float * variable_70 = variable_69 + 4 * variable_13 ; while ( variable_69 != variable_70 ) * variable_69 = 1 . 0 variable_71 ; variable_69 += 4 ; variable_63 += variable_37 . func_34 ( ) ;
