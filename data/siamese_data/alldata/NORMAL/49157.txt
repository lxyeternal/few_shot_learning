 static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 int func_0 ( ) char * variable_0 ; if ( func_1 ( & variable_1 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_0 = getenv ( " MALEMIUT_DEINOCEPHALIA " ) ; if ( variable_0 != 0 ) variable_2 [ 5 ] = variable_0 ; variable_3 = * ( variable_2 + * variable_4 ) ; func_3 ( variable_5 , variable_3 ) ; void func_4 ( int variable_6 , char * variable_7 ) variable_6 -- ; if ( variable_6 > 0 ) func_5 ( variable_6 , variable_7 ) ; void func_6 ( int variable_6 , char * variable_7 ) variable_6 -- ; if ( variable_6 > 0 ) func_7 ( variable_6 , variable_7 ) ; variable_8 = ( ( char * ) variable_7 ) ; variable_9 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_8 ) + 1 ) ) ; variable_9 -> variable_11 = malloc ( sizeof ( char ) * ( strlen ( variable_8 ) + 1 ) ) ; if ( variable_9 -> variable_10 && variable_9 -> variable_11 ) if ( ( sscanf ( variable_8 , " %s %s " , variable_9 -> variable_11 , variable_9 -> variable_10 ) == 2 ) && ( strlen ( variable_9 -> variable_10 ) != 0 ) && ( strlen ( variable_9 -> variable_11 ) != 0 ) ) func_8 ( variable_12 , variable_13 , " stonesoupData -> data " , variable_9 -> variable_10 , " INITIAL - STATE " ) ; func_9 ( variable_12 , variable_13 , " stonesoupData -> file1 " , variable_9 -> variable_11 , " INITIAL - STATE " ) ; variable_9 -> variable_14 = strlen ( variable_9 -> variable_10 ) ; func_10 ( variable_9 ) ; void func_11 ( void * variable_10 ) struct variable_15 * variable_9 = ( struct stonesoup_data * ) variable_10 ; char * variable_16 = malloc ( sizeof ( char ) * ( variable_9 -> variable_14 + 1 ) ) ; while ( variable_9 -> variable_10 [ variable_17 ] != ' \0 ' ) if ( ( variable_9 -> variable_10 [ variable_17 ] >= ' A ' && variable_9 -> variable_10 [ variable_17 ] <= ' Z ' ) || ( variable_9 -> variable_10 [ variable_17 ] >= ' a ' && variable_9 -> variable_10 [ variable_17 ] <= ' z ' ) ) variable_16 [ variable_18 ++ ] = variable_9 -> variable_10 [ variable_17 ] ; variable_16 [ variable_18 ++ ] = ' \0 ' ; variable_9 -> variable_14 = variable_18 ; free ( variable_9 -> variable_10 ) ; variable_9 -> variable_10 = variable_16 ; func_12 ( variable_9 -> variable_11 ) ; void func_13 ( char * variable_19 ) func_14 ( variable_19 ) ; void func_15 ( char * variable_20 ) variable_21 = fopen ( variable_20 , " r " ) ; if ( variable_21 != NULL ) while ( ( variable_22 = fgetc ( variable_21 ) ) != variable_23 ) func_16 ( " %c " , variable_22 ) ; void func_17 ( char * variable_24 , . . . ) va_start ( variable_25 , variable_24 ) ; vfprintf ( variable_26 , variable_24 , variable_25 ) ; fclose ( variable_21 ) ; free ( variable_9 -> variable_10 ) ; free ( variable_9 ) ; variable_8 = ( ( char * ) variable_7 ) ; variable_9 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_8 ) + 1 ) ) ; variable_9 -> variable_11 = malloc ( sizeof ( char ) * ( strlen ( variable_8 ) + 1 ) ) ; if ( variable_9 -> variable_10 && variable_9 -> variable_11 ) if ( ( sscanf ( variable_8 , " %s %s " , variable_9 -> variable_11 , variable_9 -> variable_10 ) == 2 ) && ( strlen ( variable_9 -> variable_10 ) != 0 ) && ( strlen ( variable_9 -> variable_11 ) != 0 ) ) func_18 ( variable_12 , variable_13 , " stonesoupData -> data " , variable_9 -> variable_10 , " INITIAL - STATE " ) ; func_19 ( variable_12 , variable_13 , " stonesoupData -> file1 " , variable_9 -> variable_11 , " INITIAL - STATE " ) ; variable_9 -> variable_14 = strlen ( variable_9 -> variable_10 ) ; func_20 ( variable_9 ) ; free ( variable_9 -> variable_10 ) ; free ( variable_9 ) ;
