 static void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; if ( variable_1 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = strtoul ( variable_2 , NULL , 0 ) ; if ( variable_1 ) char * variable_5 ; if ( variable_0 > strlen ( variable_6 ) && variable_0 < 100 ) variable_5 = new char [ variable_0 ] ; strcpy ( variable_5 , variable_6 ) ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; delete [ ] variable_5
 char * func_0 ( struct variable_0 * variable_1 , const char * variable_2 , char * variable_3 , int variable_4 , size_t * variable_5 , int * variable_6 ) state_num variable_7 ; state_num variable_8 ; const unsigned char * variable_9 ; variable_10 * * variable_11 ; variable_10 * variable_12 ; unsigned char variable_13 = variable_14 ; unsigned char variable_15 ; variable_7 = variable_8 = 0 ; variable_9 = ( ( const unsigned char * ) variable_2 ) ; variable_11 = variable_1 -> variable_11 ; variable_15 = * ( ( unsigned char * ) variable_3 ) ; * variable_3 = variable_13 ; if ( variable_1 -> variable_16 > 1 ) while ( ( variable_12 = variable_11 [ variable_7 ] ) != ( ( void * ) 0 ) ) if ( variable_9 > variable_17 ) variable_8 = variable_7 ; if ( variable_7 == 0 ) if ( ( ( char * ) variable_9 ) >= variable_3 ) * variable_3 = variable_15 ; if ( variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 == 0 ) variable_7 = variable_12 [ * ( variable_9 ++ ) ] ; if ( variable_6 ) * variable_3 = variable_15 ; variable_7 = func_1 ( variable_1 , variable_7 , & variable_9 ) ; static state_num func_2 ( struct variable_0 * variable_1 , state_num variable_7 , const unsigned char * * variable_21 ) state_num variable_8 ; int variable_22 ; int variable_23 = 0 ; size_t variable_24 ; size_t variable_20 = variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 ; const unsigned char * variable_25 = * variable_21 ; wchar_t variable_26 ; if ( variable_20 > 0 ) variable_27 = func_3 ( variable_1 , variable_7 , ( * variable_21 - variable_28 ) ) ; static int * func_4 ( struct variable_0 * variable_1 , state_num variable_7 , size_t variable_29 ) size_t variable_24 ; int * variable_30 ; variable_30 = ( ( sizeof ( ( * variable_30 ) ) == 1 ? xmalloc ( variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 ) : xnmalloc ( variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 , sizeof ( ( * variable_30 ) ) ) ) ) ; while ( 0 ) for ( variable_24 = 0 ; variable_24 < variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 ; ++ variable_24 ) position variable_31 = variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_32 [ variable_24 ] ; switch ( variable_1 -> variable_33 [ variable_31 . variable_34 ] ) variable_30 [ variable_24 ] = func_5 ( variable_1 , variable_7 , variable_31 , variable_29 ) ; static int func_6 ( struct variable_0 * variable_1 , state_num variable_7 , position variable_31 , size_t variable_29 ) int variable_35 ; wchar_t variable_26 ; int variable_22 ; variable_26 = variable_36 [ variable_29 ] ; variable_22 = ( variable_37 [ variable_29 ] == 0 ? 1 : variable_37 [ variable_29 ] ) ; if ( variable_26 == ( ( wchar_t ) variable_14 ) ) if ( ! ( variable_38 & ( ( unsigned long ) 1 ) << 1 << 1 << 1 << 1 << 1 << 1 ) ) return 0 ; if ( variable_26 == ( ( wchar_t ) ' \0 ' ) ) if ( variable_38 & ( ( unsigned long ) 1 ) << 1 << 1 << 1 << 1 << 1 << 1 << 1 ) return 0 ; variable_35 = func_7 ( variable_26 ) ; static int func_8 ( wint_t variable_26 ) if ( variable_26 == ( ( wchar_t ) variable_14 ) || variable_26 == 0 ) return 4 ; if ( variable_26 == ' _ ' || iswalnum ( variable_26 ) ) return 2 ; return 1 ; if ( ! ( ( ( ( variable_35 & 1 ? variable_31 . variable_39 & 0 variable_40 : 0 ) ) | ( ( variable_35 & 2 ? variable_31 . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( variable_35 & 4 ? variable_31 . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) ) return 0 ; return variable_22 ; variable_30 [ variable_24 ] = func_9 ( variable_1 , variable_7 , variable_31 , variable_29 ) ; static int func_10 ( struct variable_0 * variable_1 , state_num variable_7 , position variable_31 , size_t variable_29 ) size_t variable_24 ; int variable_41 ; int variable_42 ; int variable_43 ; char variable_44 [ 128 ] ; struct variable_45 * variable_46 ; int variable_35 ; wchar_t variable_26 ; variable_26 = variable_36 [ variable_29 ] ; if ( variable_26 == ( ( wchar_t ) variable_14 ) ) if ( ! ( variable_38 & ( ( unsigned long ) 1 ) << 1 << 1 << 1 << 1 << 1 << 1 ) ) return 0 ; if ( variable_26 == ( ( wchar_t ) ' \0 ' ) ) if ( variable_38 & ( ( unsigned long ) 1 ) << 1 << 1 << 1 << 1 << 1 << 1 << 1 ) return 0 ; variable_35 = func_11 ( variable_26 ) ; static int func_12 ( wint_t variable_26 ) if ( variable_26 == ( ( wchar_t ) variable_14 ) || variable_26 == 0 ) return 4 ; if ( variable_26 == ' _ ' || iswalnum ( variable_26 ) ) return 2 ; return 1 ; if ( ! ( ( ( ( variable_35 & 1 ? variable_31 . variable_39 & 0 variable_40 : 0 ) ) | ( ( variable_35 & 2 ? variable_31 . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( variable_35 & 4 ? variable_31 . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) ) return 0 ; variable_46 = & variable_1 -> variable_47 [ variable_1 -> variable_48 [ variable_31 . variable_34 ] >> 2 ] ; variable_41 = ! variable_46 -> variable_49 ; variable_42 = ( variable_37 [ variable_29 ] == 0 ? 1 : variable_37 [ variable_29 ] ) ; if ( variable_26 < 1 << 8 && variable_46 -> variable_50 != ( - 1 ) && func_13 ( ( ( unsigned char ) variable_26 ) , variable_1 -> variable_51 [ variable_46 -> variable_50 ] ) ) static int func_14 ( unsigned int variable_52 , const int variable_53 [ ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ] ) return variable_53 [ variable_52 / ( 8 * sizeof ( int ) ) ] & 1 << variable_52 % ( 8 * sizeof ( int ) ) ; for ( variable_24 = 0 ; variable_24 < variable_46 -> variable_54 ; variable_24 ++ ) if ( iswctype ( ( ( variable_55 ) variable_26 ) , variable_46 -> variable_56 [ variable_24 ] ) ) strncpy ( variable_44 , ( ( const char * ) variable_28 ) + variable_29 , variable_42 ) ; variable_44 [ variable_42 ] = ' \0 ' ; for ( variable_24 = 0 ; variable_24 < variable_46 -> variable_57 ; variable_24 ++ ) variable_43 = ( strlen ( variable_46 -> variable_58 [ variable_24 ] ) ) ; strncpy ( variable_44 , ( ( const char * ) variable_28 ) + variable_29 , variable_43 ) ; variable_44 [ variable_43 ] = ' \0 ' ; if ( strcoll ( variable_46 -> variable_58 [ variable_24 ] , variable_44 ) == 0 ) variable_42 = variable_43 ; for ( variable_24 = 0 ; variable_24 < variable_46 -> variable_59 ; variable_24 ++ ) variable_43 = ( strlen ( variable_46 -> variable_60 [ variable_24 ] ) ) ; strncpy ( variable_44 , ( ( const char * ) variable_28 ) + variable_29 , variable_43 ) ; variable_44 [ variable_43 ] = ' \0 ' ; if ( strcoll ( variable_46 -> variable_60 [ variable_24 ] , variable_44 ) == 0 ) variable_42 = variable_43 ; for ( variable_24 = 0 ; variable_24 < variable_46 -> variable_61 ; variable_24 ++ ) if ( variable_46 -> variable_62 [ variable_24 ] <= variable_26 && variable_26 <= variable_46 -> variable_63 [ variable_24 ] ) for ( variable_24 = 0 ; variable_24 < variable_46 -> variable_64 ; variable_24 ++ ) if ( variable_26 == variable_46 -> variable_65 [ variable_24 ] ) variable_41 = ! variable_41 ; return variable_41 ? variable_42 : 0 ; return variable_30 ; for ( variable_24 = 0 ; variable_24 < variable_20 ; variable_24 ++ ) if ( variable_27 [ variable_24 ] > variable_23 ) variable_23 = variable_27 [ variable_24 ] ; if ( variable_20 == 0 || variable_23 == 0 ) return variable_8 ; variable_26 = variable_36 [ * variable_21 - variable_22 - variable_28 ] ; variable_8 = func_15 ( variable_1 , ( & variable_66 ) , func_16 ( variable_26 ) ) ; static int func_17 ( wint_t variable_26 ) if ( variable_26 == ( ( wchar_t ) variable_14 ) || variable_26 == 0 ) return 4 ; if ( variable_26 == ' _ ' || iswalnum ( variable_26 ) ) return 2 ; return 1 ; static state_num func_18 ( struct variable_0 * variable_1 , const position_set * variable_7 , int variable_35 ) size_t variable_67 = 0 ; int variable_39 ; state_num variable_24 ; state_num variable_68 ; for ( variable_24 = 0 ; variable_24 < variable_7 -> variable_20 ; ++ variable_24 ) variable_67 ^= variable_7 -> variable_32 [ variable_24 ] . variable_34 + variable_7 -> variable_32 [ variable_24 ] . variable_39 ; for ( variable_24 = 0 ; variable_24 < variable_1 -> variable_69 ; ++ variable_24 ) if ( variable_67 != variable_1 -> variable_18 [ variable_24 ] . variable_67 || variable_7 -> variable_20 != variable_1 -> variable_18 [ variable_24 ] . variable_32 . variable_20 || variable_35 != variable_1 -> variable_18 [ variable_24 ] . variable_35 ) if ( variable_68 == variable_7 -> variable_20 ) return variable_24 ; if ( variable_1 -> variable_70 <= variable_1 -> variable_69 + 1 ) size_t variable_71 = ( variable_1 -> variable_69 + 1 + ( ! variable_1 -> variable_18 ) ) ; variable_1 -> variable_18 = ( func_19 ( ( variable_1 -> variable_18 ) , & variable_71 , sizeof ( ( * variable_1 -> variable_18 ) ) ) ) ; variable_1 -> variable_70 = variable_71 ; while ( 0 ) variable_1 -> variable_18 [ variable_24 ] . variable_67 = variable_67 ; variable_1 -> variable_18 [ variable_24 ] . variable_35 = variable_35 ; variable_1 -> variable_18 [ variable_24 ] . variable_6 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_39 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_72 = 0 ; if ( 1 ) variable_1 -> variable_18 [ variable_24 ] . variable_19 . variable_20 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_19 . variable_32 = ( ( void * ) 0 ) ; for ( variable_68 = 0 ; variable_68 < variable_7 -> variable_20 ; ++ variable_68 ) if ( variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] < 0 ) variable_39 = variable_7 -> variable_32 [ variable_68 ] . variable_39 ; if ( ( ( ( 7 & 1 ? variable_39 & 0 variable_40 : 0 ) ) | ( ( 7 & 2 ? variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 7 & 4 ? variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_35 ) variable_1 -> variable_18 [ variable_24 ] . variable_39 |= variable_39 ; if ( ! variable_1 -> variable_18 [ variable_24 ] . variable_72 ) variable_1 -> variable_18 [ variable_24 ] . variable_72 = variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] ; if ( variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] == variable_73 ) variable_1 -> variable_18 [ variable_24 ] . variable_39 = 0 variable_74 ; variable_1 -> variable_18 [ variable_24 ] . variable_6 = 1 ; return variable_24 ; while ( * variable_21 - variable_25 < variable_23 ) variable_26 = variable_36 [ * variable_21 - variable_22 - variable_28 ] ; variable_8 = func_20 ( variable_1 , ( & variable_66 ) , func_21 ( variable_26 ) ) ; static int func_22 ( wint_t variable_26 ) if ( variable_26 == ( ( wchar_t ) variable_14 ) || variable_26 == 0 ) return 4 ; if ( variable_26 == ' _ ' || iswalnum ( variable_26 ) ) return 2 ; return 1 ; static state_num func_23 ( struct variable_0 * variable_1 , const position_set * variable_7 , int variable_35 ) size_t variable_67 = 0 ; int variable_39 ; state_num variable_24 ; state_num variable_68 ; variable_67 ^= variable_7 -> variable_32 [ variable_24 ] . variable_34 + variable_7 -> variable_32 [ variable_24 ] . variable_39 ; if ( variable_67 != variable_1 -> variable_18 [ variable_24 ] . variable_67 || variable_7 -> variable_20 != variable_1 -> variable_18 [ variable_24 ] . variable_32 . variable_20 || variable_35 != variable_1 -> variable_18 [ variable_24 ] . variable_35 ) if ( variable_68 == variable_7 -> variable_20 ) return variable_24 ; if ( variable_1 -> variable_70 <= variable_1 -> variable_69 + 1 ) size_t variable_71 = ( variable_1 -> variable_69 + 1 + ( ! variable_1 -> variable_18 ) ) ; variable_1 -> variable_18 = ( func_24 ( ( variable_1 -> variable_18 ) , & variable_71 , sizeof ( ( * variable_1 -> variable_18 ) ) ) ) ; variable_1 -> variable_70 = variable_71 ; while ( 0 ) variable_1 -> variable_18 [ variable_24 ] . variable_67 = variable_67 ; variable_1 -> variable_18 [ variable_24 ] . variable_35 = variable_35 ; variable_1 -> variable_18 [ variable_24 ] . variable_6 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_39 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_72 = 0 ; if ( 1 ) variable_1 -> variable_18 [ variable_24 ] . variable_19 . variable_20 = 0 ; variable_1 -> variable_18 [ variable_24 ] . variable_19 . variable_32 = ( ( void * ) 0 ) ; if ( variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] < 0 ) variable_39 = variable_7 -> variable_32 [ variable_68 ] . variable_39 ; if ( ( ( ( 7 & 1 ? variable_39 & 0 variable_40 : 0 ) ) | ( ( 7 & 2 ? variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 7 & 4 ? variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_35 ) variable_1 -> variable_18 [ variable_24 ] . variable_39 |= variable_39 ; if ( ! variable_1 -> variable_18 [ variable_24 ] . variable_72 ) variable_1 -> variable_18 [ variable_24 ] . variable_72 = variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] ; if ( variable_1 -> variable_33 [ variable_7 -> variable_32 [ variable_68 ] . variable_34 ] == variable_73 ) variable_1 -> variable_18 [ variable_24 ] . variable_39 = 0 variable_74 ; variable_1 -> variable_18 [ variable_24 ] . variable_6 = 1 ; return variable_24 ; return variable_8 ; variable_11 = variable_1 -> variable_11 ; while ( ( variable_12 = variable_11 [ variable_7 ] ) != ( ( void * ) 0 ) ) variable_8 = variable_12 [ * ( variable_9 ++ ) ] ; if ( ( variable_12 = variable_11 [ variable_8 ] ) == ( ( void * ) 0 ) ) state_num variable_75 = variable_7 ; variable_7 = variable_8 ; variable_8 = variable_75 ; variable_7 = variable_12 [ * ( variable_9 ++ ) ] ; if ( variable_7 >= 0 && ( ( char * ) variable_9 ) <= variable_3 && variable_1 -> variable_76 [ variable_7 ] ) if ( variable_1 -> variable_77 [ variable_7 ] & variable_78 [ * variable_9 ] ) variable_8 = variable_7 ; if ( variable_1 -> variable_16 > 1 ) variable_7 = func_25 ( variable_1 , variable_7 , & variable_9 ) ; static state_num func_26 ( struct variable_0 * variable_1 , state_num variable_7 , const unsigned char * * variable_21 ) state_num variable_8 ; int variable_22 ; int variable_23 = 0 ; size_t variable_24 ; size_t variable_20 = variable_1 -> variable_18 [ variable_7 ] . variable_19 . variable_20 ; const unsigned char * variable_25 = * variable_21 ; wchar_t variable_26 ; if ( variable_20 > 0 ) variable_27 = func_27 ( variable_1 , variable_7 , ( * variable_21 - variable_28 ) ) ; if ( variable_27 [ variable_24 ] > variable_23 ) variable_23 = variable_27 [ variable_24 ] ; if ( variable_20 == 0 || variable_23 == 0 ) return variable_8 ; variable_26 = variable_36 [ * variable_21 - variable_22 - variable_28 ] ; variable_8 = func_28 ( variable_1 , ( & variable_66 ) , func_29 ( variable_26 ) ) ; while ( * variable_21 - variable_25 < variable_23 ) variable_26 = variable_36 [ * variable_21 - variable_22 - variable_28 ] ; variable_8 = func_30 ( variable_1 , ( & variable_66 ) , func_31 ( variable_26 ) ) ; return variable_8 ; variable_11 = variable_1 -> variable_11 ; variable_7 = variable_1 -> variable_76 [ variable_7 ] [ * ( variable_9 ++ ) ] ; if ( ( ( char * ) variable_9 ) > variable_3 ) if ( variable_7 >= 0 ) func_32 ( variable_7 , variable_1 ) ; variable_11 = variable_1 -> variable_11 ; if ( variable_9 [ - 1 ] == variable_13 && variable_4 ) variable_7 = variable_1 -> variable_79 [ variable_8 ] ; variable_7 = 0 ; static void func_33 ( state_num variable_7 , struct variable_0 * variable_1 ) variable_10 * variable_11 ; state_num variable_24 ; if ( variable_1 -> variable_80 >= 1024 ) for ( variable_24 = 0 ; variable_24 < variable_1 -> variable_81 ; ++ variable_24 ) variable_1 -> variable_11 [ variable_24 ] = variable_1 -> variable_76 [ variable_24 ] = ( ( void * ) 0 ) ; variable_1 -> variable_80 = 0 ; variable_1 -> variable_77 [ variable_7 ] = 0 ; if ( ( ( ( 4 & 1 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 & 0 variable_40 : 0 ) ) | ( ( 4 & 2 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 4 & 4 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) variable_1 -> variable_77 [ variable_7 ] |= 4 ; if ( ( ( ( 2 & 1 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 & 0 variable_40 : 0 ) ) | ( ( 2 & 2 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 2 & 4 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) variable_1 -> variable_77 [ variable_7 ] |= 2 ; if ( ( ( ( 1 & 1 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 & 0 variable_40 : 0 ) ) | ( ( 1 & 2 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 1 & 4 ? ( * variable_1 ) . variable_18 [ variable_7 ] . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) variable_1 -> variable_77 [ variable_7 ] |= 1 ; variable_11 = ( ( sizeof ( ( * variable_11 ) ) == 1 ? xmalloc ( ( 1 << 8 ) ) : xnmalloc ( ( 1 << 8 ) , sizeof ( ( * variable_11 ) ) ) ) ) ; while ( 0 ) func_34 ( variable_7 , variable_1 , variable_11 ) ; void func_35 ( state_num variable_7 , struct variable_0 * variable_1 , token variable_11 [ ] ) variable_82 * variable_83 ; variable_84 * variable_85 ; size_t variable_86 = 0 ; position variable_31 ; charclass variable_87 ; int variable_88 ; charclass variable_89 ; int variable_90 ; charclass variable_91 ; int variable_92 ; size_t variable_24 ; size_t variable_68 ; size_t variable_93 ; variable_83 = ( ( sizeof ( ( * variable_83 ) ) == 1 ? xmalloc ( ( 1 << 8 ) ) : xnmalloc ( ( 1 << 8 ) , sizeof ( ( * variable_83 ) ) ) ) ) ; while ( 0 ) variable_85 = ( ( sizeof ( ( * variable_85 ) ) == 1 ? xmalloc ( ( 1 << 8 ) ) : xnmalloc ( ( 1 << 8 ) , sizeof ( ( * variable_85 ) ) ) ) ) ; while ( 0 ) for ( variable_24 = 0 ; variable_24 < variable_1 -> variable_18 [ variable_7 ] . variable_32 . variable_20 ; ++ variable_24 ) variable_31 = variable_1 -> variable_18 [ variable_7 ] . variable_32 . variable_32 [ variable_24 ] ; if ( variable_1 -> variable_33 [ variable_31 . variable_34 ] >= 0 && variable_1 -> variable_33 [ variable_31 . variable_34 ] < ( 1 << 8 ) ) if ( variable_1 -> variable_33 [ variable_31 . variable_34 ] >= variable_94 ) if ( variable_31 . variable_39 != 0 variable_74 ) if ( ! ( ( ( ( 4 & 1 ? variable_31 . variable_39 & 0 variable_40 : 0 ) ) | ( ( 4 & 2 ? variable_31 . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 4 & 4 ? variable_31 . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) ) for ( variable_68 = 0 ; variable_68 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ; ++ variable_68 ) variable_87 [ variable_68 ] &= ~ variable_95 [ variable_68 ] ; if ( ! ( ( ( ( 2 & 1 ? variable_31 . variable_39 & 0 variable_40 : 0 ) ) | ( ( 2 & 2 ? variable_31 . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 2 & 4 ? variable_31 . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) ) for ( variable_68 = 0 ; variable_68 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ; ++ variable_68 ) variable_87 [ variable_68 ] &= ~ variable_96 [ variable_68 ] ; if ( ! ( ( ( ( 1 & 1 ? variable_31 . variable_39 & 0 variable_40 : 0 ) ) | ( ( 1 & 2 ? variable_31 . variable_39 >> 4 & 0 variable_40 : 0 ) ) | ( ( 1 & 4 ? variable_31 . variable_39 >> 8 & 0 variable_40 : 0 ) ) ) & variable_1 -> variable_18 [ variable_7 ] . variable_35 ) ) for ( variable_68 = 0 ; variable_68 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ; ++ variable_68 ) variable_87 [ variable_68 ] &= variable_96 [ variable_68 ] | variable_95 [ variable_68 ] ; for ( variable_68 = 0 ; variable_68 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) && ! variable_87 [ variable_68 ] ; ++ variable_68 ) if ( variable_68 == ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ) for ( variable_68 = 0 ; variable_68 < variable_86 ; ++ variable_68 ) if ( variable_1 -> variable_33 [ variable_31 . variable_34 ] >= 0 && variable_1 -> variable_33 [ variable_31 . variable_34 ] < ( 1 << 8 ) && ! func_36 ( variable_1 -> variable_33 [ variable_31 . variable_34 ] , variable_85 [ variable_68 ] ) ) static int func_37 ( unsigned int variable_52 , const int variable_53 [ ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ] ) return variable_53 [ variable_52 / ( 8 * sizeof ( int ) ) ] & 1 << variable_52 % ( 8 * sizeof ( int ) ) ; variable_90 = 0 ; for ( variable_93 = 0 ; variable_93 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ; ++ variable_93 ) ( variable_89 [ variable_93 ] = variable_87 [ variable_93 ] & variable_85 [ variable_68 ] [ variable_93 ] ) ? ( variable_90 = 1 ) : 0 ; if ( ! variable_90 ) variable_92 = variable_88 = 0 ; for ( variable_93 = 0 ; variable_93 < ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ; ++ variable_93 ) int variable_41 = variable_87 [ variable_93 ] ; int variable_97 = variable_85 [ variable_68 ] [ variable_93 ] ; ( variable_91 [ variable_93 ] = ~ variable_41 & variable_97 ) ? ( variable_92 = 1 ) : 0 ; ( variable_87 [ variable_93 ] = variable_41 & ~ variable_97 ) ? ( variable_88 = 1 ) : 0 ; if ( variable_92 ) func_38 ( variable_91 , variable_85 [ variable_86 ] ) ; func_39 ( variable_89 , variable_85 [ variable_68 ] ) ; variable_83 [ variable_86 ] . variable_32 = ( ( sizeof ( ( * variable_83 [ variable_86 ] . variable_32 ) ) == 1 ? xmalloc ( variable_1 -> variable_98 ) : xnmalloc ( variable_1 -> variable_98 , sizeof ( ( * variable_83 [ variable_86 ] . variable_32 ) ) ) ) ) ; while ( 0 ) memcpy ( variable_83 [ variable_86 ] . variable_32 , variable_83 [ variable_68 ] . variable_32 , sizeof ( variable_83 [ variable_68 ] . variable_32 [ 0 ] ) * variable_83 [ variable_68 ] . variable_20 ) ; variable_83 [ variable_86 ] . variable_20 = variable_83 [ variable_68 ] . variable_20 ; variable_83 [ variable_68 ] . variable_32 [ variable_83 [ variable_68 ] . variable_20 ++ ] = variable_31 . variable_34 ; if ( ! variable_88 ) if ( variable_68 == variable_86 ) func_40 ( variable_87 , variable_85 [ variable_86 ] ) ; static void func_41 ( const int variable_99 [ ( ( 1 << 8 ) + 8 * sizeof ( int ) - 1 ) / ( 8 * sizeof ( int ) ) ] , charclass variable_100 ) memcpy ( variable_100 , variable_99 , sizeof ( variable_84 ) ) ; variable_83 [ variable_86 ] . variable_32 = ( ( sizeof ( ( * variable_83 [ variable_86 ] . variable_32 ) ) == 1 ? xmalloc ( variable_1 -> variable_98 ) : xnmalloc ( variable_1 -> variable_98 , sizeof ( ( * variable_83 [ variable_86 ] . variable_32 ) ) ) ) ) ; while ( 0 ) variable_83 [ variable_86 ] . variable_20 = 1 ; variable_83 [ variable_86 ] . variable_32 [ 0 ] = variable_31 . variable_34 ; for ( variable_24 = 0 ; variable_24 < variable_86 ; ++ variable_24 ) for ( variable_68 = 0 ; variable_68 < variable_83 [ variable_24 ] . variable_20 ; ++ variable_68 ) for ( variable_93 = 0 ; variable_93 < variable_1 -> variable_66 [ variable_83 [ variable_24 ] . variable_32 [ variable_68 ] ] . variable_20 ; ++ variable_93 ) func_42 ( variable_1 -> variable_66 [ variable_83 [ variable_24 ] . variable_32 [ variable_68 ] ] . variable_32 [ variable_93 ] , & variable_66 ) ; static void func_43 ( position variable_9 , variable_101 * variable_7 ) size_t variable_5 = variable_7 -> variable_20 ; size_t variable_102 = variable_5 ; while ( variable_103 < variable_102 ) size_t variable_104 = variable_103 + variable_102 >> 1 ; if ( variable_7 -> variable_32 [ variable_104 ] . variable_34 > variable_9 . variable_34 ) variable_103 = variable_104 + 1 ; variable_102 = variable_104 ; if ( variable_103 < variable_5 && variable_9 . variable_34 == variable_7 -> variable_32 [ variable_103 ] . variable_34 ) variable_7 -> variable_32 [ variable_103 ] . variable_39 |= variable_9 . variable_39 ; if ( variable_7 -> variable_105 <= variable_5 + 1 ) size_t variable_71 = variable_5 + 1 + ( ! variable_7 -> variable_32 ) ; variable_7 -> variable_32 = ( func_44 ( ( variable_7 -> variable_32 ) , & variable_71 , sizeof ( ( * variable_7 -> variable_32 ) ) ) ) ; variable_7 -> variable_105 = variable_71 ; for ( variable_24 = variable_5 ; variable_24 > variable_103 ; variable_24 -- ) variable_7 -> variable_32 [ variable_24 ] = variable_7 -> variable_32 [ variable_24 - 1 ] ; variable_7 -> variable_32 [ variable_103 ] = variable_9 ; ++ variable_7 -> variable_20 ; if ( ! ( variable_1 -> variable_48 [ variable_66 . variable_32 [ variable_68 ] . variable_34 ] & 1 ) ) func_45 ( variable_1 -> variable_18 [ 0 ] . variable_32 . variable_32 [ variable_68 ] , & variable_66 ) ; static void func_46 ( position variable_9 , variable_101 * variable_7 ) size_t variable_5 = variable_7 -> variable_20 ; size_t variable_102 = variable_5 ; while ( variable_103 < variable_102 ) size_t variable_104 = variable_103 + variable_102 >> 1 ; if ( variable_7 -> variable_32 [ variable_104 ] . variable_34 > variable_9 . variable_34 ) variable_103 = variable_104 + 1 ; variable_102 = variable_104 ; if ( variable_103 < variable_5 && variable_9 . variable_34 == variable_7 -> variable_32 [ variable_103 ] . variable_34 ) variable_7 -> variable_32 [ variable_103 ] . variable_39 |= variable_9 . variable_39 ; if ( variable_7 -> variable_105 <= variable_5 + 1 ) size_t variable_71 = variable_5 + 1 + ( ! variable_7 -> variable_32 ) ; variable_7 -> variable_32 = ( func_47 ( ( variable_7 -> variable_32 ) , & variable_71 , sizeof ( ( * variable_7 -> variable_32 ) ) ) ) ; variable_7 -> variable_105 = variable_71 ; variable_7 -> variable_32 [ variable_24 ] = variable_7 -> variable_32 [ variable_24 - 1 ] ; variable_7 -> variable_32 [ variable_103 ] = variable_9 ; ++ variable_7 -> variable_20 ; if ( variable_85 [ variable_24 ] [ variable_68 ] & 1 << variable_93 ) for ( variable_24 = 0 ; variable_24 < variable_86 ; ++ variable_24 ) free ( variable_83 [ variable_24 ] . variable_32 ) ; free ( variable_83 ) ;
 int func_0 ( variable_0 * * variable_1 , const char * variable_2 , variable_3 * variable_4 , variable_5 * * variable_6 ) variable_0 * variable_7 = * variable_1 ; variable_8 * variable_9 = ( ( void * ) 0 ) ; if ( ! variable_7 && ! ( variable_7 = func_1 ( ) ) ) if ( ! variable_7 -> variable_10 ) if ( variable_4 ) variable_7 -> variable_11 = variable_4 ; if ( ( variable_12 = func_2 ( variable_7 , & variable_13 ) ) < 0 ) if ( ( variable_12 = func_3 ( variable_7 , variable_2 , & variable_13 ) ) < 0 ) static int func_4 ( variable_0 * variable_7 , const char * variable_2 , variable_5 * * variable_6 ) int variable_12 ; if ( variable_7 -> variable_14 ) variable_7 -> variable_15 |= 0 variable_16 ; if ( ! variable_7 -> variable_11 ) return func_5 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_6 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_7 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_8 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_9 ( " aac " ) ; variable_3 * func_10 ( const char * variable_29 ) variable_3 * variable_4 = ( ( void * ) 0 ) ; while ( variable_4 = func_11 ( variable_4 ) ) variable_3 * func_12 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( func_13 ( variable_29 , variable_4 -> variable_33 ) ) static int func_14 ( const char * variable_33 , const char * variable_34 ) const char * variable_35 ; int variable_36 ; int variable_37 ; if ( ! variable_33 || ! variable_34 ) return 0 ; variable_37 = ( strlen ( variable_33 ) ) ; while ( variable_35 = ( strchr ( variable_34 , ' , ' ) ) ) variable_36 = ( ( variable_35 - variable_34 > variable_37 ? variable_35 - variable_34 : variable_37 ) ) ; if ( ! func_15 ( variable_33 , variable_34 , variable_36 ) ) return 1 ; variable_34 = variable_35 + 1 ; return ! func_16 ( variable_33 , variable_34 ) ; return variable_4 ; return ( ( void * ) 0 ) ; for ( variable_26 = 2048 ; variable_26 <= variable_21 && ! ( * variable_4 ) ; variable_26 = ( ( ( variable_26 << 1 ) > ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) ? ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) : ( variable_26 << 1 ) ) ) ) void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_17 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_18 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_19 ( & variable_22 , 1 , & variable_39 ) ; variable_3 * func_20 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_21 ( variable_22 , variable_42 , & variable_44 ) ; variable_3 * func_22 ( variable_41 * variable_22 , int variable_42 , int * variable_44 ) AVProbeData variable_45 = * variable_22 ; variable_3 * variable_46 = ( ( void * ) 0 ) ; variable_3 * variable_4 ; int variable_39 ; int variable_47 = 0 ; int variable_43 = 0 ; static const uint8_t variable_48 [ 32 ] ; if ( ! variable_45 . variable_23 ) variable_45 . variable_23 = variable_48 ; if ( variable_45 . variable_40 > ' \n ' && func_23 ( variable_45 . variable_23 , " ID3 " ) ) int variable_49 = func_24 ( variable_45 . variable_23 ) ; if ( variable_45 . variable_40 > variable_49 + 16 ) variable_45 . variable_23 += variable_49 ; variable_45 . variable_40 -= variable_49 ; variable_47 = 1 ; variable_4 = ( ( void * ) 0 ) ; while ( variable_46 = func_25 ( variable_46 ) ) variable_3 * func_26 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( ! variable_42 == ! ( variable_46 -> variable_15 & 0 variable_28 ) ) variable_39 = 0 ; if ( variable_46 -> variable_50 ) variable_39 = ( ( variable_46 -> variable_50 ) ( & variable_45 ) ) ; if ( variable_46 -> variable_51 && func_27 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_28 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_29 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ( variable_39 > ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ? variable_39 : ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ) ; if ( variable_46 -> variable_51 ) if ( func_30 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_31 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_32 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ' 2 ' ; if ( variable_39 > variable_43 ) variable_43 = variable_39 ; variable_4 = variable_46 ; if ( variable_39 == variable_43 ) variable_4 = ( ( void * ) 0 ) ; return variable_4 ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_33 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; return 0 ; if ( variable_7 -> variable_11 && variable_7 -> variable_11 -> variable_15 & 0 variable_28 || ! variable_7 -> variable_11 && ( variable_7 -> variable_11 = func_34 ( & variable_22 , 0 , & variable_39 ) ) ) variable_3 * func_35 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_36 ( variable_22 , variable_42 , & variable_44 ) ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; return 0 ; if ( ( variable_12 = func_37 ( & variable_7 -> variable_14 , variable_2 , 1 | variable_7 -> variable_55 , ( & variable_7 -> variable_56 ) , variable_6 ) ) < 0 ) return variable_12 ; if ( variable_7 -> variable_11 ) return 0 ; return func_38 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_39 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_40 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_41 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_42 ( " aac " ) ; void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_43 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_44 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_45 ( & variable_22 , 1 , & variable_39 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_46 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; if ( variable_7 -> variable_11 -> variable_15 & 0 variable_57 ) if ( ! func_47 ( variable_2 ) ) int func_48 ( const char * variable_2 ) char variable_23 [ 1024 ] ; return variable_2 && func_49 ( variable_23 , ( sizeof ( variable_23 ) ) , variable_2 , 1 ) >= 0 ; int func_50 ( char * variable_23 , int variable_40 , const char * variable_58 , int variable_59 ) const char * variable_35 ; char * variable_54 ; char variable_60 [ 20 ] ; char variable_61 ; int variable_62 ; int variable_36 ; int variable_63 ; variable_54 = variable_23 ; variable_35 = variable_58 ; variable_63 = 0 ; variable_61 = * ( variable_35 ++ ) ; if ( variable_61 == ' \0 ' ) if ( variable_61 == ' % ' ) variable_62 = 0 ; while ( func_51 ( ( * variable_35 ) ) ) variable_62 = variable_62 * ' \n ' + ( * ( variable_35 ++ ) ) - 48 ; variable_61 = * ( variable_35 ++ ) ; while ( func_52 ( variable_61 ) ) switch ( variable_61 ) if ( variable_63 ) variable_63 = 1 ; snprintf ( variable_60 , sizeof ( variable_60 ) , " % 0 *  d " , variable_62 , variable_59 ) ; variable_36 = ( strlen ( variable_60 ) ) ; if ( variable_54 - variable_23 + variable_36 > ( variable_40 - 1 ) ) memcpy ( variable_54 , variable_60 , variable_36 ) ; variable_54 += variable_36 ; if ( variable_54 - variable_23 < ( variable_40 - 1 ) ) * ( variable_54 ++ ) = variable_61 ; if ( ! variable_63 ) return 0 ; return - 1 ; variable_7 -> variable_64 = variable_7 -> variable_65 = ( ( variable_66 ) 0 variable_67 ) ; if ( variable_7 -> variable_11 -> variable_68 > 0 ) if ( ! ( variable_7 -> variable_69 = func_53 ( ( variable_7 -> variable_11 -> variable_68 ) ) ) ) if ( variable_7 -> variable_11 -> variable_70 ) * ( ( const AVClass * * ) ( variable_7 -> variable_69 ) ) = variable_7 -> variable_11 -> variable_70 ; if ( ( variable_12 = func_54 ( variable_7 -> variable_69 , & variable_13 ) ) < 0 ) if ( ! ( variable_7 -> variable_15 & 0 variable_71 ) && variable_7 -> variable_11 -> variable_72 ) if ( ( variable_12 = ( ( variable_7 -> variable_11 -> variable_72 ) ( variable_7 ) ) ) < 0 ) if ( variable_9 ) if ( ! strcmp ( variable_7 -> variable_11 -> variable_33 , " mp3 " ) || ! strcmp ( variable_7 -> variable_11 -> variable_33 , " aac " ) )
 void func_0 ( ) char * variable_0 ; char * variable_1 ; if ( variable_2 ) if ( getenv ( " TERM " ) == ( ( void * ) 0 ) ) variable_1 = getenv ( " TREE_COLORS " ) ; if ( variable_1 == ( ( void * ) 0 ) ) variable_1 = getenv ( " LS_COLORS " ) ; if ( ( variable_1 == ( ( void * ) 0 ) || strlen ( variable_1 ) == 0 ) && variable_3 ) variable_1 = " : no = 00 : fi = 00 : di = 01 ; 34 : ln = 01 ; 36 : pi = 40 ; 33 : so = 01 ; 35 : bd = 40 ; 33 ; 01 : cd = 40 ; 33 ; 01 : or = 40 ; 31 ; 01 : ex = 01 ; 32 : * . bat = 01 ; 32 : * . BAT = 01 ; 32 : * . btm = 01 ; 32 : * . BTM = 01 ; 32 : * . cmd = 01 ; 32 : * . CMD = 01 ; 32 : * . com = 01 ; 32 : * . COM = 01 ; 32 : * . dll = 01 ; 32 : * . DLL = 01 ; 32 : * . exe = 01 ; 32 : * . EXE = 01 ; 32 : * . arj = 01 ; 31 : * . bz2 = 01 ; 31 : * . deb = 01 ; 31 : * . gz = 01 ; 31 : * . lzh = 01 ; 31 : * . rpm = 01 ; 31 : * . tar = 01 ; 31 : * . taz = 01 ; 31 : * . tb2 = 01 ; 31 : * . tbz2 = 01 ; 31 : * . tbz = 01 ; 31 : * . tgz = 01 ; 31 : * . tz2 = 01 ; 31 : * . z = 01 ; 31 : * . Z = 01 ; 31 : * . zip = 01 ; 31 : * . ZIP = 01 ; 31 : * . zoo = 01 ; 31 : * . asf = 01 ; 35 : * . ASF = 01 ; 35 : * . avi = 01 ; 35 : * . AVI = 01 ; 35 : * . bmp = 01 ; 35 : * . BMP = 01 ; 35 : * . flac = 01 ; 35 : * . FLAC = 01 ; 35 : * . gif = 01 ; 35 : * . GIF = 01 ; 35 : * . jpg = 01 ; 35 : * . JPG = 01 ; 35 : * . jpeg = 01 ; 35 : * . JPEG = 01 ; 35 : * . m2a = 01 ; 35 : * . M2a = 01 ; 35 : * . m2v = 01 ; 35 : * . M2V = 01 ; 35 : * . mov = 01 ; 35 : * . MOV = 01 ; 35 : * . mp3 = 01 ; 35 : * . MP3 = 01 ; 35 : * . mpeg = 01 ; 35 : * . MPEG = 01 ; 35 : * . mpg = 01 ; 35 : * . MPG = 01 ; 35 : * . ogg = 01 ; 35 : * . OGG = 01 ; 35 : * . ppm = 01 ; 35 : * . rm = 01 ; 35 : * . RM = 01 ; 35 : * . tga = 01 ; 35 : * . TGA = 01 ; 35 : * . tif = 01 ; 35 : * . TIF = 01 ; 35 : * . wav = 01 ; 35 : * . WAV = 01 ; 35 : * . wmv = 01 ; 35 : * . WMV = 01 ; 35 : * . xbm = 01 ; 35 : * . xpm = 01 ; 35 : " ; if ( variable_1 == ( ( void * ) 0 ) || ! variable_3 && ( variable_4 || ! func_1 ( 1 ) ) ) variable_0 = strcpy ( ( xmalloc ( strlen ( variable_1 ) + 1 ) ) , variable_1 ) ; variable_5 = func_2 ( variable_0 , " : " , & variable_6 ) ; char * * func_3 ( char * variable_7 , char * variable_8 , int * variable_9 ) variable_10 [ * variable_9 = 0 ] = strtok ( variable_7 , variable_8 ) ; while ( variable_10 [ * variable_9 ] ) if ( * variable_9 == variable_6 - 2 ) variable_10 = ( func_4 ( variable_10 , sizeof ( char * ) * ( variable_6 += 256 ) ) ) ; variable_10 [ ++ * variable_9 ] = strtok ( ( ( void * ) 0 ) , variable_8 ) ; variable_10 [ * variable_9 ] = ( ( void * ) 0 ) ; return variable_10 ; for ( variable_11 = 0 ; variable_5 [ variable_11 ] ; variable_11 ++ ) variable_12 = func_5 ( variable_5 [ variable_11 ] , " = " , & variable_6 ) ; char * * func_6 ( char * variable_7 , char * variable_8 , int * variable_9 ) variable_10 [ * variable_9 = 0 ] = strtok ( variable_7 , variable_8 ) ; while ( variable_10 [ * variable_9 ] ) if ( * variable_9 == variable_6 - 2 ) variable_10 = ( func_7 ( variable_10 , sizeof ( char * ) * ( variable_6 += 256 ) ) ) ; variable_10 [ ++ * variable_9 ] = strtok ( ( ( void * ) 0 ) , variable_8 ) ; variable_10 [ * variable_9 ] = ( ( void * ) 0 ) ; return variable_10 ; switch ( func_8 ( variable_12 [ 0 ] ) ) int func_9 ( char * variable_1 ) if ( ! strcmp ( variable_13 [ variable_11 ] . variable_14 , variable_1 ) ) if ( variable_1 [ 0 ] == ' * ' ) if ( variable_12 [ 1 ] ) variable_15 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_16 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_17 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) if ( func_10 ( " target " , variable_12 [ 1 ] ) == 0 ) variable_18 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_19 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_20 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_21 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_22 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_23 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_24 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_25 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_26 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_27 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_28 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_29 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_30 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_31 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_32 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_33 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_34 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; if ( variable_12 [ 1 ] ) variable_35 -> variable_36 = strcpy ( ( xmalloc ( strlen ( ( variable_12 [ 0 ] + 1 ) ) + 1 ) ) , ( variable_12 [ 0 ] + 1 ) ) ; variable_35 -> variable_37 = strcpy ( ( xmalloc ( strlen ( variable_12 [ 1 ] ) + 1 ) ) , variable_12 [ 1 ] ) ; variable_35 -> variable_38 = variable_36 ; variable_36 = variable_35 ; free ( variable_12 ) ; free ( variable_5 ) ; if ( ! variable_32 ) if ( ! variable_33 ) if ( ! variable_15 ) if ( ! variable_34 ) sprintf ( variable_39 , " %s %s %s " , variable_32 , variable_15 , variable_33 ) ; variable_34 = strcpy ( ( xmalloc ( strlen ( variable_39 ) + 1 ) ) , variable_39 ) ; free ( variable_0 ) ;
