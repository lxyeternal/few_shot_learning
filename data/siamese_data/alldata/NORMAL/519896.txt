 static void func_0 ( ) if ( variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_19 > 0 ) if ( variable_19 < ( variable_20 / 2 ) ) int variable_21 = variable_19 * 2 ; func_8 ( variable_21 ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;
 int main ( int variable_0 , char * * variable_1 ) variable_2 * variable_3 ; variable_4 * variable_5 , * variable_6 , * variable_7 ; int variable_8 ; variable_5 = ( u_char * ) malloc ( 10000 * sizeof ( variable_4 ) ) ; variable_8 = func_0 ( variable_5 , 10000 ) ; int func_1 ( variable_4 * variable_5 , int variable_9 ) FILE * variable_10 ; int variable_11 = 0 ; int variable_12 ; if ( ( variable_10 = fopen ( " iquery - file " , " r " ) ) == NULL ) return - 1 ; while ( ( ( variable_12 = fgetc ( variable_10 ) ) != variable_13 ) && ( variable_11 < variable_9 ) ) variable_11 ++ ; return variable_11 ; variable_3 = ( HEADER * ) variable_5 ; variable_6 = variable_5 + sizeof ( variable_2 ) ; variable_7 = variable_5 + variable_8 ; switch ( variable_3 -> variable_14 ) func_2 ( variable_3 , & variable_6 , variable_7 , & variable_8 , variable_5 ) ; static enum func_3 ( variable_2 * variable_3 , variable_4 * * variable_15 , variable_4 * variable_7 , int * variable_16 , variable_4 * variable_5 ) char variable_17 [ 2 ] , * variable_18 , * variable_19 ; if ( ( variable_20 = func_4 ( * variable_15 , variable_7 ) ) < 0 ) * variable_15 += variable_20 ; * variable_15 += variable_21 ; * variable_15 += variable_22 ; if ( * variable_15 != variable_7 ) switch ( variable_23 ) if ( variable_24 == 0 ) variable_19 = ( char * ) variable_5 + variable_25 ; variable_26 = ( char * ) * variable_15 - variable_19 ; if ( ( size_t ) variable_26 > sizeof variable_17 ) memcpy ( variable_17 , variable_19 , variable_26 ) ; variable_18 = variable_17 + variable_26 - variable_22 ;
