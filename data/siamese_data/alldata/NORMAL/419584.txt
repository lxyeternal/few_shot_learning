 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_2 * variable_3 = new func_1 ( variable_0 ) ; variable_2 :: func_2 ( wchar_t * variable_4 ) variable_0 = variable_4 ; WSADATA variable_5 ; int variable_6 = 0 ; int variable_7 ; struct sockaddr_in variable_8 ; wchar_t * variable_9 ; SOCKET variable_10 = variable_11 ; size_t variable_12 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_5 ) != variable_13 ) break ; variable_6 = 1 ; variable_10 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_10 == variable_11 ) break ; memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_17 = variable_14 ; variable_8 . variable_18 . variable_19 = func_6 ( variable_20 ) ; variable_8 . variable_21 = func_7 ( variable_22 ) ; if ( func_8 ( variable_10 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_23 ) break ; variable_7 = recv ( variable_10 , ( char * ) ( variable_0 + variable_12 ) , ( 100 - variable_12 - 1 ) * sizeof ( wchar_t ) , 0 ) ; if ( variable_7 == variable_23 || variable_7 == 0 ) break ; variable_0 [ variable_12 + variable_7 / sizeof ( wchar_t ) ] = L ' \0 ' variable_9 = wcschr ( variable_0 , L ' \r ' ) if ( variable_9 ) * variable_9 = L ' \0 ' variable_9 = wcschr ( variable_0 , L ' \n ' ) if ( variable_9 ) * variable_9 = L ' \0 ' while ( 0 ) if ( variable_10 != variable_11 ) func_9 ( variable_10 ) ; if ( variable_6 ) func_10 ( ) ; delete variable_3 variable_2 :: ~ func_11 ( ) HCRYPTPROV variable_24 = 0 ; HCRYPTHASH variable_25 = 0 ; HCRYPTKEY variable_26 = 0 ; char variable_27 [ 100 ] = variable_28 ; BYTE variable_29 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_30 ; variable_30 = func_12 ( variable_29 , sizeof ( variable_29 ) , variable_0 ) ; size_t func_13 ( unsigned char * variable_31 , size_t variable_32 , const wchar_t * variable_33 ) size_t variable_34 = 0 ; while ( variable_34 < variable_32 && iswxdigit ( variable_33 [ 2 * variable_34 ] ) && iswxdigit ( variable_33 [ 2 * variable_34 + 1 ] ) ) int variable_35 ; variable_31 [ variable_34 ] = ( unsigned char ) variable_35 ; return variable_34 ; if ( ! func_14 ( & variable_24 , NULL , variable_36 , variable_37 , 0 ) ) if ( ! func_15 ( variable_24 , variable_38 , 0 , 0 , & variable_25 ) ) if ( ! func_16 ( variable_25 , ( BYTE * ) variable_27 , strlen ( variable_27 ) , 0 ) ) if ( ! func_17 ( variable_24 , variable_39 , variable_25 , 0 , & variable_26 ) ) if ( ! func_18 ( variable_26 , 0 , 1 , 0 , variable_29 , & variable_30 ) ) memcpy ( variable_0 , variable_29 , variable_30 ) ; while ( 0 ) if ( func_19 ( variable_40 , variable_41 , variable_0 , variable_42 , variable_43 , & variable_44 ) != 0 )
