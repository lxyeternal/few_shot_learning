 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = variable_2 ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , 100 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; if ( func_4 ( variable_0 ) <= 0 )
 unsigned int func_0 ( ) struct variable_0 * variable_1 ; char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_2 != 0 ) variable_4 = ( ( void * ) variable_2 ) ; variable_5 = & variable_4 ; variable_6 = variable_5 + 5 ; variable_7 = ( ( char * ) ( ( char * ) ( * ( variable_6 - 5 ) ) ) ) ; variable_1 = malloc ( sizeof ( struct variable_0 ) ) ; if ( variable_1 ) variable_1 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; variable_1 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; variable_1 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; if ( variable_1 -> variable_8 ) if ( ( sscanf ( variable_7 , " %d %s %s %s " , & ( variable_1 -> variable_11 ) , variable_1 -> variable_9 , variable_1 -> variable_10 , variable_1 -> variable_8 ) == 4 ) && ( strlen ( variable_1 -> variable_8 ) != 0 ) && ( strlen ( variable_1 -> variable_9 ) != 0 ) && ( strlen ( variable_1 -> variable_10 ) != 0 ) ) func_3 ( variable_12 , variable_13 , " stonesoupData -> qsize " , variable_1 -> variable_11 , & ( variable_1 -> variable_11 ) , " INITIAL - STATE " ) ; func_4 ( variable_12 , variable_14 , " stonesoupData -> data " , variable_1 -> variable_8 , " INITIAL - STATE " ) ; func_5 ( variable_12 , variable_14 , " stonesoupData -> file1 " , variable_1 -> variable_9 , " INITIAL - STATE " ) ; func_6 ( variable_12 , variable_14 , " stonesoupData -> file2 " , variable_1 -> variable_10 , " INITIAL - STATE " ) ; while ( variable_1 -> variable_8 [ variable_15 ] != ' \0 ' ) if ( variable_1 -> variable_8 [ variable_15 ++ ] == ' _ ' ) if ( func_7 ( & variable_16 , NULL , variable_17 , variable_1 ) != 0 ) if ( func_8 ( & variable_18 , NULL , variable_19 , variable_1 ) != 0 ) free ( variable_1 -> variable_8 ) ; free ( variable_1 ) ;
