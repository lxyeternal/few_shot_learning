 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = variable_2 ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( 100 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;
 static void func_0 ( void * variable_0 ) char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = ( ( int ) ( strlen ( variable_1 ) ) ) ; variable_4 = ( ( char * ) ( malloc ( variable_3 + 1 ) ) ) ; if ( variable_4 == 0 ) memset ( variable_4 , 0 , variable_3 + 1 ) ; memcpy ( variable_4 , variable_1 , variable_3 ) ; variable_5 = ( ( char * ) variable_4 ) ; variable_6 -> variable_7 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; variable_6 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; variable_6 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; if ( variable_6 -> variable_7 ) if ( ( sscanf ( variable_5 , " %s %s %s " , variable_6 -> variable_8 , variable_6 -> variable_9 , variable_6 -> variable_7 ) == 3 ) && ( strlen ( variable_6 -> variable_7 ) != 0 ) && ( strlen ( variable_6 -> variable_8 ) != 0 ) && ( strlen ( variable_6 -> variable_9 ) != 0 ) ) func_3 ( variable_10 , variable_11 , " stonesoupData -> data " , variable_6 -> variable_7 , " INITIAL - STATE " ) ; func_4 ( variable_10 , variable_11 , " stonesoupData -> file1 " , variable_6 -> variable_8 , " INITIAL - STATE " ) ; func_5 ( variable_10 , variable_11 , " stonesoupData -> file2 " , variable_6 -> variable_9 , " INITIAL - STATE " ) ; if ( variable_6 -> variable_7 [ 0 ] >= '  A ' && variable_6 -> variable_7 [ 0 ] <= '  Z ' ) free ( variable_6 -> variable_7 ) ; free ( variable_6 ) ; if ( variable_4 != 0 ) free ( ( ( char * ) variable_4 ) ) ;
