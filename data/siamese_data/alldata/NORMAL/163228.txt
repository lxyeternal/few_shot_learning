 void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = ( short ) atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( short variable_3 ) func_3 ( variable_3 ) ; void func_4 ( short variable_3 ) func_5 ( variable_3 ) ; void func_6 ( short variable_3 ) func_7 ( variable_3 ) ; void func_8 ( short variable_3 ) if ( variable_3 < 100 ) memmove ( variable_4 , variable_5 , variable_3 ) ; variable_4 [ variable_3 ] = ' \0 ' ; func_9 ( variable_4 ) ; void func_10 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;
 variable_0 :: func_0 ( variable_1 variable_2 < variable_3 > & variable_4 ) variable_5 * variable_6 = variable_5 :: func_1 ( ) ; if ( variable_7 && variable_6 -> func_2 ( ) && ! ( variable_8 && func_3 ( ) ) && ! variable_7 -> func_4 ( ) ) static func_5 ( ) LANGID variable_9 = func_6 ( :: GetSystemDefaultLangID ( ) ) switch ( variable_9 ) return true ; return false ; variable_10 < variable_11 > variable_12 ; nsresult variable_13 = func_7 ( func_8 ( variable_12 ) ) ; if ( func_9 ( variable_13 ) ) variable_3 * variable_14 ; uint32_t variable_15 ; BOOL variable_16 ; HRESULT variable_17 = variable_12 -> func_10 ( variable_18 :: func_11 ( variable_19 ) , ( const void * * ) & variable_14 , & variable_15 , & variable_20 , & variable_16 ) ; if ( func_12 ( variable_17 ) || ! variable_16 ) if ( variable_4 . func_13 ( variable_15 , variable_21 ) ) memcpy ( variable_4 . func_14 ( ) , variable_14 , variable_15 ) ;
