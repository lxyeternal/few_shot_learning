 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; if ( variable_2 > 0 ) variable_0 [ variable_2 - 1 ] = ' \0 ' ; variable_4 * variable_5 = new variable_6 variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( char * variable_0 ) char variable_7 [ ] = " String to be encrypted " ; DWORD variable_8 = strlen ( variable_7 ) * sizeof ( char ) ; BYTE variable_9 [ 200 ] ; memcpy ( variable_9 , variable_7 , variable_8 ) ; if ( ! func_3 ( variable_10 , ( variable_11 ) NULL , 1 , 0 , variable_9 , & variable_8 , sizeof ( variable_9 ) ) ) func_4 ( variable_9 , variable_8 ) ; void func_5 ( const unsigned char * variable_12 , size_t variable_13 ) for ( variable_14 = 0 ; variable_14 < variable_13 ; ++ variable_14 ) printf ( " % 02x " , variable_12 [ variable_14 ] ) ;
