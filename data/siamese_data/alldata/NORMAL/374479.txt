 static void func_0 ( ) if ( variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 > 0 ) if ( variable_21 < ( variable_22 / 2 ) ) int variable_23 = variable_21 * 2 ; func_9 ( variable_23 ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;
 static int func_0 ( variable_0 * variable_1 , variable_0 * variable_2 ) MpegEncContext * const variable_3 = & variable_1 -> MpegEncContext * const variable_4 = & variable_2 -> variable_3 unsigned int variable_5 ; unsigned int variable_6 ; unsigned int variable_7 , variable_8 , variable_9 , variable_10 ; int variable_11 , variable_12 ; int variable_13 ; if ( ( variable_3 -> variable_14 -> variable_15 & variable_16 ) && ! variable_1 -> variable_17 && ! variable_1 -> variable_18 ) variable_3 -> variable_19 . variable_20 = variable_3 -> variable_21 . variable_22 ; variable_3 -> variable_19 . variable_23 = variable_3 -> variable_21 . variable_24 ; variable_5 = func_1 ( & variable_3 -> variable_25 ) ; if ( variable_5 == 0 ) variable_2 -> variable_26 = 0 ; if ( ! variable_4 -> variable_27 ) variable_3 -> variable_28 = NULL ; variable_7 = func_2 ( & variable_3 -> variable_25 ) ; if ( variable_7 > 9 ) if ( variable_7 > 4 ) variable_7 -= 5 ; variable_1 -> variable_29 = 0 ; variable_7 = variable_30 [ variable_7 ] ; variable_1 -> variable_7 = variable_7 ; variable_1 -> variable_31 = variable_7 & 3 ; variable_3 -> variable_32 = variable_1 -> variable_7 ; variable_6 = func_3 ( & variable_3 -> variable_25 ) ; if ( variable_6 >= variable_33 ) if ( ! variable_2 -> variable_34 [ variable_6 ] ) variable_1 -> variable_35 = * variable_2 -> variable_34 [ variable_6 ] ; if ( ! variable_2 -> variable_36 [ variable_1 -> variable_35 . variable_37 ] ) variable_1 -> variable_38 = * variable_2 -> variable_36 [ variable_1 -> variable_35 . variable_37 ] ; variable_3 -> variable_14 -> variable_39 = func_4 ( & variable_1 -> variable_38 ) ; variable_3 -> variable_14 -> variable_40 = variable_1 -> variable_38 . variable_41 ; variable_3 -> variable_14 -> variable_42 = variable_1 -> variable_38 . variable_43 ; variable_13 = ( variable_3 -> variable_44 && ( 16 * variable_1 -> variable_38 . variable_45 != variable_3 -> variable_14 -> variable_46 || 16 * variable_1 -> variable_38 . variable_47 * ( 2 - variable_1 -> variable_38 . variable_48 ) != variable_3 -> variable_14 -> variable_49 || variable_3 -> variable_14 -> variable_50 != variable_1 -> variable_38 . variable_51 || variable_1 -> variable_52 != variable_1 -> variable_38 . variable_53 || func_5 ( variable_1 -> variable_38 . variable_54 , variable_3 -> variable_14 -> variable_55 ) ) ) ; if ( variable_13 && ( variable_1 != variable_2 || ( variable_3 -> variable_14 -> variable_56 & variable_57 ) ) ) variable_3 -> variable_45 = variable_1 -> variable_38 . variable_45 ; variable_3 -> variable_47 = variable_1 -> variable_38 . variable_47 * ( 2 - variable_1 -> variable_38 . variable_48 ) ; variable_1 -> variable_58 = variable_3 -> variable_45 * 4 ; variable_3 -> variable_59 = variable_1 -> variable_38 . variable_53 <= 1 ; variable_3 -> variable_60 = 16 * variable_3 -> variable_45 ; variable_3 -> variable_61 = 16 * variable_3 -> variable_47 ; if ( variable_13 ) variable_1 -> variable_62 = 0 ; variable_1 -> variable_26 = 0 ; if ( ! variable_3 -> variable_44 ) if ( variable_1 != variable_2 ) if ( func_6 ( variable_3 -> variable_14 -> variable_60 , 16 ) == variable_3 -> variable_60 && func_7 ( variable_3 -> variable_14 -> variable_61 , 16 * ( 2 - variable_1 -> variable_38 . variable_48 ) ) == variable_3 -> variable_61 && ! variable_1 -> variable_38 . variable_63 && ! variable_1 -> variable_38 . variable_64 && ( variable_3 -> variable_14 -> variable_60 != variable_3 -> variable_60 || variable_3 -> variable_14 -> variable_61 && variable_3 -> variable_61 ) ) variable_3 -> variable_14 -> variable_60 -= ( 2 >> variable_65 ) * func_8 ( variable_1 -> variable_38 . variable_63 , ( 8 << variable_65 ) - 1 ) ; variable_3 -> variable_14 -> variable_61 -= ( 1 << variable_3 -> variable_59 ) * func_9 ( variable_1 -> variable_38 . variable_64 , ( 16 >> variable_3 -> variable_59 ) - 1 ) * ( 2 - variable_1 -> variable_38 . variable_48 ) ; variable_3 -> variable_14 -> variable_55 = variable_1 -> variable_38 . variable_54 ; if ( variable_3 -> variable_14 -> variable_66 -> variable_67 & variable_68 && ( variable_1 -> variable_38 . variable_51 != 8 || variable_1 -> variable_38 . variable_53 > 1 ) ) if ( variable_3 -> variable_14 -> variable_50 != variable_1 -> variable_38 . variable_51 || variable_1 -> variable_52 != variable_1 -> variable_38 . variable_53 ) if ( variable_1 -> variable_38 . variable_51 >= 8 && variable_1 -> variable_38 . variable_51 <= 14 && variable_1 -> variable_38 . variable_51 != 11 && variable_1 -> variable_38 . variable_51 != 13 && ( variable_1 -> variable_38 . variable_51 != 9 || ! variable_69 ) ) variable_3 -> variable_14 -> variable_50 = variable_1 -> variable_38 . variable_51 ; variable_1 -> variable_52 = variable_1 -> variable_38 . variable_53 ; variable_1 -> variable_18 = variable_1 -> variable_38 . variable_51 > 8 ; variable_3 -> variable_21 . variable_70 = variable_1 -> variable_38 . variable_51 > 8 ? 32 : 16 ; if ( variable_1 -> variable_38 . variable_71 ) variable_3 -> variable_14 -> variable_72 = variable_1 -> variable_38 . variable_73 > 0 ? variable_74 : variable_75 ; if ( variable_1 -> variable_38 . variable_76 ) variable_3 -> variable_14 -> variable_77 = variable_1 -> variable_38 . variable_77 ; variable_3 -> variable_14 -> variable_78 = variable_1 -> variable_38 . variable_78 ; variable_3 -> variable_14 -> variable_79 = variable_1 -> variable_38 . variable_79 ; switch ( variable_1 -> variable_38 . variable_51 ) if ( variable_65 ) if ( variable_3 -> variable_14 -> variable_79 == variable_80 ) variable_3 -> variable_14 -> variable_81 = variable_82 ; variable_3 -> variable_14 -> variable_81 = variable_83 ; if ( variable_69 ) variable_3 -> variable_14 -> variable_81 = variable_84 ; variable_3 -> variable_14 -> variable_81 = variable_85 ; if ( variable_65 ) if ( variable_3 -> variable_14 -> variable_79 == variable_80 ) variable_3 -> variable_14 -> variable_81 = variable_86 ; variable_3 -> variable_14 -> variable_81 = variable_87 ; if ( variable_69 ) variable_3 -> variable_14 -> variable_81 = variable_88 ; variable_3 -> variable_14 -> variable_81 = variable_89 ; if ( variable_65 ) if ( variable_3 -> variable_14 -> variable_79 == variable_80 ) variable_3 -> variable_14 -> variable_81 = variable_90 ; variable_3 -> variable_14 -> variable_81 = variable_91 ; if ( variable_69 ) variable_3 -> variable_14 -> variable_81 = variable_92 ; variable_3 -> variable_14 -> variable_81 = variable_93 ; if ( variable_65 ) if ( variable_3 -> variable_14 -> variable_79 == variable_80 ) variable_3 -> variable_14 -> variable_81 = variable_94 ; variable_3 -> variable_14 -> variable_81 = variable_95 ; if ( variable_69 ) variable_3 -> variable_14 -> variable_81 = variable_96 ; variable_3 -> variable_14 -> variable_81 = variable_97 ; if ( variable_65 ) variable_3 -> variable_14 -> variable_81 = variable_3 -> variable_14 -> variable_72 == variable_74 ? variable_98 : variable_99 ; if ( variable_3 -> variable_14 -> variable_79 == variable_80 ) variable_3 -> variable_14 -> variable_81 = variable_100 ; if ( variable_69 ) variable_3 -> variable_14 -> variable_81 = variable_3 -> variable_14 -> variable_72 == variable_74 ? variable_101 : variable_102 ; variable_3 -> variable_14 -> variable_81 = variable_3 -> variable_14 -> func_10 ( variable_3 -> variable_14 , variable_3 -> variable_14 -> variable_66 -> variable_103 ? variable_3 -> variable_14 -> variable_66 -> variable_103 : variable_3 -> variable_14 -> variable_72 == variable_74 ? variable_104 : variable_105 ) ; variable_3 -> variable_14 -> variable_106 = func_11 ( variable_3 -> variable_14 -> variable_66 -> variable_107 , variable_3 -> variable_14 -> variable_81 ) ; if ( func_12 ( variable_3 ) < 0 ) variable_3 -> variable_27 = 0 ; variable_1 -> variable_108 = 1 ; if ( func_13 ( variable_1 ) < 0 ) if ( ! variable_109 || ! ( variable_3 -> variable_14 -> variable_56 & variable_110 ) ) if ( func_14 ( variable_1 ) < 0 ) for ( variable_9 = 1 ; variable_9 < variable_3 -> variable_111 ; variable_9 ++ ) variable_0 * variable_112 ; variable_112 = variable_1 -> variable_113 [ variable_9 ] = func_15 ( sizeof ( variable_0 ) ) ; for ( variable_9 = 0 ; variable_9 < variable_3 -> variable_111 ; variable_9 ++ ) if ( func_16 ( variable_1 -> variable_113 [ variable_9 ] ) < 0 ) if ( variable_1 == variable_2 && variable_1 -> variable_114 != variable_6 ) variable_1 -> variable_114 = variable_6 ; variable_1 -> variable_115 = func_17 ( & variable_3 -> variable_25 , variable_1 -> variable_38 . variable_116 ) ; variable_1 -> variable_117 = 0 ; variable_1 -> variable_118 = 0 ; variable_11 = variable_4 -> variable_119 ; variable_12 = variable_3 -> variable_120 ; variable_3 -> variable_120 = variable_1 -> variable_17 == 0 ; if ( variable_1 -> variable_38 . variable_48 ) variable_3 -> variable_119 = variable_121 ; if ( ! variable_1 -> variable_38 . variable_122 && variable_7 == variable_123 ) if ( func_18 ( & variable_3 -> variable_25 ) ) variable_3 -> variable_119 = variable_124 + func_19 ( & variable_3 -> variable_25 ) ; variable_3 -> variable_119 = variable_121 ; variable_1 -> variable_118 = variable_1 -> variable_38 . variable_125 ; variable_1 -> variable_126 = variable_3 -> variable_119 != variable_121 ; if ( variable_2 -> variable_26 != 0 ) if ( variable_11 != variable_3 -> variable_119 || variable_12 != variable_3 -> variable_120 ) if ( variable_1 -> variable_115 != variable_1 -> variable_127 && variable_1 -> variable_127 >= 0 ) int variable_128 = variable_1 -> variable_127 ; int variable_129 = 1 << variable_1 -> variable_38 . variable_116 ; if ( variable_128 > variable_1 -> variable_115 ) variable_128 -= variable_129 ; if ( ( variable_1 -> variable_115 - variable_128 ) > variable_1 -> variable_38 . variable_43 ) variable_128 = ( variable_1 -> variable_115 - variable_1 -> variable_38 . variable_43 ) - 1 ; if ( variable_128 < 0 ) variable_128 += variable_129 ; variable_1 -> variable_127 = variable_128 ; if ( variable_4 -> variable_27 ) if ( ! variable_130 || variable_3 -> variable_119 == variable_11 ) if ( variable_4 -> variable_28 -> variable_115 != variable_1 -> variable_115 ) if ( ! ( ( variable_11 == variable_124 && variable_3 -> variable_119 == variable_131 ) || ( variable_11 == variable_131 && variable_3 -> variable_119 == variable_124 ) ) ) if ( variable_12 != variable_3 -> variable_120 ) variable_3 -> variable_119 = variable_11 ; variable_3 -> variable_120 = variable_12 ; variable_4 -> variable_28 -> variable_132 = variable_4 ; while ( variable_1 -> variable_115 != variable_1 -> variable_127 && variable_1 -> variable_127 >= 0 && variable_1 -> variable_115 != ( variable_1 -> variable_127 + 1 ) % ( 1 << variable_1 -> variable_38 . variable_116 ) ) variable_133 * variable_134 = variable_1 -> variable_135 ? variable_1 -> variable_136 [ 0 ] : NULL ; if ( func_20 ( variable_1 ) < 0 ) variable_1 -> variable_127 ++ ; variable_1 -> variable_127 %= 1 << variable_1 -> variable_38 . variable_116 ; variable_3 -> variable_28 -> variable_115 = variable_1 -> variable_127 ; if ( func_21 ( variable_1 , variable_1 -> variable_137 , variable_1 -> variable_138 ) < 0 && ( variable_3 -> variable_14 -> variable_139 & variable_140 ) ) if ( variable_1 -> variable_135 ) if ( variable_134 ) variable_1 -> variable_136 [ 0 ] -> variable_141 = variable_134 -> variable_141 + 2 ; variable_1 -> variable_136 [ 0 ] -> variable_115 = variable_1 -> variable_127 ; if ( variable_4 -> variable_27 ) if ( ! variable_130 || variable_3 -> variable_119 == variable_11 ) variable_4 -> variable_28 = NULL ; variable_4 -> variable_27 = variable_130 ; if ( variable_4 -> variable_28 -> variable_115 != variable_1 -> variable_115 ) variable_4 -> variable_27 = 1 ; variable_4 -> variable_28 = NULL ; variable_4 -> variable_27 = 0 ; variable_4 -> variable_27 = variable_130 ; if ( ! variable_130 || variable_4 -> variable_27 ) if ( func_22 ( variable_1 ) < 0 ) variable_3 -> variable_28 -> variable_115 = variable_1 -> variable_115 ; if ( variable_5 << variable_142 >= variable_3 -> variable_143 || variable_5 >= variable_3 -> variable_143 ) variable_3 -> variable_144 = variable_3 -> variable_145 = variable_5 % variable_3 -> variable_45 ; variable_3 -> variable_146 = variable_3 -> variable_147 = ( variable_5 / variable_3 -> variable_45 ) << variable_142 ; if ( variable_3 -> variable_119 == variable_131 ) variable_3 -> variable_146 = variable_3 -> variable_147 = variable_3 -> variable_147 + 1 ; assert ( variable_3 -> variable_147 < variable_3 -> variable_47 ) ;
