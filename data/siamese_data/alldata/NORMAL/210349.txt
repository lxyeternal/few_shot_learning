 static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t variable_2 [ 100 ] = L " " variable_0 = variable_2 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , ( 100 - variable_6 - 1 ) * sizeof ( wchar_t ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_0 = variable_1 ; HCRYPTPROV variable_20 = 0 ; HCRYPTHASH variable_21 = 0 ; HCRYPTKEY variable_22 = 0 ; char variable_23 [ 100 ] = variable_24 ; BYTE variable_25 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_26 ; variable_26 = func_7 ( variable_25 , sizeof ( variable_25 ) , variable_0 ) ; size_t func_8 ( unsigned char * variable_27 , size_t variable_28 , const wchar_t * variable_29 ) size_t variable_30 = 0 ; while ( variable_30 < variable_28 && iswxdigit ( variable_29 [ 2 * variable_30 ] ) && iswxdigit ( variable_29 [ 2 * variable_30 + 1 ] ) ) int variable_31 ; variable_27 [ variable_30 ] = ( unsigned char ) variable_31 ; return variable_30 ; if ( ! func_9 ( & variable_20 , NULL , variable_32 , variable_33 , 0 ) ) if ( ! func_10 ( variable_20 , variable_34 , 0 , 0 , & variable_21 ) ) if ( ! func_11 ( variable_21 , ( BYTE * ) variable_23 , strlen ( variable_23 ) , 0 ) ) if ( ! func_12 ( variable_20 , variable_35 , variable_21 , 0 , & variable_22 ) ) if ( ! func_13 ( variable_22 , 0 , 1 , 0 , variable_25 , & variable_26 ) ) memcpy ( variable_0 , variable_25 , variable_26 ) ; while ( 0 ) if ( func_14 ( variable_36 , variable_37 , variable_0 , variable_38 , variable_39 , & variable_40 ) != 0 )
 static void func_0 ( ) char * variable_0 ; if ( func_1 ( & variable_1 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_0 = getenv ( " SCEUOPHYLACIUM_MEROSTHENIC " ) ; if ( variable_0 != 0 ) variable_2 = ( ( int ) ( strlen ( variable_0 ) ) ) ; variable_3 = ( ( char * ) ( malloc ( variable_2 + 1 ) ) ) ; if ( variable_3 == 0 ) memset ( variable_3 , 0 , variable_2 + 1 ) ; memcpy ( variable_3 , variable_0 , variable_2 ) ; variable_4 = & variable_3 ; variable_5 = variable_4 + 5 ; if ( * ( variable_5 - 5 ) != 0 ) variable_6 = ( ( char * ) ( * ( variable_5 - 5 ) ) ) ; variable_7 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_7 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_7 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; if ( variable_7 -> variable_8 && variable_7 -> variable_9 && variable_7 -> variable_10 ) if ( ( sscanf ( variable_6 , " %d %s %s %s " , & ( variable_7 -> variable_11 ) , variable_7 -> variable_9 , variable_7 -> variable_10 , variable_7 -> variable_8 ) == 4 ) && ( strlen ( variable_7 -> variable_8 ) != 0 ) ) func_3 ( variable_12 , variable_13 , " stonesoupData -> qsize " , variable_7 -> variable_11 , & ( variable_7 -> variable_11 ) , " INITIAL - STATE " ) ; func_4 ( variable_12 , variable_14 , " stonesoupData -> data " , variable_7 -> variable_8 , " INITIAL - STATE " ) ; func_5 ( variable_12 , variable_14 , " stonesoupData -> file1 " , variable_7 -> variable_9 , " INITIAL - STATE " ) ; func_6 ( variable_12 , variable_14 , " stonesoupData -> file2 " , variable_7 -> variable_10 , " INITIAL - STATE " ) ; variable_7 -> variable_15 = strlen ( variable_7 -> variable_8 ) ; if ( func_7 ( & variable_16 , NULL , variable_17 , ( void * ) variable_7 ) != 0 ) if ( func_8 ( & variable_18 , NULL , variable_19 , ( void * ) variable_7 ) != 0 ) free ( variable_7 -> variable_8 ) ; free ( variable_7 ) ; if ( * ( variable_5 - 5 ) != 0 ) free ( ( ( char * ) ( * ( variable_5 - 5 ) ) ) ) ;
