 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;
 gboolean func_0 ( const address * variable_0 , const address * variable_1 , const port_type variable_2 , const guint32 variable_3 , const guint32 variable_4 , variable_5 * variable_6 , variable_7 * variable_8 , variable_9 * variable_10 ) variable_11 * variable_12 ; variable_12 = func_1 ( variable_8 -> variable_13 -> variable_14 , variable_0 , variable_1 , variable_2 , variable_3 , variable_4 , 0 ) ; variable_11 * func_2 ( const guint32 variable_15 , const address * variable_0 , const address * variable_1 , const port_type variable_2 , const guint32 variable_3 , const guint32 variable_4 , const guint variable_16 ) variable_11 * variable_12 ; if ( ! ( variable_16 & ( 0 variable_17 | 0 variable_18 ) ) ) variable_12 = func_3 ( variable_19 , variable_15 , variable_0 , variable_1 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_4 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_5 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; for ( variable_32 = variable_26 ; variable_32 && variable_32 -> variable_29 <= variable_15 ; variable_32 = variable_32 -> variable_33 ) if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 == ( ( void * ) 0 ) && ( variable_0 -> variable_34 ) == variable_35 ) variable_12 = func_6 ( variable_19 , variable_15 , variable_1 , variable_0 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_7 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_8 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) if ( ! ( variable_16 & 0 variable_18 ) ) variable_12 = func_9 ( variable_36 , variable_15 , variable_0 , variable_1 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_10 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_11 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 == ( ( void * ) 0 ) && ( variable_0 -> variable_34 ) == variable_35 ) variable_12 = func_12 ( variable_36 , variable_15 , variable_1 , variable_0 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_13 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_14 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) if ( ! ( variable_16 & 0 variable_17 ) ) variable_12 = func_15 ( variable_36 , variable_15 , variable_1 , variable_0 , variable_2 , variable_4 , variable_3 ) ; static variable_11 * func_16 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_17 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) if ( variable_2 != variable_37 ) if ( ! ( variable_12 -> variable_16 & 0 variable_38 ) ) variable_12 = func_18 ( variable_12 , variable_0 , 0 ) ; static variable_11 * func_19 ( variable_11 * variable_12 , const address * variable_23 , const guint32 variable_25 ) if ( variable_12 -> variable_16 & 0 variable_38 && ( variable_12 -> variable_39 -> variable_2 ) != variable_37 ) variable_11 * variable_40 ; guint variable_16 = variable_12 -> variable_16 & ( ~ ( 0 variable_38 | 0 variable_17 | 0 variable_18 ) ) ; if ( variable_12 -> variable_16 & 0 variable_17 && variable_12 -> variable_16 & 0 variable_18 ) variable_40 = func_20 ( variable_12 -> variable_29 , ( & variable_12 -> variable_39 -> variable_22 ) , variable_23 , variable_12 -> variable_39 -> variable_2 , variable_12 -> variable_39 -> variable_24 , variable_25 , variable_16 ) ; variable_11 * func_21 ( const guint32 variable_29 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 , const guint variable_16 ) variable_41 * variable_42 ; variable_42 = ( func_22 ( sizeof ( struct variable_41 ) ) ) ; variable_42 -> variable_33 = variable_43 ; variable_44 * variable_45 ; ( & variable_42 -> variable_22 ) -> variable_34 = variable_22 -> variable_34 ; ( & variable_42 -> variable_22 ) -> variable_46 = variable_22 -> variable_46 ; variable_45 = ( func_23 ( ( variable_22 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_22 -> variable_47 , ( variable_22 -> variable_46 ) ) ; ( & variable_42 -> variable_22 ) -> variable_47 = variable_45 ; variable_44 * variable_45 ; ( & variable_42 -> variable_23 ) -> variable_34 = variable_23 -> variable_34 ; ( & variable_42 -> variable_23 ) -> variable_46 = variable_23 -> variable_46 ; variable_45 = ( func_24 ( ( variable_23 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_23 -> variable_47 , ( variable_23 -> variable_46 ) ) ; ( & variable_42 -> variable_23 ) -> variable_47 = variable_45 ; variable_42 -> variable_2 = variable_2 ; variable_42 -> variable_24 = variable_24 ; variable_42 -> variable_25 = variable_25 ; variable_12 = ( ( conversation_t * ) ( func_25 ( sizeof ( variable_11 ) ) ) ) ; memset ( variable_12 , 0 , sizeof ( variable_11 ) ) ; variable_12 -> variable_48 = variable_49 ; variable_12 -> variable_29 = variable_29 ; variable_12 -> variable_50 = ( ( void * ) 0 ) ; variable_12 -> variable_51 = ( ( void * ) 0 ) ; variable_12 -> variable_16 = variable_16 ; variable_12 -> variable_39 = variable_42 ; return variable_12 ; if ( variable_12 -> variable_16 & 0 variable_18 ) variable_40 = func_26 ( variable_12 -> variable_29 , ( & variable_12 -> variable_39 -> variable_22 ) , ( & variable_12 -> variable_39 -> variable_23 ) , variable_12 -> variable_39 -> variable_2 , variable_12 -> variable_39 -> variable_24 , variable_25 , variable_16 ) ; variable_11 * func_27 ( const guint32 variable_29 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 , const guint variable_16 ) variable_41 * variable_42 ; variable_42 = ( func_28 ( sizeof ( struct variable_41 ) ) ) ; variable_42 -> variable_33 = variable_43 ; variable_44 * variable_45 ; ( & variable_42 -> variable_22 ) -> variable_34 = variable_22 -> variable_34 ; ( & variable_42 -> variable_22 ) -> variable_46 = variable_22 -> variable_46 ; variable_45 = ( func_29 ( ( variable_22 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_22 -> variable_47 , ( variable_22 -> variable_46 ) ) ; ( & variable_42 -> variable_22 ) -> variable_47 = variable_45 ; variable_44 * variable_45 ; ( & variable_42 -> variable_23 ) -> variable_34 = variable_23 -> variable_34 ; ( & variable_42 -> variable_23 ) -> variable_46 = variable_23 -> variable_46 ; variable_45 = ( func_30 ( ( variable_23 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_23 -> variable_47 , ( variable_23 -> variable_46 ) ) ; ( & variable_42 -> variable_23 ) -> variable_47 = variable_45 ; variable_42 -> variable_2 = variable_2 ; variable_42 -> variable_24 = variable_24 ; variable_42 -> variable_25 = variable_25 ; variable_12 = ( ( conversation_t * ) ( func_31 ( sizeof ( variable_11 ) ) ) ) ; memset ( variable_12 , 0 , sizeof ( variable_11 ) ) ; variable_12 -> variable_48 = variable_49 ; variable_12 -> variable_29 = variable_29 ; variable_12 -> variable_50 = ( ( void * ) 0 ) ; variable_12 -> variable_51 = ( ( void * ) 0 ) ; variable_12 -> variable_16 = variable_16 ; variable_12 -> variable_39 = variable_42 ; return variable_12 ; if ( variable_12 -> variable_16 & 0 variable_17 ) variable_40 = func_32 ( variable_12 -> variable_29 , ( & variable_12 -> variable_39 -> variable_22 ) , variable_23 , variable_12 -> variable_39 -> variable_2 , variable_12 -> variable_39 -> variable_24 , variable_12 -> variable_39 -> variable_25 , variable_16 ) ; variable_11 * func_33 ( const guint32 variable_29 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 , const guint variable_16 ) variable_41 * variable_42 ; variable_42 = ( func_34 ( sizeof ( struct variable_41 ) ) ) ; variable_42 -> variable_33 = variable_43 ; variable_44 * variable_45 ; ( & variable_42 -> variable_22 ) -> variable_34 = variable_22 -> variable_34 ; ( & variable_42 -> variable_22 ) -> variable_46 = variable_22 -> variable_46 ; variable_45 = ( func_35 ( ( variable_22 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_22 -> variable_47 , ( variable_22 -> variable_46 ) ) ; ( & variable_42 -> variable_22 ) -> variable_47 = variable_45 ; variable_44 * variable_45 ; ( & variable_42 -> variable_23 ) -> variable_34 = variable_23 -> variable_34 ; ( & variable_42 -> variable_23 ) -> variable_46 = variable_23 -> variable_46 ; variable_45 = ( func_36 ( ( variable_23 -> variable_46 ) ) ) ; memcpy ( variable_45 , variable_23 -> variable_47 , ( variable_23 -> variable_46 ) ) ; ( & variable_42 -> variable_23 ) -> variable_47 = variable_45 ; variable_42 -> variable_2 = variable_2 ; variable_42 -> variable_24 = variable_24 ; variable_42 -> variable_25 = variable_25 ; variable_12 = ( ( conversation_t * ) ( func_37 ( sizeof ( variable_11 ) ) ) ) ; memset ( variable_12 , 0 , sizeof ( variable_11 ) ) ; variable_12 -> variable_48 = variable_49 ; variable_12 -> variable_29 = variable_29 ; variable_12 -> variable_50 = ( ( void * ) 0 ) ; variable_12 -> variable_51 = ( ( void * ) 0 ) ; variable_12 -> variable_16 = variable_16 ; variable_12 -> variable_39 = variable_42 ; return variable_12 ; return variable_12 ; return variable_40 ; return variable_12 ; if ( ! ( variable_16 & 0 variable_17 ) ) variable_12 = func_38 ( variable_52 , variable_15 , variable_0 , variable_1 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_39 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_40 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 == ( ( void * ) 0 ) && ( variable_0 -> variable_34 ) == variable_35 ) variable_12 = func_41 ( variable_52 , variable_15 , variable_1 , variable_0 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_42 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_43 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) if ( ! ( variable_16 & 0 variable_18 ) ) variable_12 = func_44 ( variable_52 , variable_15 , variable_1 , variable_0 , variable_2 , variable_4 , variable_3 ) ; static variable_11 * func_45 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_46 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) variable_12 = func_47 ( variable_53 , variable_15 , variable_0 , variable_1 , variable_2 , variable_3 , variable_4 ) ; static variable_11 * func_48 ( variable_20 * variable_21 , const guint32 variable_15 , const address * variable_22 , const address * variable_23 , const port_type variable_2 , const guint32 variable_24 , const guint32 variable_25 ) variable_11 * variable_26 = ( ( void * ) 0 ) ; conversation_key variable_27 ; variable_27 . variable_22 = * variable_22 ; variable_27 . variable_23 = * variable_23 ; variable_27 . variable_2 = variable_2 ; variable_27 . variable_24 = variable_24 ; variable_27 . variable_25 = variable_25 ; variable_28 = ( func_49 ( variable_21 , ( & variable_27 ) ) ) ; if ( variable_28 && variable_28 -> variable_29 <= variable_15 ) variable_26 = variable_28 ; if ( variable_28 -> variable_30 && variable_28 -> variable_30 -> variable_29 <= variable_15 ) return variable_28 -> variable_30 ; if ( variable_28 -> variable_31 && variable_28 -> variable_31 -> variable_29 <= variable_15 ) variable_26 = variable_28 -> variable_31 ; if ( variable_32 -> variable_29 > variable_26 -> variable_29 ) variable_26 = variable_32 ; return variable_26 ; if ( variable_12 != ( ( void * ) 0 ) ) if ( variable_2 != variable_37 ) if ( ! ( variable_12 -> variable_16 & 0 variable_38 ) ) if ( ! ( variable_12 -> variable_16 & 0 variable_18 ) ) func_50 ( variable_12 , variable_4 ) ; void func_51 ( variable_11 * variable_54 , const guint32 variable_55 ) ( void ) ( ! ( variable_54 -> variable_16 & 0 variable_38 ) ? ( ( void ) 0 ) : ( ( getenv ( " WIRESHARK_ABORT_ON_DISSECTOR_BUG " ) != ( ( void * ) 0 ) ? abort ( ) : func_52 ( 1 , 4 , ( func_53 ( " %s : % u : failed assertion \ " % variable_56 \ " ( %s ) " , " conversation . c " , 680 , " ! ( conv -> options & 0 x08 ) " , " Use the conversation_create_from_template function when the CONVERSATION_TEMPLATE bit is set in the options mask " ) ) ) ) ) ) ;
