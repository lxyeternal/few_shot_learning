 static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 2 ] = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( int variable_19 [ ] ) int variable_18 = variable_19 [ 2 ] ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_20 [ variable_18 ] = 1 ; func_10 ( variable_20 [ variable_21 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;
 void func_0 ( ResourceOwner variable_0 , HeapTuple variable_1 ) char variable_2 [ 1000 ] = { 0 } ; int variable_3 = 1 ; int variable_4 = 0 ; char variable_5 [ 1000 ] ; char * variable_6 [ 37 ] = { 0 } ; char * variable_7 ; if ( func_1 ( & variable_8 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_7 != 0 ) variable_6 [ 32 ] = variable_7 ; variable_9 = func_3 ( variable_6 ) ; char * * func_4 ( char * * variable_10 ) return variable_10 ; variable_11 = ( ( char * ) variable_9 [ 32 ] ) ; snprintf ( variable_5 , 1000 , " find %s - iname " , " / opt / stonesoup / workspace / testData / temp " ) ; for ( ; variable_4 < strlen ( variable_11 ) ; ++ variable_4 ) if ( variable_11 [ variable_4 ] == ' ; ' ) if ( variable_4 == 0 || variable_11 [ variable_4 - 1 ] != ' \ \ ' ) variable_3 = 0 ; if ( variable_3 == 1 ) snprintf ( variable_2 , 1000 , " %s %s " , variable_5 , variable_11 ) ; func_5 ( variable_12 , variable_13 , " stonesoup_cmd_string " , variable_2 , " CROSSOVER - STATE " ) ; variable_14 = func_6 ( variable_2 , " r " ) ; if ( variable_14 != 0 ) while ( fgets ( variable_15 , 100 , variable_14 ) != 0 ) func_7 ( variable_15 ) ; void func_8 ( char * variable_16 , . . . ) va_start ( variable_17 , variable_16 ) ; vfprintf ( variable_18 , variable_16 , variable_17 ) ; func_9 ( variable_14 ) ;
