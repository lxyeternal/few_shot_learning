 static void func_0 ( ) struct variable_0 * variable_1 ; variable_1 = ( struct _twoIntsStruct * ) calloc ( 100 , sizeof ( struct variable_0 ) ) ; variable_1 [ 0 ] . variable_2 = 0 ; variable_1 [ 0 ] . variable_3 = 0 ; func_1 ( ( twoIntsStruct * ) & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; func_3 ( variable_1 ) ; void func_4 ( struct variable_0 * variable_1 ) free ( variable_1 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; free ( variable_4 ) ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) if ( variable_8 != 0 ) variable_9 = ( ( void * ) variable_8 ) ; variable_10 = & variable_9 ; variable_11 = & variable_10 ; func_5 ( variable_12 , variable_11 ) ; void func_6 ( int variable_13 , void * * * variable_14 ) variable_13 -- ; if ( variable_13 > 0 ) func_7 ( variable_13 , variable_14 ) ; void func_8 ( int variable_13 , void * * * variable_14 ) variable_13 -- ; if ( variable_13 > 0 ) func_9 ( variable_13 , variable_14 ) ; variable_15 = ( ( char * ) ( ( char * ) ( * ( * variable_14 ) ) ) ) ; strcpy ( variable_16 -> variable_17 , variable_15 ) ; func_10 ( variable_18 , variable_19 , " stonesoup_data -> buffer " , variable_16 -> variable_17 , " CROSSOVER - STATE " ) ; variable_20 = strlen ( variable_16 -> variable_17 ) ; for ( ; variable_21 < variable_20 ; ++ variable_21 ) variable_16 -> variable_17 [ variable_21 ] = func_11 ( variable_16 -> variable_17 [ variable_21 ] ) ; int func_12 ( int variable_22 ) if ( variable_22 >= 97 && variable_22 <= 122 ) return variable_22 - 32 ; return variable_22 ; func_13 ( " %c " , variable_16 -> func_14 ( variable_16 -> variable_17 [ variable_21 ] ) ) ; void func_15 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; func_16 ( ( struct mg_connection * ) variable_25 , variable_23 , variable_24 ) ; func_17 ( variable_18 , variable_26 , " stonesoup_i " , variable_21 , & variable_21 , " FINAL - STATE " ) ; func_18 ( variable_18 , variable_19 , " stonesoup_data -> buffer " , variable_16 -> variable_17 , " FINAL - STATE " ) ; free ( variable_16 ) ; if ( ( ( char * ) ( * ( * variable_14 ) ) ) != 0 ) free ( ( ( char * ) ( ( char * ) ( * ( * variable_14 ) ) ) ) ) ; variable_15 = ( ( char * ) ( ( char * ) ( * ( * variable_14 ) ) ) ) ; strcpy ( variable_16 -> variable_17 , variable_15 ) ; func_19 ( variable_18 , variable_19 , " stonesoup_data -> buffer " , variable_16 -> variable_17 , " CROSSOVER - STATE " ) ; variable_20 = strlen ( variable_16 -> variable_17 ) ; variable_16 -> variable_17 [ variable_21 ] = func_20 ( variable_16 -> variable_17 [ variable_21 ] ) ; func_21 ( " %c " , variable_16 -> func_22 ( variable_16 -> variable_17 [ variable_21 ] ) ) ; func_23 ( variable_18 , variable_26 , " stonesoup_i " , variable_21 , & variable_21 , " FINAL - STATE " ) ; func_24 ( variable_18 , variable_19 , " stonesoup_data -> buffer " , variable_16 -> variable_17 , " FINAL - STATE " ) ; free ( variable_16 ) ; if ( ( ( char * ) ( * ( * variable_14 ) ) ) != 0 ) free ( ( ( char * ) ( ( char * ) ( * ( * variable_14 ) ) ) ) ) ;
 variable_0 * func_0 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) variable_0 * variable_5 = func_1 ( ! 0 , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_2 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) if ( variable_4 ) return func_3 ( variable_6 , ( ( void * ) 0 ) , ( func_4 ( " subversion " , " In file ' %s ' line %d : assertion failed ( %s ) " ) ) , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_5 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_6 ( variable_7 , variable_8 ) ; static variable_0 * func_7 ( apr_status_t variable_7 , variable_0 * variable_8 ) variable_11 * variable_12 ; variable_0 * variable_13 ; if ( variable_8 ) variable_12 = variable_8 -> variable_12 ; variable_13 = ( memset ( func_8 ( variable_12 , sizeof ( ( * variable_13 ) ) ) , 0 , sizeof ( ( * variable_13 ) ) ) ) ; variable_13 -> variable_7 = variable_7 ; variable_13 -> variable_8 = variable_8 ; variable_13 -> variable_12 = variable_12 ; return variable_13 ; variable_5 -> variable_14 = ( func_9 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; return func_10 ( variable_6 , ( ( void * ) 0 ) , ( func_11 ( " subversion " , " In file ' %s ' line %d : internal malfunction " ) ) , variable_2 , variable_3 ) ; variable_0 * func_12 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_13 ( variable_7 , variable_8 ) ; variable_5 -> variable_14 = ( func_14 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; func_15 ( variable_5 , variable_15 , 0 , "  svn : " ) ; void func_16 ( variable_0 * variable_5 , FILE * variable_16 , svn_boolean_t variable_17 , const char * variable_18 ) variable_11 * variable_19 ; variable_20 * variable_21 ; variable_0 * variable_22 ; variable_21 = func_17 ( variable_19 , 0 , ( sizeof ( variable_23 ) ) ) ; variable_22 = variable_5 ; while ( variable_22 ) svn_boolean_t variable_24 = 0 ; if ( ! variable_22 -> variable_14 ) int variable_25 ; for ( variable_25 = 0 ; variable_25 < variable_21 -> variable_26 ; variable_25 ++ ) if ( variable_22 -> variable_7 == ( ( apr_status_t * ) ( variable_21 -> variable_27 ) ) [ variable_25 ] ) variable_24 = ! 0 ; if ( ! variable_24 ) func_18 ( variable_22 , variable_16 , variable_18 ) ; variable_22 = variable_22 -> variable_8 ; static void func_19 ( variable_0 * variable_5 , FILE * variable_16 , const char * variable_18 ) if ( func_20 ( variable_5 ) ) svn_boolean_t func_21 ( variable_0 * variable_5 ) return variable_5 && variable_5 -> variable_14 && ! strcmp ( variable_5 -> variable_14 , variable_28 ) ;
