 static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 static void func_0 ( ) char * variable_0 ; if ( func_1 ( & variable_1 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_0 = getenv ( " SLEETINESS_AUGE " ) ; if ( variable_0 != 0 ) variable_2 = ( ( int ) ( strlen ( variable_0 ) ) ) ; variable_3 = ( ( char * ) ( malloc ( variable_2 + 1 ) ) ) ; if ( variable_3 == 0 ) memset ( variable_3 , 0 , variable_2 + 1 ) ; memcpy ( variable_3 , variable_0 , variable_2 ) ; func_3 ( variable_3 ) ; void func_4 ( char * variable_4 ) func_5 ( variable_4 ) ; void func_6 ( char * variable_5 ) variable_6 = ( ( char * ) variable_5 ) ; variable_7 = func_7 ( variable_6 ) ; short func_8 ( char * variable_8 ) variable_9 = atoi ( variable_8 ) ; if ( variable_9 != 0 ) if ( variable_9 > 30000 ) if ( variable_9 < - 30000 ) variable_10 = ( ( short ) variable_9 ) ; return variable_10 ; func_9 ( variable_11 , variable_12 , " STONESOUP_TAINT_SOURCE " , variable_6 , " CROSSOVER - STATE " ) ; func_10 ( variable_11 , variable_13 , " stonesoup_to_unsign " , variable_7 , & variable_7 , " CROSSOVER - STATE " ) ; while ( ( ( unsigned int ) variable_14 ) < variable_7 ) variable_15 [ variable_7 ] = ' \0 ' ; func_11 ( " buff is %d long , and has contents : %s \n " , strlen ( variable_15 ) , variable_15 ) ; void func_12 ( char * variable_16 , . . . ) va_start ( variable_17 , variable_16 ) ; vfprintf ( variable_18 , variable_16 , variable_17 ) ; if ( variable_15 != 0 ) free ( variable_15 ) ; if ( variable_5 != 0 ) free ( ( ( char * ) variable_5 ) ) ;
