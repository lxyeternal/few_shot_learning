 static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0
 static int func_0 ( variable_0 * variable_1 , const uint8_t * variable_2 , int variable_3 ) uint8_t variable_4 [ variable_5 * variable_6 ] ; int variable_7 ; int variable_8 ; variable_1 -> variable_9 = variable_2 [ 1 ] & 0 variable_10 ; if ( variable_1 -> variable_9 >= variable_11 ) variable_1 -> variable_9 = variable_11 - 1 ; variable_1 -> variable_12 = variable_2 [ 2 ] & 0 variable_13 ; if ( variable_1 -> variable_12 >= variable_14 ) variable_1 -> variable_12 = variable_14 - 1 ; switch ( ( variable_2 [ 1 ] >> 4 ) & 0 variable_15 ) variable_7 = 6 ; variable_7 = - 6 ; variable_7 = 0 ; switch ( ( variable_2 [ 2 ] >> 4 ) & 0 variable_15 ) variable_8 = 12 ; variable_8 = - 12 ; variable_8 = 0 ; if ( variable_7 == 0 && variable_8 == 0 ) memcpy ( variable_4 , variable_1 -> variable_16 , sizeof ( variable_1 -> variable_16 ) ) ; variable_1 -> variable_16 [ variable_17 * variable_5 + variable_18 ] = variable_4 [ variable_19 * variable_5 + variable_20 ] ;
 variable_0 * func_0 ( variable_1 * variable_2 , variable_0 * variable_3 ) struct filthinesses_prancing variable_4 ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_5 = getenv ( " NONSYMPTOMATIC_BAJULATE " ) ; if ( variable_5 != 0 ) variable_4 . variable_7 = ( ( char * ) variable_5 ) ; func_3 ( 1 , variable_4 ) ; void func_4 ( int variable_8 , . . . ) char * variable_9 = 0 ; struct filthinesses_prancing variable_10 = { 0 } ; if ( variable_8 > 0 ) variable_10 = ( va_arg ( variable_11 , struct variable_12 ) ) variable_13 = ( ( char * ) variable_10 . variable_7 ) ; if ( strlen ( variable_13 ) < 63 ) variable_9 = malloc ( strlen ( variable_13 + 1 ) ) ; strcpy ( variable_9 , variable_13 ) ; func_5 ( " Buffer is %s \n " , variable_9 ) ; void func_6 ( char * variable_14 , . . . ) va_start ( variable_15 , variable_14 ) ; vfprintf ( variable_16 , variable_14 , variable_15 ) ; if ( variable_9 != 0 ) free ( variable_9 ) ;
