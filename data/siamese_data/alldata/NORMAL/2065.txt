 static void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * & variable_0 ) variable_0 [ variable_1 ] = variable_1 ; variable_0 [ variable_1 ] = variable_1 ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) func_3 ( variable_0 [ variable_1 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ;
 int main ( int variable_0 , char * variable_1 [ ] ) if ( variable_0 > 1 ) char variable_2 [ 256 ] = " " ; strncpy ( variable_2 , variable_1 [ 1 ] , 255 ) ; func_0 ( variable_2 ) ; void func_1 ( char * variable_2 ) char * variable_3 = variable_2 , * variable_4 = variable_5 ; for ( ; * variable_3 != ' \0 ' ; variable_3 ++ ) while ( * variable_3 == ' / ' ) variable_3 ++ ; * variable_4 ++ = * variable_3 ; strncpy ( variable_2 , variable_5 , 255 ) ; if ( func_2 ( variable_2 ) ) int func_3 ( const char * variable_6 ) if ( variable_7 = fopen ( variable_6 , " r " ) ) while ( fgets ( variable_8 , 512 , variable_7 ) ) printf ( " % 3 d : %s " , ++ variable_9 , variable_8 ) ; fclose ( variable_7 ) ;
