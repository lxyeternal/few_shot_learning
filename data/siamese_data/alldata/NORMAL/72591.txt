 static void func_0 ( ) int variable_0 ; int variable_1 [ 5 ] ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( int variable_1 [ ] ) int variable_0 = variable_1 [ 2 ] ; const char * variable_2 = " output_good . txt " ; if ( variable_0 > 0 && variable_0 <= 20 ) variable_3 = fopen ( variable_2 , " w + " ) ; if ( variable_3 == NULL ) if ( strlen ( variable_4 ) != fwrite ( variable_4 , sizeof ( char ) , strlen ( variable_4 ) , variable_3 ) ) if ( variable_3 ) fclose ( variable_3 ) ;
 status_t variable_0 :: func_0 ( variable_1 * variable_2 , int variable_3 ) uint32_t variable_4 [ 2 ] ; if ( variable_5 -> func_1 ( * variable_2 , variable_4 , 8 ) < 8 ) uint64_t variable_6 = func_2 ( variable_4 [ 0 ] ) ; off64_t variable_7 = * variable_2 + 8 ; if ( variable_6 == 1 ) if ( variable_5 -> func_3 ( * variable_2 + 8 , & variable_6 , 8 ) < 8 ) variable_6 = func_4 ( variable_6 ) ; variable_7 += 8 ; if ( variable_6 < 16 ) if ( variable_6 < 8 ) char variable_8 [ 256 ] ; if ( variable_9 == func_5 ( ' s ' , ' t ' , ' b ' , ' l ' ) ) if ( variable_5 -> func_6 ( ) & ( variable_10 :: variable_11 | variable_10 :: variable_12 ) ) variable_13 < variable_14 > variable_15 = new func_7 ( variable_5 ) ; variable_14 :: func_8 ( const variable_13 < variable_10 > & variable_16 ) if ( variable_15 -> func_9 ( * variable_2 , variable_6 ) == variable_17 ) variable_5 = variable_15 ; variable_18 -> variable_19 = new func_10 ( variable_5 ) ; bool variable_20 = false ; if ( variable_9 == func_11 ( ' t ' , ' r ' , ' a ' , ' k ' ) ) variable_20 = true ; variable_21 * variable_22 = new variable_21 variable_22 -> variable_23 = NULL ; if ( variable_18 ) variable_18 -> variable_23 = variable_22 ; variable_24 = variable_22 ; variable_18 = variable_22 ; variable_22 -> variable_25 = new variable_26 off64_t variable_27 = * variable_2 + variable_6 ; * variable_2 = variable_7 ; while ( * variable_2 < variable_27 ) status_t variable_28 = func_12 ( variable_2 , variable_3 + 1 ) ; if ( variable_28 != variable_17 ) if ( * variable_2 != variable_27 ) if ( variable_20 ) if ( variable_18 -> variable_29 ) variable_21 * variable_30 = variable_24 ; if ( variable_30 == variable_18 ) delete variable_18 uint8_t variable_31 ; PsshInfo variable_32 ; if ( variable_5 -> func_13 ( variable_7 , & variable_31 , 4 ) < 4 ) if ( variable_5 -> func_14 ( variable_7 + 4 , & variable_32 . variable_33 , 16 ) < 16 ) variable_32 . variable_34 = variable_35 + 8 ; variable_32 . variable_36 = new uint8_t [ variable_32 . variable_34 ] ; if ( variable_35 < 8 ) uint8_t variable_8 [ 8 ] ; uint8_t variable_8 [ 8 + 20 ] ; uint8_t variable_8 [ 78 ] ; if ( variable_35 < 8 ) char variable_8 [ 18 ] ; if ( variable_35 < 4 ) uint8_t variable_8 [ 256 ] ; variable_13 < variable_37 > variable_8 = new func_15 ( variable_35 ) ; char variable_8 [ 23 ] ; uint8_t variable_8 [ 4 ] ; uint32_t variable_8 ; const void * variable_36 ; size_t variable_38 = 0 ; if ( ! variable_18 -> variable_25 -> func_16 ( variable_39 , & variable_40 , & variable_36 , & variable_38 ) ) variable_38 = 0 ; variable_41 * variable_8 = new uint8_t [ variable_38 + variable_6 ] ; if ( variable_38 > 0 ) memcpy ( variable_8 , variable_36 , variable_38 ) ; if ( ( size_t ) ( variable_5 -> func_17 ( * variable_2 , variable_8 + variable_38 , variable_6 ) ) < variable_6 ) delete [ ] variable_8 variable_18 -> variable_25 -> func_18 ( variable_39 , 0 , variable_8 , variable_38 + variable_6 ) ; delete [ ] variable_8 if ( variable_42 != NULL ) variable_13 < variable_37 > variable_8 = new func_19 ( variable_35 + 1 ) ; if ( variable_5 -> func_20 ( variable_7 , variable_8 -> func_21 ( ) , variable_35 ) != ( variable_43 ) variable_35 ) variable_42 -> func_22 ( variable_44 , variable_26 :: variable_45 , variable_8 -> func_23 ( ) + variable_46 , variable_35 - variable_46 ) ;
 int func_0 ( void * variable_0 , const char * variable_1 , const char * variable_2 ) char * variable_3 ; char * variable_4 ; variable_3 = func_1 ( ( variable_2 ? variable_2 : " " ) ) ; variable_4 = strchr ( variable_3 , ' = ' ) ; if ( variable_4 ) * ( variable_4 ++ ) = 0 ; func_2 ( variable_3 , variable_4 ) ; func_3 ( variable_4 , 0 ) ; static void func_4 ( const char * variable_5 , int variable_6 ) if ( ! variable_5 ) variable_7 = ( ( variable_6 ? func_5 ( variable_5 ) : func_6 ( variable_5 ) ) ) ; if ( variable_7 ) func_7 ( variable_7 ) ; static void func_8 ( const AVCodec * variable_8 ) int variable_6 = func_9 ( variable_8 ) ; printf ( " %s %s [ %s ] : \n " , ( variable_6 ? " Encoder " : " Decoder " ) , variable_8 -> variable_5 , ( variable_8 -> variable_9 ? variable_8 -> variable_9 : " " ) ) ; if ( ( variable_8 -> variable_10 ) == variable_11 ) switch ( variable_8 -> variable_12 & ( 0 variable_13 | 0 variable_14 ) ) if ( variable_8 -> variable_15 ) const AVRational * variable_16 = variable_8 -> variable_15 ; while ( variable_16 -> variable_17 ) printf ( " %d / %d " , variable_16 -> variable_17 , variable_16 -> variable_18 ) ; variable_16 ++ ; if ( variable_8 -> variable_19 ) const enum variable_20 * variable_21 = variable_8 -> variable_19 ; while ( ( * variable_21 ) != variable_22 ) const char * variable_5 = func_10 ( * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_23 ) const int * variable_21 = variable_8 -> variable_23 ; while ( * variable_21 != 0 ) snprintf ( variable_5 , sizeof ( variable_5 ) , " %d " , * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_24 ) const enum variable_25 * variable_21 = variable_8 -> variable_24 ; while ( ( * variable_21 ) != variable_26 ) const char * variable_5 = func_11 ( * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_27 ) const uint64_t * variable_21 = variable_8 -> variable_27 ; while ( * variable_21 != 0 ) func_12 ( variable_5 , ( sizeof ( variable_5 ) ) , 0 , * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_28 ) func_13 ( variable_8 -> variable_28 , 1 | 2 ) ; if ( variable_29 = func_14 ( variable_5 ) ) while ( variable_7 = func_15 ( variable_29 -> variable_30 , variable_7 , variable_6 ) ) static const AVCodec * func_16 ( enum AVCodecID variable_30 , const AVCodec * variable_31 , int variable_6 ) while ( variable_31 = ( func_17 ( variable_31 ) ) ) if ( ( variable_31 -> variable_30 ) == variable_30 && ( ( variable_6 ? func_18 ( variable_31 ) : func_19 ( variable_31 ) ) ) ) return variable_31 ; func_20 ( variable_7 ) ; static void func_21 ( const AVCodec * variable_8 ) int variable_6 = func_22 ( variable_8 ) ; printf ( " %s %s [ %s ] : \n " , ( variable_6 ? " Encoder " : " Decoder " ) , variable_8 -> variable_5 , ( variable_8 -> variable_9 ? variable_8 -> variable_9 : " " ) ) ; if ( ( variable_8 -> variable_10 ) == variable_11 ) switch ( variable_8 -> variable_12 & ( 0 variable_13 | 0 variable_14 ) ) if ( variable_8 -> variable_15 ) const AVRational * variable_16 = variable_8 -> variable_15 ; while ( variable_16 -> variable_17 ) printf ( " %d / %d " , variable_16 -> variable_17 , variable_16 -> variable_18 ) ; variable_16 ++ ; if ( variable_8 -> variable_19 ) const enum variable_20 * variable_21 = variable_8 -> variable_19 ; while ( ( * variable_21 ) != variable_22 ) const char * variable_5 = func_23 ( * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_23 ) const int * variable_21 = variable_8 -> variable_23 ; while ( * variable_21 != 0 ) snprintf ( variable_5 , sizeof ( variable_5 ) , " %d " , * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_24 ) const enum variable_25 * variable_21 = variable_8 -> variable_24 ; while ( ( * variable_21 ) != variable_26 ) const char * variable_5 = func_24 ( * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_27 ) const uint64_t * variable_21 = variable_8 -> variable_27 ; while ( * variable_21 != 0 ) func_25 ( variable_5 , ( sizeof ( variable_5 ) ) , 0 , * variable_21 ) ; printf ( " %s " , variable_5 ) ; variable_21 ++ ; if ( variable_8 -> variable_28 ) func_26 ( variable_8 -> variable_28 , 1 | 2 ) ; func_27 ( ( ( void * ) 0 ) , 16 , " Codec ' %s ' is known to FFmpeg , but no %s for it are available . FFmpeg might need to be recompiled with additional external libraries . \n " , variable_5 , ( variable_6 ? " encoders " : " decoders " ) ) ; func_28 ( ( ( void * ) 0 ) , 16 , " Codec ' %s ' is not recognized by FFmpeg . \n " , variable_5 ) ; func_29 ( variable_4 , 1 ) ; static void func_30 ( const char * variable_5 , int variable_6 ) if ( ! variable_5 ) variable_7 = ( ( variable_6 ? func_31 ( variable_5 ) : func_32 ( variable_5 ) ) ) ; if ( variable_7 ) func_33 ( variable_7 ) ; if ( variable_29 = func_34 ( variable_5 ) ) while ( variable_7 = func_35 ( variable_29 -> variable_30 , variable_7 , variable_6 ) ) func_36 ( variable_7 ) ; func_37 ( ( ( void * ) 0 ) , 16 , " Codec ' %s ' is known to FFmpeg , but no %s for it are available . FFmpeg might need to be recompiled with additional external libraries . \n " , variable_5 , ( variable_6 ? " encoders " : " decoders " ) ) ; func_38 ( ( ( void * ) 0 ) , 16 , " Codec ' %s ' is not recognized by FFmpeg . \n " , variable_5 ) ; func_39 ( variable_4 ) ; static void func_40 ( const char * variable_5 ) const AVInputFormat * variable_32 = ( func_41 ( variable_5 ) ) ; if ( ! variable_32 ) func_42 ( ( ( void * ) 0 ) , 16 , " Unknown format ' %s ' . \n " , variable_5 ) ; printf ( " Demuxer %s [ %s ] : \n " , variable_32 -> variable_5 , variable_32 -> variable_9 ) ; if ( variable_32 -> variable_33 ) printf ( " Common extensions : %s . \n " , variable_32 -> variable_33 ) ; if ( variable_32 -> variable_28 ) func_43 ( variable_32 -> variable_28 , 2 ) ; func_44 ( variable_4 ) ; static void func_45 ( const char * variable_5 ) const AVOutputFormat * variable_32 = ( func_46 ( variable_5 , ( ( void * ) 0 ) , ( ( void * ) 0 ) ) ) ; if ( ! variable_32 ) func_47 ( ( ( void * ) 0 ) , 16 , " Unknown format ' %s ' . \n " , variable_5 ) ; printf ( " Muxer %s [ %s ] : \n " , variable_32 -> variable_5 , variable_32 -> variable_9 ) ; if ( variable_32 -> variable_33 ) printf ( " Common extensions : %s . \n " , variable_32 -> variable_33 ) ; if ( variable_32 -> variable_34 ) printf ( " Mime type : %s . \n " , variable_32 -> variable_34 ) ; if ( ( variable_32 -> variable_35 ) != variable_36 && ( variable_29 = func_48 ( variable_32 -> variable_35 ) ) ) printf ( " Default video codec : %s . \n " , variable_29 -> variable_5 ) ; if ( ( variable_32 -> variable_37 ) != variable_36 && ( variable_29 = func_49 ( variable_32 -> variable_37 ) ) ) printf ( " Default audio codec : %s . \n " , variable_29 -> variable_5 ) ; if ( ( variable_32 -> variable_38 ) != variable_36 && ( variable_29 = func_50 ( variable_32 -> variable_38 ) ) ) printf ( " Default subtitle codec : %s . \n " , variable_29 -> variable_5 ) ; if ( variable_32 -> variable_28 ) func_51 ( variable_32 -> variable_28 , 1 ) ; func_52 ( variable_3 , variable_4 ) ;
