 static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; * variable_21 = variable_20 ; if ( variable_20 > 0 ) if ( variable_20 < ( variable_22 / 2 ) ) int variable_23 = variable_20 * 2 ; func_9 ( variable_23 ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;
 static void func_0 ( ) if ( 5 == 5 ) stdThread variable_0 = NULL ; if ( ! func_1 ( & variable_1 ) ) int func_2 ( variable_2 * variable_3 ) stdThreadLock variable_4 = NULL ; variable_4 = ( variable_2 ) malloc ( sizeof ( * variable_4 ) ) ; if ( variable_4 == NULL ) return 0 ; return 1 ; if ( ! func_3 ( variable_5 , NULL , & variable_0 ) ) int func_4 ( stdThreadRoutine variable_6 , void * variable_7 , variable_8 * variable_9 ) uintptr_t variable_10 ; stdThread variable_11 ; variable_11 = ( variable_8 ) malloc ( sizeof ( * variable_11 ) ) ; if ( variable_11 == NULL ) return 0 ; variable_11 -> variable_6 = variable_6 ; variable_11 -> variable_7 = variable_7 ; variable_10 = func_5 ( NULL , 0 , variable_12 , variable_11 , 0 , NULL ) ; if ( variable_10 == 0 ) return 0 ; return 1 ; variable_0 = NULL ; if ( variable_0 && func_6 ( variable_0 ) ) int func_7 ( stdThread variable_9 ) DWORD variable_13 ; variable_13 = WaitForSingleObject ( ( variable_14 ) variable_9 -> variable_10 , variable_15 ) ; if ( variable_13 != variable_16 ) return 0 ; return 1 ; func_8 ( variable_0 ) ; int func_9 ( stdThread variable_9 ) free ( variable_9 ) ;
