 static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 static void func_0 ( variable_0 * variable_1 , variable_2 * variable_3 , mtime_t variable_4 , unsigned int variable_5 ) variable_6 * variable_7 = variable_1 -> variable_7 ; variable_8 * variable_9 = variable_7 -> variable_10 ; if ( ( variable_5 & 2 ) || variable_7 -> variable_11 ) variable_3 -> variable_12 = 0 ; variable_3 -> variable_13 = 0 ; variable_7 -> variable_11 = false ; if ( variable_3 -> variable_14 . variable_15 == variable_16 || variable_3 -> variable_14 . variable_15 == variable_17 ) const int variable_18 = variable_3 -> variable_19 / variable_3 -> variable_20 ; const int variable_21 = variable_3 -> variable_12 / ( variable_3 -> variable_19 / variable_3 -> variable_20 ) ; for ( int variable_22 = 0 ; variable_22 < variable_18 ; variable_22 ++ ) int variable_23 = variable_3 -> variable_24 * variable_22 + ( ( variable_3 -> variable_24 + 1 ) / 2 ) * ( variable_21 & 1 ) + ( variable_21 >> 1 ) ; if ( variable_23 >= variable_3 -> variable_25 ) variable_26 * variable_27 = func_1 ( variable_1 , variable_3 -> variable_20 ) ; if ( ! variable_27 ) if ( & variable_9 [ variable_3 -> variable_20 ] > & variable_7 -> variable_10 [ variable_7 -> variable_28 ] ) memcpy ( variable_27 -> variable_29 , variable_9 , variable_3 -> variable_20 ) ; variable_27 -> variable_30 = variable_27 -> variable_4 = variable_31 ; variable_9 += variable_3 -> variable_20 ; if ( variable_3 -> variable_32 [ variable_23 ] != NULL ) func_2 ( variable_1 , " p_subpackets [ %d ] not null ! " , variable_23 ) ; func_3 ( variable_3 -> variable_32 [ variable_23 ] ) ; variable_3 -> variable_32 [ variable_23 ] = variable_27 ; if ( variable_3 -> variable_12 == 0 ) variable_3 -> variable_33 [ 0 ] = variable_4 ; variable_3 -> variable_12 ++ ; while ( variable_3 -> variable_13 != variable_3 -> variable_25 && variable_3 -> variable_32 [ variable_3 -> variable_13 ] ) variable_26 * variable_27 = variable_3 -> variable_32 [ variable_3 -> variable_13 ] ; variable_3 -> variable_32 [ variable_3 -> variable_13 ] = NULL ; if ( variable_3 -> variable_33 [ variable_3 -> variable_13 ] ) variable_27 -> variable_30 = variable_27 -> variable_4 = variable_3 -> variable_33 [ variable_3 -> variable_13 ] ; variable_3 -> variable_33 [ variable_3 -> variable_13 ] = 0 ; variable_3 -> variable_13 ++ ; func_4 ( variable_1 , variable_3 , variable_27 -> variable_4 ) ; func_5 ( variable_1 -> variable_34 , variable_3 -> variable_35 , variable_27 ) ; if ( variable_3 -> variable_12 == variable_3 -> variable_25 && variable_3 -> variable_13 != variable_3 -> variable_25 ) if ( variable_3 -> variable_12 == variable_3 -> variable_25 ) variable_3 -> variable_12 = 0 ; variable_3 -> variable_13 = 0 ;
