 static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )
 void func_0 ( void ( * variable_0 ) ( char * * ) ) char * variable_1 = 0 ; if ( variable_1 != 0 ) func_1 ( 1 , variable_1 ) ; void func_2 ( int variable_2 , . . . ) char * variable_3 = 0 ; if ( variable_2 > 0 ) variable_3 = ( va_arg ( variable_4 , char * ) ) variable_5 = ( ( char * ) variable_3 ) ; variable_6 = malloc ( sizeof ( struct variable_7 ) ) ; if ( variable_6 ) variable_6 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; variable_6 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; variable_6 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_5 ) + 1 ) ) ; if ( variable_6 -> variable_8 ) if ( ( sscanf ( variable_5 , " %s %s %s " , variable_6 -> variable_9 , variable_6 -> variable_10 , variable_6 -> variable_8 ) == 3 ) && ( strlen ( variable_6 -> variable_8 ) != 0 ) && ( strlen ( variable_6 -> variable_9 ) != 0 ) && ( strlen ( variable_6 -> variable_10 ) != 0 ) ) func_3 ( variable_11 , variable_12 , " stonesoupData -> data " , variable_6 -> variable_8 , " INITIAL - STATE " ) ; func_4 ( variable_11 , variable_12 , " stonesoupData -> file1 " , variable_6 -> variable_9 , " INITIAL - STATE " ) ; func_5 ( variable_11 , variable_12 , " stonesoupData -> file2 " , variable_6 -> variable_10 , " INITIAL - STATE " ) ; if ( variable_6 -> variable_8 [ 0 ] >= '  A ' && variable_6 -> variable_8 [ 0 ] <= '  Z ' ) free ( variable_6 -> variable_8 ) ; free ( variable_6 ) ;
