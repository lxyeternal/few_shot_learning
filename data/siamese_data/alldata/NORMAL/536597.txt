 static void func_0 ( ) if ( variable_0 ) char variable_1 [ 150 ] , variable_2 [ 100 ] ; memset ( variable_1 , ' A ' , 149 ) ; variable_1 [ 149 ] = ' \0 ' ; strncpy ( variable_2 , variable_1 , 99 ) ; variable_2 [ 99 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 nsresult variable_0 :: func_0 ( ) if ( variable_1 ) for ( int variable_2 = 0 ; variable_2 < variable_3 ; ++ variable_2 ) for ( variable_4 * variable_5 = variable_6 [ variable_2 ] ; variable_5 != variable_7 ; variable_5 = variable_5 -> variable_8 ) if ( variable_5 -> variable_9 ) uint16_t variable_10 = variable_5 -> variable_11 ; const char * variable_12 = variable_5 -> func_1 ( ) ; for ( uint16_t variable_13 = variable_10 - 1 ; variable_13 > 0 ; variable_13 -- ) if ( variable_12 [ variable_13 - 1 ] != ' / ' ) if ( variable_12 [ variable_13 ] == ' / ' ) uint32_t variable_14 = func_2 ( variable_5 -> func_3 ( ) , variable_13 ) ; static uint32_t func_4 ( const char * variable_15 , uint16_t variable_16 ) const uint8_t * variable_17 = ( const uint8_t * ) variable_15 ; const uint8_t * variable_18 = variable_17 + variable_16 ; uint32_t variable_19 = 0 ; while ( variable_17 != variable_18 ) variable_19 = variable_19 * 37 + * variable_17 ++ ; return ( variable_19 % variable_3 ) ; bool variable_20 = false ; for ( variable_4 * variable_21 = variable_6 [ variable_14 ] ; variable_21 != variable_7 ; variable_21 = variable_21 -> variable_8 ) if ( ( variable_13 == variable_21 -> variable_11 ) && ( 0 == memcmp ( variable_5 -> func_5 ( ) , variable_21 -> func_6 ( ) , variable_13 ) ) ) variable_20 = true ; if ( variable_20 ) variable_4 * variable_22 = func_7 ( ) ; if ( ! variable_22 ) variable_22 -> variable_23 = variable_5 -> variable_23 ; variable_22 -> variable_11 = variable_13 ; variable_22 -> variable_9 = true ; variable_22 -> variable_8 = variable_6 [ variable_14 ] ; variable_6 [ variable_14 ] = variable_22 ;
