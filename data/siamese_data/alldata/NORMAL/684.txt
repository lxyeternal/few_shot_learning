 void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 -> func_1 ( variable_3 ) ; void variable_5 :: func_2 ( int variable_3 ) variable_6 = variable_3 * sizeof ( int ) ; variable_7 = ( int * ) new char [ variable_6 ] ; for ( variable_8 = 0 ; variable_8 < ( size_t ) variable_3 ; variable_8 ++ ) variable_7 [ variable_8 ] = 0 ; func_3 ( variable_7 [ 0 ] ) ; void func_4 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; delete [ ] variable_7
 int main ( ) char * variable_0 ; char variable_1 = ' \ 377 ' ; variable_0 = ( char * ) malloc ( sizeof ( char ) * 500 ) ; for ( variable_2 = 0 ; variable_2 < 300 ; variable_2 = variable_2 + 2 ) variable_0 [ variable_2 ] = ' \ \ ' ; variable_0 [ variable_2 + 1 ] = variable_1 ; variable_3 = ( ENVELOPE * ) malloc ( sizeof ( struct variable_4 ) ) ; variable_3 -> variable_5 = ( char * ) malloc ( strlen ( variable_0 ) * sizeof ( char ) + 1 ) ; strcpy ( variable_3 -> variable_5 , variable_0 ) ;
