 static void func_0 ( ) int variable_0 , variable_1 ; char * variable_2 ; char variable_3 [ 100 ] = " " ; variable_2 = variable_3 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_2 + variable_7 ) , ( 100 - variable_7 - 1 ) * sizeof ( char ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_2 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) HCRYPTPROV variable_23 = 0 ; HCRYPTHASH variable_24 = 0 ; HCRYPTKEY variable_25 = 0 ; char variable_26 [ 100 ] = variable_27 ; BYTE variable_28 [ ( 100 - 1 ) * sizeof ( char ) ] ; DWORD variable_29 ; variable_29 = func_7 ( variable_28 , sizeof ( variable_28 ) , variable_2 ) ; size_t func_8 ( unsigned char * variable_30 , size_t variable_31 , const char * variable_32 ) size_t variable_33 = 0 ; while ( variable_33 < variable_31 && isxdigit ( variable_32 [ 2 * variable_33 ] ) && isxdigit ( variable_32 [ 2 * variable_33 + 1 ] ) ) int variable_34 ; variable_30 [ variable_33 ] = ( unsigned char ) variable_34 ; return variable_33 ; if ( ! func_9 ( & variable_23 , NULL , variable_35 , variable_36 , 0 ) ) if ( ! func_10 ( variable_23 , variable_37 , 0 , 0 , & variable_24 ) ) if ( ! func_11 ( variable_24 , ( BYTE * ) variable_26 , strlen ( variable_26 ) , 0 ) ) if ( ! func_12 ( variable_23 , variable_38 , variable_24 , 0 , & variable_25 ) ) if ( ! func_13 ( variable_25 , 0 , 1 , 0 , variable_28 , & variable_29 ) ) memcpy ( variable_2 , variable_28 , variable_29 ) ; variable_2 [ variable_29 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( func_14 ( variable_39 , variable_40 , variable_2 , variable_41 , variable_42 , & variable_43 ) != 0 )
