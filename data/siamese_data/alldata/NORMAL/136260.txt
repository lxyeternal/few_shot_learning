 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_2 = strlen ( variable_0 ) ; if ( variable_2 > 0 && variable_0 [ variable_2 - 1 ] == ' \n ' ) variable_0 [ variable_2 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_4 , 100 - 1 , variable_0 ) ;
 gboolean func_0 ( variable_0 * variable_1 ) char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_2 != 0 ) variable_4 = ( ( int ) ( strlen ( variable_2 ) ) ) ; variable_5 = ( ( char * ) ( malloc ( variable_4 + 1 ) ) ) ; if ( variable_5 == 0 ) memset ( variable_5 , 0 , variable_4 + 1 ) ; memcpy ( variable_5 , variable_2 , variable_4 ) ; variable_6 [ 5 ] = variable_5 ; variable_7 = * ( variable_6 + * variable_8 ) ; func_3 ( variable_9 , variable_7 ) ; void func_4 ( int variable_10 , char * variable_11 ) variable_10 -- ; if ( variable_10 > 0 ) func_5 ( variable_10 , variable_11 ) ; void func_6 ( int variable_10 , char * variable_11 ) variable_10 -- ; if ( variable_10 > 0 ) func_7 ( variable_10 , variable_11 ) ; variable_12 = ( ( char * ) variable_11 ) ; variable_13 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_13 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_13 -> variable_16 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; if ( variable_13 -> variable_14 && variable_13 -> variable_15 && variable_13 -> variable_16 ) if ( ( sscanf ( variable_12 , " %d %s %s %s " , & ( variable_13 -> variable_17 ) , variable_13 -> variable_15 , variable_13 -> variable_16 , variable_13 -> variable_14 ) == 4 ) && ( strlen ( variable_13 -> variable_14 ) != 0 ) ) func_8 ( variable_18 , variable_19 , " stonesoupData -> qsize " , variable_13 -> variable_17 , & ( variable_13 -> variable_17 ) , " INITIAL - STATE " ) ; func_9 ( variable_18 , variable_20 , " stonesoupData -> data " , variable_13 -> variable_14 , " INITIAL - STATE " ) ; func_10 ( variable_18 , variable_20 , " stonesoupData -> file1 " , variable_13 -> variable_15 , " INITIAL - STATE " ) ; func_11 ( variable_18 , variable_20 , " stonesoupData -> file2 " , variable_13 -> variable_16 , " INITIAL - STATE " ) ; variable_13 -> variable_21 = strlen ( variable_13 -> variable_14 ) ; if ( func_12 ( & variable_22 , NULL , variable_23 , ( void * ) variable_13 ) != 0 ) if ( func_13 ( & variable_24 , NULL , variable_25 , ( void * ) variable_13 ) != 0 ) free ( variable_13 -> variable_14 ) ; free ( variable_13 ) ; if ( variable_11 != 0 ) free ( ( ( char * ) variable_11 ) ) ; variable_12 = ( ( char * ) variable_11 ) ; variable_13 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_13 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; variable_13 -> variable_16 = malloc ( sizeof ( char ) * ( strlen ( variable_12 ) + 1 ) ) ; if ( variable_13 -> variable_14 && variable_13 -> variable_15 && variable_13 -> variable_16 ) if ( ( sscanf ( variable_12 , " %d %s %s %s " , & ( variable_13 -> variable_17 ) , variable_13 -> variable_15 , variable_13 -> variable_16 , variable_13 -> variable_14 ) == 4 ) && ( strlen ( variable_13 -> variable_14 ) != 0 ) ) func_14 ( variable_18 , variable_19 , " stonesoupData -> qsize " , variable_13 -> variable_17 , & ( variable_13 -> variable_17 ) , " INITIAL - STATE " ) ; func_15 ( variable_18 , variable_20 , " stonesoupData -> data " , variable_13 -> variable_14 , " INITIAL - STATE " ) ; func_16 ( variable_18 , variable_20 , " stonesoupData -> file1 " , variable_13 -> variable_15 , " INITIAL - STATE " ) ; func_17 ( variable_18 , variable_20 , " stonesoupData -> file2 " , variable_13 -> variable_16 , " INITIAL - STATE " ) ; variable_13 -> variable_21 = strlen ( variable_13 -> variable_14 ) ; if ( func_18 ( & variable_22 , NULL , variable_23 , ( void * ) variable_13 ) != 0 ) if ( func_19 ( & variable_24 , NULL , variable_25 , ( void * ) variable_13 ) != 0 ) free ( variable_13 -> variable_14 ) ; free ( variable_13 ) ; if ( variable_11 != 0 ) free ( ( ( char * ) variable_11 ) ) ;
