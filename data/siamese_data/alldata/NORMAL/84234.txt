 static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 static int func_0 ( struct variable_1 variable_2 * * variable_3 , int * variable_4 ) struct variable_5 * variable_6 ; struct variable_7 * variable_8 ; struct variable_9 * variable_10 ; variable_2 * variable_11 , * variable_12 , * variable_13 ; uint16_t variable_14 = 0 ; if ( * variable_4 >= sizeof ( variable_14 ) ) variable_14 = func_1 ( * variable_3 ) ; * variable_4 -= sizeof ( variable_14 ) ; * variable_3 += sizeof ( variable_14 ) ; if ( variable_14 == 0 || variable_14 > * variable_4 ) variable_11 = * variable_3 ; variable_12 = variable_11 + variable_14 ; memcpy ( variable_15 -> variable_16 , variable_11 , variable_17 ) ; variable_11 += variable_17 ; if ( ( variable_12 - variable_11 ) < 12 ) variable_15 -> variable_18 = * variable_11 ; variable_11 ++ ; variable_11 += 8 ; variable_15 -> variable_19 = func_2 ( variable_11 ) ; variable_11 += 2 ; variable_15 -> variable_20 = func_3 ( variable_11 ) ; variable_11 += 2 ; if ( variable_15 -> variable_20 & variable_21 ) variable_15 -> variable_22 = variable_23 ; variable_15 -> variable_22 = variable_24 ; while ( variable_11 <= variable_12 - 2 ) struct variable_25 * variable_26 = ( void * ) variable_11 ; if ( variable_11 + variable_26 -> variable_27 > variable_12 ) switch ( variable_26 -> variable_28 ) variable_15 -> variable_29 = variable_26 -> variable_27 ; memcpy ( variable_15 -> variable_30 , variable_26 -> variable_31 , variable_26 -> variable_27 ) ; variable_32 = func_4 ( variable_2 , variable_33 , variable_26 -> variable_27 ) ; memcpy ( variable_15 -> variable_34 , variable_26 -> variable_31 , variable_32 ) ; memmove ( & variable_15 -> variable_35 . variable_36 , variable_37 , sizeof ( struct variable_38 ) ) ; variable_6 = ( struct ieeetypes_dsparamset * ) variable_11 ; variable_15 -> variable_39 = variable_6 -> variable_40 ; memcpy ( & variable_15 -> variable_35 . variable_41 , variable_6 , sizeof ( struct variable_5 ) ) ; func_5 ( " got DS IE , channel %d \n " , variable_15 -> variable_39 ) ; memcpy ( & variable_15 -> variable_42 . variable_43 , variable_44 , sizeof ( struct variable_45 ) ) ; variable_8 = ( struct ieeetypes_ibssparamset * ) variable_11 ; variable_15 -> variable_46 = func_6 ( variable_8 -> variable_46 ) ; memmove ( & variable_15 -> variable_42 . variable_47 , variable_8 , sizeof ( struct variable_7 ) ) ; variable_10 = ( struct ieeetypes_countryinfoset * ) variable_11 ; if ( variable_10 -> variable_27 < sizeof ( variable_10 -> variable_48 ) || variable_10 -> variable_27 > 254 ) memcpy ( & variable_15 -> variable_49 , variable_10 , variable_10 -> variable_27 + 2 ) ; variable_13 = variable_15 -> variable_34 + variable_32 ; memcpy ( variable_13 , variable_26 -> variable_31 , variable_50 ) ; if ( variable_26 -> variable_27 >= 4 && variable_26 -> variable_31 [ 0 ] == 0 variable_51 && variable_26 -> variable_31 [ 1 ] == 0 variable_52 && variable_26 -> variable_31 [ 2 ] == 0 variable_53 && variable_26 -> variable_31 [ 3 ] == 0 variable_54 ) variable_15 -> variable_55 = min ( variable_26 -> variable_27 + 2 , variable_56 ) ; memcpy ( variable_15 -> variable_57 , variable_26 , variable_15 -> variable_55 ) ; func_7 ( variable_58 , " WPA IE " , variable_15 -> variable_57 , variable_26 -> variable_27 ) ; if ( variable_26 -> variable_27 >= variable_59 && variable_26 -> variable_31 [ 0 ] == 0 variable_51 && variable_26 -> variable_31 [ 1 ] == 0 variable_52 && variable_26 -> variable_31 [ 2 ] == 0 variable_60 && variable_26 -> variable_31 [ 3 ] == 0 variable_61 ) variable_15 -> variable_62 = 1 ; variable_15 -> variable_63 = min ( variable_26 -> variable_27 + 2 , variable_56 ) ; variable_11 += variable_26 -> variable_27 + 2 ;
