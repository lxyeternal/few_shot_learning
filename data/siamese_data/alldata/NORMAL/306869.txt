 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;
 static unsigned long func_0 ( const APP_INFO * variable_0 ) char * variable_1 [ 84 ] = { 0 } ; char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_2 != 0 ) variable_1 [ 13 ] = variable_2 ; func_3 ( 1 , variable_1 ) ; void func_4 ( int variable_4 , . . . ) int variable_5 = 0 ; int variable_6 ; char * variable_7 = " new test input " ; const int variable_8 = 16 ; char * * variable_9 = 0 ; if ( variable_4 > 0 ) variable_9 = ( va_arg ( variable_10 , char * * ) ) variable_11 = ( ( char * ) variable_9 [ 13 ] ) ; int variable_12 ; char variable_13 [ variable_8 ] ; variable_14 = malloc ( sizeof ( char ) * 64 ) ; variable_15 = malloc ( sizeof ( char * ) ) ; * variable_15 = variable_14 ; memset ( variable_13 , 0 , 16 ) ; memset ( variable_14 , ' a ' , 64 ) ; variable_14 [ 63 ] = 0 ; variable_12 = func_5 ( variable_11 , 0 ) ; if ( variable_12 > - 1 ) strncpy ( variable_14 , variable_13 , variable_8 ) ; strcat ( variable_14 , variable_7 ) ; variable_6 = strlen ( * variable_15 ) ; for ( ; variable_5 < variable_6 ; ++ variable_5 ) variable_14 [ variable_5 ] = func_6 ( variable_14 [ variable_5 ] ) ; int func_7 ( int variable_16 ) if ( variable_16 >= 97 && variable_16 <= 122 ) return variable_16 - 32 ; return variable_16 ; if ( variable_14 != 0 ) free ( variable_14 ) ;
 static void func_0 ( ) TransactionState variable_0 = variable_1 ; int variable_2 ; variable_2 = variable_0 -> variable_3 -> variable_4 + variable_0 -> variable_4 + 1 ; if ( variable_0 -> variable_3 -> variable_5 < variable_2 ) int variable_6 ; variable_7 * variable_8 ; variable_6 = ( variable_2 * 2 < ( ( int ) ( ( ( variable_9 ) 0 variable_10 ) / sizeof ( variable_7 ) ) ) ? variable_2 * 2 : ( ( int ) ( ( ( variable_9 ) 0 variable_10 ) / sizeof ( variable_7 ) ) ) ) ; if ( variable_0 -> variable_3 -> variable_11 == ( ( void * ) 0 ) ) variable_8 = ( func_1 ( variable_12 , variable_6 * sizeof ( variable_7 ) ) ) ; variable_8 = ( func_2 ( ( variable_0 -> variable_3 -> variable_11 ) , variable_6 * sizeof ( variable_7 ) ) ) ; variable_0 -> variable_3 -> variable_11 = variable_8 ; variable_0 -> variable_3 -> variable_5 = variable_6 ; variable_0 -> variable_3 -> variable_11 [ variable_0 -> variable_3 -> variable_4 ] = variable_0 -> variable_13 ; if ( variable_0 -> variable_4 > 0 ) memcpy ( ( & variable_0 -> variable_3 -> variable_11 [ variable_0 -> variable_3 -> variable_4 + 1 ] ) , ( variable_0 -> variable_11 ) , ( variable_0 -> variable_4 ) * sizeof ( variable_7 ) ) ; variable_0 -> variable_3 -> variable_4 = variable_2 ; if ( variable_0 -> variable_11 != ( ( void * ) 0 ) ) func_3 ( ( variable_0 -> variable_11 ) ) ; variable_0 -> variable_11 = ( ( void * ) 0 ) ; variable_0 -> variable_4 = 0 ; variable_0 -> variable_5 = 0 ;
