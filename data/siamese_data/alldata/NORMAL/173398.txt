 static void func_0 ( ) switch ( 5 ) char variable_0 [ 100 ] = " " ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) variable_0 + variable_4 , ( int ) ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_2 ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_21 ) if ( variable_21 != NULL ) printf ( " %s \n " , variable_21 ) ;
 const EVP_CIPHER * func_0 ( ) int variable_0 = 7 ; char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = & variable_1 ; func_3 ( variable_0 , variable_3 ) ; void func_4 ( int variable_4 , char * * variable_5 ) variable_4 -- ; if ( variable_4 > 0 ) func_5 ( variable_4 , variable_5 ) ; void func_6 ( int variable_4 , char * * variable_5 ) variable_4 -- ; if ( variable_4 > 0 ) func_7 ( variable_4 , variable_5 ) ; void func_8 ( int variable_4 , char * * variable_5 ) int variable_6 = 0 ; variable_4 -- ; if ( variable_4 > 0 ) variable_7 = ( ( char * ) ( * variable_5 ) ) ; while ( variable_6 < strlen ( variable_7 ) )
