 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; FILE * variable_2 ; HCRYPTPROV variable_3 = 0 ; HCRYPTHASH variable_4 = 0 ; HCRYPTKEY variable_5 = 0 ; char variable_6 [ 100 ] = variable_7 ; variable_2 = fopen ( " passwords . txt " , " r " ) ; if ( variable_2 != NULL ) variable_0 [ 0 ] = ' \0 ' ; BYTE variable_8 [ ( 100 - 1 ) * sizeof ( char ) ] ; DWORD variable_9 ; variable_9 = func_3 ( variable_8 , sizeof ( variable_8 ) , variable_0 ) ; size_t func_4 ( unsigned char * variable_10 , size_t variable_11 , const char * variable_12 ) size_t variable_13 = 0 ; while ( variable_13 < variable_11 && isxdigit ( variable_12 [ 2 * variable_13 ] ) && isxdigit ( variable_12 [ 2 * variable_13 + 1 ] ) ) int variable_14 ; variable_10 [ variable_13 ] = ( unsigned char ) variable_14 ; return variable_13 ; if ( ! func_5 ( & variable_3 , NULL , variable_15 , variable_16 , 0 ) ) if ( ! func_6 ( variable_3 , variable_17 , 0 , 0 , & variable_4 ) ) if ( ! func_7 ( variable_4 , ( BYTE * ) variable_6 , strlen ( variable_6 ) , 0 ) ) if ( ! func_8 ( variable_3 , variable_18 , variable_4 , 0 , & variable_5 ) ) if ( ! func_9 ( variable_5 , 0 , 1 , 0 , variable_8 , & variable_9 ) ) memcpy ( variable_0 , variable_8 , variable_9 ) ; variable_0 [ variable_9 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( func_10 ( ) ) int func_11 ( ) return ( rand ( ) % 2 ) ; char variable_6 [ 100 ] = variable_7 ; HCRYPTPROV variable_3 = 0 ; HCRYPTHASH variable_4 = 0 ; HCRYPTKEY variable_5 = 0 ; BYTE variable_8 [ ( 100 - 1 ) * sizeof ( char ) ] ; DWORD variable_9 ; variable_9 = func_12 ( variable_8 , sizeof ( variable_8 ) , variable_0 ) ; size_t func_13 ( unsigned char * variable_10 , size_t variable_11 , const char * variable_12 ) size_t variable_13 = 0 ; while ( variable_13 < variable_11 && isxdigit ( variable_12 [ 2 * variable_13 ] ) && isxdigit ( variable_12 [ 2 * variable_13 + 1 ] ) ) int variable_14 ; variable_10 [ variable_13 ] = ( unsigned char ) variable_14 ; return variable_13 ; if ( ! func_14 ( & variable_3 , NULL , variable_15 , variable_16 , 0 ) ) if ( ! func_15 ( variable_3 , variable_17 , 0 , 0 , & variable_4 ) ) if ( ! func_16 ( variable_4 , ( BYTE * ) variable_6 , strlen ( variable_6 ) , 0 ) ) if ( ! func_17 ( variable_3 , variable_18 , variable_4 , 0 , & variable_5 ) ) if ( ! func_18 ( variable_5 , 0 , 1 , 0 , variable_8 , & variable_9 ) ) memcpy ( variable_0 , variable_8 , variable_9 ) ; variable_0 [ variable_9 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( func_19 ( variable_19 , variable_20 , variable_0 , variable_21 , variable_22 , & variable_23 ) != 0 )
