 static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;
 void func_0 ( char * variable_0 ) char * variable_1 ; char * variable_2 = " nslookup " ; variable_3 = ( ( char * ) variable_0 ) ; if ( strlen ( variable_3 ) < 1000 - strlen ( variable_2 ) ) if ( func_1 ( variable_3 ) == 1 ) int func_2 ( char * variable_4 ) int variable_5 = 0 ; while ( variable_4 [ variable_5 ] != ' \0 ' ) if ( variable_4 [ variable_5 ] == ' ; ' ) if ( variable_5 == 0 || variable_4 [ variable_5 - 1 ] != ' \ \ ' ) return 0 ; if ( variable_4 [ variable_5 ] == ' | ' ) if ( variable_5 == 0 || variable_4 [ variable_5 - 1 ] != ' \ \ ' ) return 0 ; if ( variable_4 [ variable_5 ] == ' & ' ) if ( variable_5 == 0 || variable_4 [ variable_5 - 1 ] != ' \ \ ' ) return 0 ; variable_5 ++ ; return 1 ; variable_1 = malloc ( ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_3 , variable_1 ) ; void func_4 ( char * variable_4 , char * variable_6 ) while ( * variable_4 ) if ( ( * variable_4 == ' % ' ) && ( ( variable_7 = variable_4 [ 1 ] ) && ( variable_8 = variable_4 [ 2 ] ) ) && ( isxdigit ( variable_7 ) && isxdigit ( variable_8 ) ) ) if ( variable_7 >= ' a ' ) variable_7 -= ' a ' - ' A ' ; if ( variable_7 >= ' A ' ) variable_7 -= ( ' A ' - 10 ) ; variable_7 -= ' 0 ' ; if ( variable_8 >= ' a ' ) variable_8 -= ' a ' - ' A ' ; if ( variable_8 >= ' A ' ) variable_8 -= ( ' A ' - 10 ) ; variable_8 -= ' 0 ' ; * variable_6 ++ = 16 * variable_7 + variable_8 ; variable_4 += 3 ; * variable_6 ++ = * variable_4 ++ ; * variable_6 ++ = ' \0 ' ; snprintf ( variable_9 , 1000 , " %s %s " , variable_2 , variable_1 ) ; func_5 ( variable_10 , variable_11 , " stonesoup_command_buffer " , variable_9 , " CROSSOVER - STATE " ) ; variable_12 = func_6 ( variable_9 , " r " ) ; if ( variable_12 != 0 ) while ( fgets ( variable_13 , 100 , variable_12 ) != 0 ) func_7 ( variable_13 ) ; void func_8 ( char * variable_14 , . . . ) va_start ( variable_15 , variable_14 ) ; func_9 ( ( struct mg_connection * ) variable_16 , variable_14 , variable_15 ) ; func_10 ( variable_12 ) ;
