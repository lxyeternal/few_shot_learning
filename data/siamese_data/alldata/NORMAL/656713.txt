 void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ 250 ] = L " PATH = " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 250 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;
 void func_0 ( void ( * variable_0 ) ( struct sphagnaceae_axiate * ) ) int variable_1 = 0 ; FILE * variable_2 [ 10 ] ; char variable_3 [ 80 ] ; long variable_4 [ 10 ] ; struct sphagnaceae_axiate variable_5 [ 10 ] = { 0 } ; struct sphagnaceae_axiate variable_6 = { 0 } ; if ( variable_6 . variable_7 != 0 ) variable_5 [ 5 ] = variable_6 ; variable_4 [ 1 ] = 5 ; variable_8 = * ( variable_5 + variable_4 [ 1 ] ) ; variable_9 = ( ( char * ) variable_8 . variable_7 ) ; variable_10 = fopen ( variable_9 , " r " ) ; if ( variable_10 != 0 ) while ( fscanf ( variable_10 , " % 79s " , variable_3 ) == 1 && variable_1 < 1020 ) variable_11 = fopen ( variable_3 , " w " ) ; if ( variable_11 == 0 ) if ( variable_11 == 0 && variable_12 == 24 ) fputs ( " woohoo ! " , variable_11 ) ; fflush ( variable_11 ) ; variable_2 [ variable_1 % 10 ] = variable_11 ; variable_1 ++ ; func_1 ( variable_2 , ( ( variable_1 - 1 ) % 10 ) + 1 ) ; void func_2 ( FILE * * variable_13 , int variable_14 ) for ( variable_15 = 0 ; variable_15 < variable_14 ; variable_15 ++ ) if ( variable_13 [ variable_15 ] != 0 ) fclose ( variable_13 [ variable_15 ] ) ;
