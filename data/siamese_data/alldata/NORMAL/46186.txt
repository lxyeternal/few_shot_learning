 static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1
 static int func_0 ( ) int variable_0 ; variable_0 = func_1 ( ) ; static int func_2 ( ) int variable_0 = 0 ; int variable_1 ; int variable_2 ; variable_3 * variable_4 ; variable_5 * variable_6 ; variable_7 * variable_8 ; variable_9 * variable_10 ; char variable_11 [ 1024 ] ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) variable_13 * variable_14 = variable_15 [ variable_1 ] ; if ( variable_14 -> variable_16 ) for ( variable_2 = 0 ; variable_2 < variable_14 -> variable_17 ; variable_2 ++ ) variable_18 [ variable_2 + variable_14 -> variable_19 ] -> variable_20 = func_3 ( ) ; for ( variable_1 = 0 ; variable_1 < variable_21 ; variable_1 ++ ) variable_4 = variable_22 [ variable_1 ] -> variable_23 ; if ( ! variable_4 -> variable_17 && ! ( variable_4 -> variable_24 -> variable_25 & 0 variable_26 ) ) return - 22 ; for ( variable_1 = 0 ; variable_1 < variable_27 ; variable_1 ++ ) if ( ( variable_0 = func_4 ( variable_28 [ variable_1 ] -> variable_29 , ( ( void * ) 0 ) ) ) < 0 ) return variable_0 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_5 * variable_31 = ( ( void * ) 0 ) ; variable_8 = variable_32 [ variable_1 ] ; variable_4 = variable_22 [ variable_8 -> variable_33 ] -> variable_23 ; variable_10 = func_5 ( variable_8 ) ; static variable_9 * func_6 ( variable_7 * variable_8 ) if ( variable_8 -> variable_34 >= 0 ) return variable_18 [ variable_8 -> variable_34 ] ; return ( ( void * ) 0 ) ; if ( variable_8 -> variable_35 ) variable_6 = variable_8 -> variable_36 -> variable_6 ; if ( variable_10 ) variable_31 = variable_10 -> variable_36 -> variable_6 ; variable_8 -> variable_36 -> variable_37 = variable_10 -> variable_36 -> variable_37 ; variable_6 -> variable_38 = variable_31 -> variable_38 ; variable_6 -> variable_39 = variable_31 -> variable_39 ; if ( variable_8 -> variable_40 ) uint64_t variable_41 ; variable_41 = ( ( variable_42 ) ( variable_31 -> variable_43 ) ) + 16 ; if ( variable_41 > 2147483647 ) return - 22 ; variable_6 -> variable_44 = variable_31 -> variable_44 ; variable_6 -> variable_45 = variable_31 -> variable_45 ; if ( ! variable_6 -> variable_46 ) unsigned int variable_46 ; if ( ! variable_4 -> variable_24 -> variable_46 || ( func_7 ( variable_4 -> variable_24 -> variable_46 , variable_31 -> variable_46 ) ) == ( variable_6 -> variable_44 ) || ! func_8 ( variable_4 -> variable_24 -> variable_46 , variable_31 -> variable_44 , & variable_46 ) ) variable_6 -> variable_46 = variable_31 -> variable_46 ; variable_6 -> variable_47 = variable_31 -> variable_47 ; variable_6 -> variable_48 = variable_31 -> variable_48 ; variable_6 -> variable_49 = variable_31 -> variable_49 ; variable_6 -> variable_50 = variable_31 -> variable_50 ; variable_6 -> variable_51 = ( func_9 ( variable_41 ) ) ; if ( ! variable_6 -> variable_51 ) return - 12 ; memcpy ( ( variable_6 -> variable_51 ) , ( variable_31 -> variable_51 ) , ( variable_31 -> variable_43 ) ) ; variable_6 -> variable_43 = variable_31 -> variable_43 ; variable_6 -> variable_52 = variable_31 -> variable_52 ; variable_6 -> variable_53 = variable_10 -> variable_36 -> variable_53 ; if ( ! strcmp ( variable_4 -> variable_24 -> variable_54 , " avi " ) ) if ( variable_55 < 0 && func_10 ( variable_10 -> variable_36 -> variable_56 ) >= func_11 ( variable_10 -> variable_36 -> variable_57 ) && 0 . 5 / func_12 ( variable_10 -> variable_36 -> variable_56 ) > func_13 ( variable_10 -> variable_36 -> variable_53 ) && 0 . 5 / func_14 ( variable_10 -> variable_36 -> variable_56 ) > func_15 ( variable_31 -> variable_53 ) && func_16 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 && func_17 ( variable_31 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 2 ) variable_6 -> variable_53 . variable_58 = variable_10 -> variable_36 -> variable_56 . variable_59 ; variable_6 -> variable_53 . variable_59 = 2 * variable_10 -> variable_36 -> variable_56 . variable_58 ; variable_6 -> variable_60 = 2 ; if ( variable_55 < 0 && func_18 ( variable_31 -> variable_53 ) * ( variable_31 -> variable_60 ) > 2 * func_19 ( variable_10 -> variable_36 -> variable_53 ) && func_20 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 0 ) variable_6 -> variable_53 = variable_31 -> variable_53 ; variable_6 -> variable_53 . variable_58 *= variable_31 -> variable_60 ; variable_6 -> variable_53 . variable_59 *= 2 ; variable_6 -> variable_60 = 2 ; if ( ! ( variable_4 -> variable_24 -> variable_25 & 0002000 ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " mov " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " mp4 " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " 3 gp " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " 3 g2 " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " psp " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " ipod " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " f4v " ) ) if ( variable_55 < 0 && variable_31 -> variable_53 . variable_59 && func_21 ( variable_31 -> variable_53 ) * ( variable_31 -> variable_60 ) > func_22 ( variable_10 -> variable_36 -> variable_53 ) && func_23 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 0 ) variable_6 -> variable_53 = variable_31 -> variable_53 ; variable_6 -> variable_53 . variable_58 *= variable_31 -> variable_60 ; variable_6 -> variable_53 = variable_31 -> variable_53 ; if ( variable_8 -> variable_61 . variable_58 ) variable_6 -> variable_53 = func_24 ( variable_8 -> variable_61 ) ; switch ( variable_6 -> variable_45 ) variable_6 -> variable_62 = variable_31 -> variable_62 ; variable_6 -> variable_63 = variable_31 -> variable_63 ; variable_6 -> variable_64 = variable_31 -> variable_64 ; variable_6 -> variable_65 = variable_31 -> variable_65 ; variable_6 -> variable_66 = variable_31 -> variable_66 ; variable_6 -> variable_67 = variable_31 -> variable_67 ; if ( ( variable_6 -> variable_67 == 1 || variable_6 -> variable_67 == 1152 || variable_6 -> variable_67 == 576 ) && ( variable_6 -> variable_44 ) == variable_68 ) variable_6 -> variable_67 = 0 ; if ( ( variable_6 -> variable_44 ) == variable_69 ) variable_6 -> variable_67 = 0 ; variable_6 -> variable_70 = variable_31 -> variable_70 ; variable_6 -> variable_71 = variable_31 -> variable_71 ; variable_6 -> variable_72 = variable_31 -> variable_72 ; variable_6 -> variable_73 = variable_31 -> variable_73 ; if ( ! variable_6 -> variable_74 . variable_58 ) variable_6 -> variable_74 = variable_8 -> variable_36 -> variable_74 = ( variable_10 -> variable_36 -> variable_74 . variable_58 ? variable_10 -> variable_36 -> variable_74 : ( ( variable_10 -> variable_36 -> variable_6 -> variable_74 . variable_58 ? variable_10 -> variable_36 -> variable_6 -> variable_74 : ( ( variable_75 ) ( 0 ) , ( 1 ) ) ) ) ) variable_8 -> variable_36 -> variable_57 = variable_10 -> variable_36 -> variable_57 ; variable_6 -> variable_71 = variable_31 -> variable_71 ; variable_6 -> variable_72 = variable_31 -> variable_72 ; if ( ! variable_8 -> variable_76 ) variable_8 -> variable_76 = func_25 ( variable_6 -> variable_44 ) ; if ( ! variable_8 -> variable_76 ) variable_0 = - 22 ; if ( variable_10 ) variable_10 -> variable_77 ++ ; variable_8 -> variable_78 = 1 ; if ( ( variable_6 -> variable_45 ) == variable_79 ) if ( variable_8 -> variable_80 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = func_26 ( variable_8 -> variable_80 -> variable_80 ) ; if ( variable_10 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = variable_10 -> variable_81 ; if ( variable_10 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = ( variable_10 -> variable_36 -> variable_56 . variable_58 ? variable_10 -> variable_36 -> variable_56 : ( ( variable_75 ) ( 25 ) , ( 1 ) ) ) if ( variable_8 -> variable_76 && variable_8 -> variable_76 -> variable_82 && ! variable_8 -> variable_83 ) int variable_84 = func_27 ( variable_8 -> variable_61 , variable_8 -> variable_76 -> variable_82 ) ; variable_8 -> variable_61 = variable_8 -> variable_76 -> variable_82 [ variable_84 ] ; switch ( variable_6 -> variable_45 ) variable_6 -> variable_85 = ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_87 ) ; variable_6 -> variable_63 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_63 ; variable_6 -> variable_62 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_62 ; variable_6 -> variable_64 = func_28 ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] ) ; variable_6 -> variable_53 = ( ( variable_75 ) ( 1 ) , variable_6 -> variable_63 ) variable_6 -> variable_53 = func_29 ( variable_8 -> variable_61 ) ; if ( variable_8 -> variable_80 && ! ( variable_6 -> variable_53 . variable_58 && variable_6 -> variable_53 . variable_59 ) ) variable_6 -> variable_53 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_53 ; variable_6 -> variable_71 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_88 ; variable_6 -> variable_72 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_89 ; variable_6 -> variable_74 = variable_8 -> variable_36 -> variable_74 = ( variable_8 -> variable_90 ? func_30 ( ( variable_8 -> variable_90 * ( variable_6 -> variable_72 ) / ( variable_6 -> variable_71 ) ) , 255 ) : variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_74 ) ; variable_6 -> variable_70 = ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_87 ) ; if ( ! variable_31 || variable_6 -> variable_71 != variable_31 -> variable_71 || variable_6 -> variable_72 != variable_31 -> variable_72 || ( variable_6 -> variable_70 ) != ( variable_31 -> variable_70 ) ) variable_6 -> variable_38 = variable_91 ; if ( variable_8 -> variable_92 ) if ( ! strncmp ( ( variable_8 -> variable_92 ) , " expr : " , 5 ) ) variable_0 = func_31 ( & variable_8 -> variable_93 , ( variable_8 -> variable_92 + 5 ) , variable_94 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) , 0 , ( ( void * ) 0 ) ) ; if ( variable_0 < 0 ) return variable_0 ; variable_8 -> variable_95 [ variable_96 ] = 0 ; variable_8 -> variable_95 [ variable_97 ] = 0 ; variable_8 -> variable_95 [ variable_98 ] = ( func_32 ( " " ) ) ; variable_8 -> variable_95 [ variable_99 ] = ( func_33 ( " " ) ) ; variable_6 -> variable_53 = ( ( variable_75 ) ( 1 ) , ( 1000 ) ) if ( ! variable_6 -> variable_71 ) variable_6 -> variable_71 = variable_18 [ variable_8 -> variable_34 ] -> variable_36 -> variable_6 -> variable_71 ; variable_6 -> variable_72 = variable_18 [ variable_8 -> variable_34 ] -> variable_36 -> variable_6 -> variable_72 ; if ( variable_6 -> variable_25 & ( 0 variable_100 | 0002000 ) ) char variable_101 [ 1024 ] ; FILE * variable_102 ; snprintf ( variable_101 , sizeof ( variable_101 ) , " %s - %d . log " , ( variable_8 -> variable_103 ? variable_8 -> variable_103 : " ffmpeg2pass " ) , variable_1 ) ; if ( ! strcmp ( variable_8 -> variable_76 -> variable_54 , " libx264 " ) ) if ( variable_6 -> variable_25 & 0002000 ) char * variable_104 ; variable_6 -> variable_105 = variable_104 ; if ( variable_6 -> variable_25 & 0 variable_100 ) variable_102 = fopen ( variable_101 , " wb " ) ; variable_8 -> variable_106 = variable_102 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_8 = variable_32 [ variable_1 ] ; if ( variable_8 -> variable_78 ) variable_107 * variable_6 = variable_8 -> variable_76 ; variable_5 * variable_108 = ( ( void * ) 0 ) ; if ( variable_10 = func_34 ( variable_8 ) ) static variable_9 * func_35 ( variable_7 * variable_8 ) if ( variable_8 -> variable_34 >= 0 ) return variable_18 [ variable_8 -> variable_34 ] ; return ( ( void * ) 0 ) ; variable_108 = variable_10 -> variable_36 -> variable_6 ; if ( variable_108 && variable_108 -> variable_109 ) variable_8 -> variable_36 -> variable_6 -> variable_109 = ( func_36 ( ( variable_108 -> variable_110 + 1 ) ) ) ; if ( ! variable_8 -> variable_36 -> variable_6 -> variable_109 ) variable_0 = - 12 ; memcpy ( ( variable_8 -> variable_36 -> variable_6 -> variable_109 ) , ( variable_108 -> variable_109 ) , ( variable_108 -> variable_110 ) ) ; variable_8 -> variable_36 -> variable_6 -> variable_110 = variable_108 -> variable_110 ; if ( ( variable_0 = func_37 ( variable_8 -> variable_36 -> variable_6 , variable_6 , & variable_8 -> variable_111 ) ) < 0 ) for ( variable_1 = 0 ; variable_1 < variable_112 ; variable_1 ++ ) if ( ( variable_0 = func_38 ( variable_1 , variable_11 , ( sizeof ( variable_11 ) ) ) ) < 0 ) static int func_39 ( int variable_19 , char * variable_11 , int variable_113 ) int variable_0 ; variable_9 * variable_10 = variable_18 [ variable_19 ] ; if ( variable_10 -> variable_77 ) variable_107 * variable_6 = variable_10 -> variable_108 ; if ( ! variable_6 ) return - 22 ; variable_10 -> variable_114 = variable_6 -> variable_115 & 0000002 && ! ( ' 6 ' < 56 && variable_116 ) ; if ( ( variable_6 -> variable_117 ) == variable_79 && variable_10 -> variable_114 ) variable_10 -> variable_36 -> variable_6 -> variable_118 = variable_119 ; variable_10 -> variable_36 -> variable_6 -> variable_120 = variable_121 ; variable_10 -> variable_36 -> variable_6 -> variable_122 = ( & variable_10 -> variable_123 ) ; if ( ( variable_0 = func_40 ( variable_10 -> variable_36 -> variable_6 , variable_6 , & variable_10 -> variable_111 ) ) < 0 ) return variable_0 ; return 0 ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) for ( variable_1 = 0 ; variable_1 < variable_21 ; variable_1 ++ ) variable_4 = variable_22 [ variable_1 ] -> variable_23 ; variable_4 -> variable_124 = variable_125 ; if ( ( variable_0 = func_41 ( variable_4 , & variable_22 [ variable_1 ] -> variable_111 ) ) < 0 ) variable_0 = - 22 ; if ( variable_0 ) return variable_0 ; return 0 ; if ( variable_0 < 0 ) if ( ( variable_0 = func_42 ( ) ) < 0 ) static int func_43 ( ) int variable_1 ; int variable_0 ; if ( variable_12 == 1 ) return 0 ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) variable_13 * variable_102 = variable_15 [ variable_1 ] ; if ( ! ( variable_102 -> variable_126 = func_44 ( ( 8 * sizeof ( variable_127 ) ) ) ) ) return - 12 ; if ( variable_0 = func_45 ( & variable_102 -> variable_128 , ( ( void * ) 0 ) , variable_129 , variable_102 ) ) return - variable_0 ; return 0 ; while ( ! variable_130 ) int64_t variable_131 = func_46 ( ) ; if ( variable_132 ) if ( func_47 ( variable_131 ) < 0 ) if ( ! func_48 ( ) ) static int func_49 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; variable_133 * variable_134 = variable_22 [ variable_8 -> variable_33 ] ; variable_3 * variable_135 = variable_22 [ variable_8 -> variable_33 ] -> variable_23 ; if ( variable_8 -> variable_136 || variable_135 -> variable_137 && ( func_50 ( variable_135 -> variable_137 ) ) >= variable_134 -> variable_138 ) if ( ( variable_8 -> variable_139 ) >= variable_8 -> variable_140 ) return 1 ; return 0 ; variable_0 = func_51 ( ) ; static int func_52 ( ) variable_7 * variable_8 ; variable_9 * variable_10 ; int variable_0 ; variable_8 = func_53 ( ) ; static variable_7 * func_54 ( ) int variable_1 ; int64_t variable_141 = 9223372036854775807L ; variable_7 * variable_142 = ( ( void * ) 0 ) ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; int64_t variable_111 = func_55 ( variable_8 -> variable_36 -> variable_143 , variable_8 -> variable_36 -> variable_53 , ( ( variable_75 ) ( 1 ) , ( 1000000 ) ) ) if ( ! variable_8 -> variable_144 && ! variable_8 -> variable_136 && variable_111 < variable_141 ) variable_141 = variable_111 ; variable_142 = variable_8 ; return variable_142 ; if ( ! variable_8 ) if ( func_56 ( ) ) static int func_57 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) if ( variable_32 [ variable_1 ] -> variable_144 ) return 1 ; return 0 ; return 0 ; return - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ; if ( variable_8 -> variable_80 ) if ( ( variable_0 = func_58 ( variable_8 -> variable_80 -> variable_29 , & variable_10 ) ) < 0 ) static int func_59 ( variable_145 * variable_29 , variable_9 * * variable_146 ) int variable_0 ; variable_0 = func_60 ( variable_29 -> variable_29 ) ; if ( variable_0 >= 0 ) return func_61 ( ) ; static int func_62 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_63 ( ) ) ) return - 12 ; return 0 ; if ( variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) variable_0 = func_64 ( ) ; static int func_65 ( ) int variable_1 ; variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_66 ( ) ) ) return - 12 ; return 0 ; return variable_0 ; if ( variable_0 != - 11 ) return variable_0 ; return 0 ; return variable_0 ; if ( ! variable_10 ) return 0 ; variable_10 = variable_18 [ variable_8 -> variable_34 ] ; variable_0 = func_67 ( variable_10 -> variable_33 ) ; static int func_68 ( int variable_33 ) variable_13 * variable_14 = variable_15 [ variable_33 ] ; int variable_0 ; variable_0 = func_69 ( variable_14 , & variable_148 ) ; static int func_70 ( variable_13 * variable_102 , variable_127 * variable_148 ) if ( variable_12 > 1 ) return func_71 ( variable_102 , variable_148 ) ; static int func_72 ( variable_13 * variable_102 , variable_127 * variable_148 ) int variable_0 = 0 ; if ( func_73 ( variable_102 -> variable_126 ) ) if ( variable_102 -> variable_136 ) variable_0 = - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ; variable_0 = - 11 ; return variable_0 ; return func_74 ( variable_102 -> variable_23 , variable_148 ) ; if ( variable_0 == - 11 ) return variable_0 ; if ( variable_0 < 0 ) return - 11 ; return 0 ; if ( variable_0 == - 11 ) return 0 ; if ( variable_0 < 0 ) return variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ? 0 : variable_0 ; return func_75 ( ) ; static int func_76 ( ) int variable_1 ; variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_77 ( ) ) ) return - 12 ; return 0 ; if ( variable_0 < 0 ) if ( variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) || variable_0 == - 11 ) static int func_78 ( int64_t variable_131 ) int variable_1 ; int variable_0 ; int variable_149 ; static int64_t variable_150 ; if ( variable_151 ) if ( variable_131 - variable_150 >= 100000 && ! variable_152 ) variable_149 = func_79 ( ) ; static int func_80 ( ) unsigned char variable_153 ; struct timeval variable_154 ; fd_set variable_155 ; ( & variable_155 ) -> variable_156 [ 0 / ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ] |= ( ( variable_157 ) 1 ) << 0 % ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ; variable_154 . variable_158 = 0 ; variable_154 . variable_159 = 0 ; variable_160 = func_81 ( 1 , & variable_155 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , & variable_154 ) ; if ( variable_160 > 0 ) variable_160 = ( func_82 ( 0 , ( & variable_153 ) , 1 ) ) ; if ( variable_160 == 1 ) return variable_153 ; return variable_160 ; return - 1 ; variable_149 = - 1 ; if ( variable_149 == ' q ' ) if ( variable_149 == ' c ' || variable_149 == ' C ' ) char variable_161 [ 4096 ] ; char variable_162 [ 64 ] ; char variable_163 [ 256 ] ; char variable_164 [ 256 ] = { ( 0 ) } ; double variable_165 ; int variable_166 ; fprintf ( variable_167 , " \n Enter command : < target > < time > < command > [ < argument > ] \n " ) ; variable_1 = 0 ; while ( ( variable_166 = func_83 ( ) ) != 10 && variable_166 != ' \r ' && variable_1 < sizeof ( variable_161 ) - 1 ) static int func_84 ( ) unsigned char variable_153 ; struct timeval variable_154 ; fd_set variable_155 ; ( & variable_155 ) -> variable_156 [ 0 / ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ] |= ( ( variable_157 ) 1 ) << 0 % ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ; variable_154 . variable_158 = 0 ; variable_154 . variable_159 = 0 ; variable_160 = func_85 ( 1 , & variable_155 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , & variable_154 ) ; if ( variable_160 > 0 ) variable_160 = ( func_86 ( 0 , ( & variable_153 ) , 1 ) ) ; if ( variable_160 == 1 ) return variable_153 ; return variable_160 ; return - 1 ; if ( variable_166 > 0 ) variable_161 [ variable_1 ++ ] = variable_166 ; variable_161 [ variable_1 ] = 0 ; if ( variable_166 > 0 && ( variable_160 = sscanf ( variable_161 , " % 63 [ ^ ] % lf % 255 [ ^ ] % 255 [ ^ \n ] " , variable_162 , & variable_165 , variable_163 , variable_164 ) ) >= 3 ) for ( variable_1 = 0 ; variable_1 < variable_27 ; variable_1 ++ ) variable_145 * variable_168 = variable_28 [ variable_1 ] ; if ( variable_168 -> variable_29 ) if ( variable_165 < 0 ) variable_0 = func_87 ( variable_168 -> variable_29 , variable_162 , variable_163 , variable_164 , variable_161 , ( sizeof ( variable_161 ) ) , ( variable_149 == ' c ' ? 1 : 0 ) ) ; fprintf ( variable_167 , " Command reply for stream %d : ret : %d res : %s \n " , variable_1 , variable_0 , variable_161 ) ; if ( variable_149 == 100 || variable_149 == ' D ' ) int variable_169 = 0 ; if ( variable_149 == ' D ' ) variable_169 = variable_18 [ 0 ] -> variable_36 -> variable_6 -> variable_169 << 1 ; if ( ! variable_169 ) variable_169 = 1 ; while ( variable_169 & ( 0000100 | 0 variable_170 | 0 variable_171 ) ) variable_169 += variable_169 ; if ( scanf ( " %d " , & variable_169 ) != 1 ) fprintf ( variable_167 , " error parsing debug value \n " ) ; fprintf ( variable_167 , " debug = %d \n " , variable_169 ) ; if ( variable_149 == 63 ) fprintf ( variable_167 , " key function \n ? show this help \n + increase verbosity \n - decrease verbosity \n c Send command to filtergraph \n D cycle through available debug modes \n h dump packets / hex press to cycle through the 3  states \n q quit \n s Show QP histogram \n " ) ;
 variable_1 / * variable_2 - 8 ! variable_3 / * variable_2 - 8 ! const char * * variable_4 , const char / * variable_2 - 8 ! const char / * variable_2 - 8 ! const svn_string_t * variable_5 , const char * variable_6 , variable_7 * variable_8 , svn_boolean_t variable_9 , const char * variable_10 , variable_11 * variable_12 ) const char * variable_13 ; const char * variable_14 ; variable_15 * variable_16 ; const char * variable_17 ; const char * variable_18 ; const char * variable_19 ; const char * variable_20 ; variable_3 * variable_21 ; apr_status_t variable_22 ; apr_status_t variable_23 ; int variable_24 ; variable_0 * variable_25 = func_0 ( & variable_13 , variable_26 , variable_8 ) ; static variable_0 * func_1 ( const char * * variable_13 , const char * variable_26 , variable_7 * variable_8 ) const char * variable_27 ; variable_27 = variable_26 ; if ( ! variable_27 ) variable_27 = ( getenv ( " SVN_EDITOR " ) ) ; if ( ! variable_27 ) variable_27 = ( getenv ( " VISUAL " ) ) ; if ( ! variable_27 ) variable_27 = ( getenv ( " EDITOR " ) ) ; if ( ! variable_27 ) variable_27 = " / usr / bin / vi " ; if ( variable_27 ) const char * variable_28 ; for ( variable_28 = variable_27 ; * variable_28 ; variable_28 ++ ) if ( ! ( 0 != ( variable_29 [ ( unsigned char ) ( * variable_28 ) ] & 0 variable_30 ) ) ) if ( ! ( * variable_28 ) ) return func_2 ( variable_31 , ( ( void * ) 0 ) , ( func_3 ( " subversion " , " The EDITOR , SVN_EDITOR or VISUAL environment variable or ' editor - cmd ' run - time configuration option is empty or consists solely of whitespace . Expected a shell command . " ) ) ) ; return func_4 ( variable_31 , ( ( void * ) 0 ) , ( func_5 ( " subversion " , " None of the environment variables SVN_EDITOR , VISUAL or EDITOR are set , and no ' editor - cmd ' run - time configuration option was found " ) ) ) ; return 0 ; if ( variable_25 ) while ( 0 ) if ( variable_9 ) const char * variable_32 ; variable_0 * variable_25 = func_6 ( variable_5 -> variable_33 , & variable_32 , " \n " , 0 , ( ( void * ) 0 ) , 0 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_21 = func_7 ( variable_12 ) ; if ( variable_10 ) variable_0 * variable_25 = func_8 ( & variable_21 -> variable_33 , variable_32 , variable_10 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_0 * variable_25 = func_9 ( & variable_21 -> variable_33 , variable_32 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_21 -> variable_34 = strlen ( variable_21 -> variable_33 ) ; variable_21 = func_10 ( variable_5 , variable_12 ) ; variable_22 = func_11 ( & variable_35 , 0 variable_36 , variable_12 ) ; if ( variable_22 ) if ( variable_37 [ 0 ] == ' \0 ' ) variable_20 = " . " ; variable_0 * variable_25 = func_12 ( & variable_20 , variable_37 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_22 = func_13 ( variable_20 , variable_12 ) ; if ( variable_22 ) variable_38 = func_14 ( & variable_16 , & variable_17 , " " , variable_6 , " . tmp " , variable_39 , variable_12 , variable_12 ) ; if ( variable_38 && ( variable_38 -> variable_22 == 13 || variable_38 -> variable_22 == 30 ) ) const char * variable_40 ; variable_0 * variable_25 = func_15 ( & variable_37 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_0 * variable_25 = func_16 ( & variable_40 , variable_37 , variable_12 ) ; if ( variable_25 ) while ( 0 ) variable_22 = func_17 ( variable_40 , variable_12 ) ; if ( variable_22 ) variable_38 = func_18 ( & variable_16 , & variable_17 , " " , variable_6 , " . tmp " , variable_39 , variable_12 , variable_12 ) ; if ( variable_38 ) variable_22 = func_19 ( variable_16 , ( variable_21 -> variable_33 ) , variable_21 -> variable_34 , & variable_41 ) ; variable_23 = func_20 ( variable_16 ) ; if ( ! variable_22 ) variable_22 = variable_23 ; if ( variable_22 ) variable_38 = func_21 ( & variable_19 , variable_17 , variable_12 ) ; if ( variable_38 ) variable_22 = func_22 ( & variable_42 , variable_19 , 0 variable_36 , variable_12 ) ; if ( variable_22 ) variable_22 = func_23 ( & variable_42 , variable_19 , 0 variable_43 | 0 variable_44 , variable_12 ) ; if ( variable_22 ) variable_38 = func_24 ( & variable_18 , variable_17 , variable_12 ) ; if ( variable_38 ) variable_14 = ( func_25 ( variable_12 , " %s %s " , variable_13 , variable_18 ) ) ; variable_24 = system ( variable_14 ) ; if ( variable_24 != 0 ) variable_38 = func_26 ( variable_45 , ( ( void * ) 0 ) , ( func_27 ( " subversion " , " system ( ' %s ' ) returned %d " ) ) , variable_14 , variable_24 ) ; if ( ! variable_38 && variable_46 ) return variable_38 ;
