 static void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = strtoul ( variable_5 , NULL , 0 ) ; while ( 0 ) if ( variable_20 ) wchar_t * variable_21 ; if ( variable_0 > wcslen ( variable_22 ) && variable_0 < 100 ) variable_21 = ( wchar_t * ) malloc ( variable_0 * sizeof ( wchar_t ) ) ; wcscpy ( variable_21 , variable_22 ) ; func_7 ( variable_21 ) ; void func_8 ( const wchar_t * variable_23 ) if ( variable_23 != NULL ) wprintf ( L " % ls \n " , variable_23 ) free ( variable_21 ) ;
 variable_0 * func_0 ( const char * * variable_1 , variable_2 * * variable_3 , const apr_array_header_t * variable_4 , svn_boolean_t variable_5 , variable_6 * variable_7 , variable_6 * variable_8 ) int variable_9 ; if ( variable_4 -> variable_10 <= 0 ) * variable_1 = func_1 ( ( ( const char * * ) ( variable_4 -> variable_11 ) ) [ 0 ] , variable_8 ) ; const char * func_2 ( const char * variable_12 , variable_6 * variable_13 ) return func_3 ( variable_14 , variable_12 , variable_13 ) ; static const char * func_4 ( path_type_t variable_15 , const char * variable_16 , variable_6 * variable_13 ) char * variable_17 ; char * variable_18 ; const char * variable_19 ; apr_size_t variable_20 ; apr_size_t variable_21 = 0 ; apr_size_t variable_22 = 0 ; svn_boolean_t variable_23 = 0 ; char * variable_24 = ( ( void * ) 0 ) ; if ( variable_16 [ 0 ] == ' \0 ' ) return " " ; variable_18 = variable_17 = ( memset ( func_5 ( variable_13 , strlen ( variable_16 ) + 1 ) , 0 , strlen ( variable_16 ) + 1 ) ) ; variable_19 = variable_16 ; if ( variable_15 == variable_14 ) while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != ' : ' ) variable_19 ++ ; if ( ( * variable_19 ) == ' : ' && ( * ( variable_19 + 1 ) ) == 47 && ( * ( variable_19 + 2 ) ) == 47 ) const char * variable_25 ; variable_23 = ! 0 ; variable_19 = variable_16 ; while ( ( * variable_19 ) != ' : ' ) * ( variable_18 ++ ) = func_6 ( * ( variable_19 ++ ) ) ; static char func_7 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; variable_21 ++ ; * ( variable_18 ++ ) = ' : ' ; * ( variable_18 ++ ) = 47 ; * ( variable_18 ++ ) = 47 ; variable_19 += 3 ; variable_21 += 3 ; variable_25 = variable_19 ; while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != 64 ) variable_19 ++ ; if ( ( * variable_19 ) == 64 ) variable_20 = ( variable_19 - variable_25 + 1 ) ; memcpy ( variable_18 , variable_25 , variable_20 ) ; variable_18 += variable_20 ; variable_19 ++ ; variable_19 = variable_25 ; if ( ( * variable_19 ) == ' [ ' ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( ( * variable_19 ) == ' : ' || ( * variable_19 ) >= 48 && ( * variable_19 ) <= ' 9 ' || ( * variable_19 ) >= ' a ' && ( * variable_19 ) <= ' f ' || ( * variable_19 ) >= 65 && ( * variable_19 ) <= ' F ' ) * ( variable_18 ++ ) = func_8 ( * ( variable_19 ++ ) ) ; static char func_9 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; if ( ( * variable_19 ) == ' ] ' ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( * variable_19 && ( * variable_19 ) != 47 && ( * variable_19 ) != ' : ' ) * ( variable_18 ++ ) = func_10 ( * ( variable_19 ++ ) ) ; static char func_11 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; if ( ( * variable_19 ) == ' : ' ) if ( variable_19 [ 1 ] == 56 && variable_19 [ 2 ] == 48 && ( variable_19 [ 3 ] == 47 || ! variable_19 [ 3 ] ) && ! strncmp ( variable_17 , " http : " , 5 ) ) variable_19 += 3 ; if ( variable_19 [ 1 ] == 52 && variable_19 [ 2 ] == 52 && variable_19 [ 3 ] == 51 && ( variable_19 [ 4 ] == 47 || ! variable_19 [ 4 ] ) && ! strncmp ( variable_17 , " https : " , 6 ) ) variable_19 += 4 ; if ( variable_19 [ 1 ] == 51 && variable_19 [ 2 ] == ' 6 ' && variable_19 [ 3 ] == ' 9 ' && variable_19 [ 4 ] == 48 && ( variable_19 [ 5 ] == 47 || ! variable_19 [ 5 ] ) && ! strncmp ( variable_17 , " svn : " , 4 ) ) variable_19 += 5 ; if ( variable_19 [ 1 ] == 47 || ! variable_19 [ 1 ] ) variable_19 += 1 ; while ( * variable_19 && ( * variable_19 ) != 47 ) * ( variable_18 ++ ) = func_12 ( * ( variable_19 ++ ) ) ; static char func_13 ( char variable_26 ) if ( variable_26 < 65 || variable_26 > ' Z ' ) return variable_26 ; return ( char ) ( variable_26 - 65 + ' a ' ) ; * variable_18 = * variable_19 ; if ( * variable_19 ) variable_19 ++ ; variable_18 ++ ; variable_24 = variable_18 ; variable_22 = 1 ; if ( ! variable_23 && variable_15 != variable_27 ) variable_19 = variable_16 ; if ( ( * variable_19 ) == 47 ) * ( variable_18 ++ ) = * ( variable_19 ++ ) ; while ( * variable_19 ) const char * variable_28 = variable_19 ; apr_size_t variable_29 = 0 ; if ( variable_28 [ 0 ] == 47 ) variable_29 = 1 ; if ( variable_15 == variable_14 && variable_28 [ 0 ] == 37 ) variable_29 = 3 ; variable_20 = ( variable_28 - variable_19 ) ; if ( variable_20 == 0 || variable_20 == 1 && variable_19 [ 0 ] == 46 || variable_15 == variable_14 && variable_20 == 3 && variable_19 [ 0 ] == 37 && variable_19 [ 1 ] == 50 && ( func_14 ( variable_19 [ 2 ] ) ) == '  E ' ) static char func_15 ( char variable_26 ) if ( variable_26 < ' a ' || variable_26 > ' z ' ) return variable_26 ; return ( char ) ( variable_26 - ' a ' + 65 ) ; memcpy ( variable_18 , variable_19 , variable_20 ) ; variable_18 += variable_20 ; if ( variable_29 ) * ( variable_18 ++ ) = 47 ; variable_22 ++ ; variable_19 = variable_28 + variable_29 ; if ( variable_22 > 0 && ( * ( variable_18 - 1 ) ) == 47 && ! ( variable_23 && variable_16 [ variable_21 ] == ' \0 ' ) ) variable_18 -- ; * variable_18 = ' \0 ' ; if ( variable_24 ) int variable_30 = 0 ; variable_19 = variable_24 ; while ( * variable_19 ) switch ( * variable_19 ) if ( ! ( 0 != ( variable_31 [ ( unsigned char ) ( * ( variable_19 + 1 ) ) ] & ( 0 variable_32 | 0 variable_33 ) ) ) || ! ( 0 != ( variable_31 [ ( unsigned char ) ( * ( variable_19 + 2 ) ) ] & ( 0 variable_32 | 0 variable_33 ) ) ) ) variable_30 += 2 ; variable_19 += 2 ; if ( ! variable_34 [ ( unsigned char ) ( * variable_19 ) ] ) variable_30 += 2 ; variable_19 ++ ; if ( variable_30 > 0 ) apr_size_t variable_35 = ( variable_36 ) ( variable_24 - variable_17 ) ; variable_18 = ( func_16 ( variable_13 , ( ( variable_36 ) ( variable_19 - variable_17 ) ) + variable_30 + 1 ) ) ; memcpy ( variable_18 , variable_17 , variable_35 ) ; variable_17 = variable_18 ; return variable_17 ; if ( variable_4 -> variable_10 == 1 ) for ( variable_9 = 1 ; variable_9 < variable_4 -> variable_10 ; ++ variable_9 ) const char * variable_12 = func_17 ( ( ( const char * * ) ( variable_4 -> variable_11 ) ) [ variable_9 ] , variable_8 ) ; const char * func_18 ( const char * variable_12 , variable_6 * variable_13 ) return func_19 ( variable_14 , variable_12 , variable_13 ) ; if ( ( * ( * variable_1 ) ) != ' \0 ' ) * variable_1 = ( func_20 ( * variable_1 , variable_12 , variable_8 ) ) ; char * func_21 ( const char * variable_37 , const char * variable_38 , variable_6 * variable_13 ) apr_size_t variable_39 ; apr_size_t variable_9 = 0 ; while ( 1 ) if ( variable_37 [ variable_9 ] != variable_38 [ variable_9 ] ) return ( func_22 ( variable_13 , " " , sizeof ( " " ) ) ) ; if ( variable_37 [ variable_9 ] == ' : ' ) variable_9 ++ ; variable_9 += 3 ; variable_39 = func_23 ( variable_14 , variable_37 + variable_9 , variable_38 + variable_9 , variable_13 ) ; static apr_size_t func_24 ( path_type_t variable_40 , const char * variable_41 , const char * variable_42 , variable_6 * variable_13 ) apr_size_t variable_43 ; apr_size_t variable_44 ; apr_size_t variable_9 = 0 ; apr_size_t variable_45 = 0 ; variable_43 = strlen ( variable_41 ) ; variable_44 = strlen ( variable_42 ) ; if ( variable_41 [ 0 ] == ' \0 ' || variable_42 [ 0 ] == ' \0 ' ) return 0 ; while ( variable_41 [ variable_9 ] == variable_42 [ variable_9 ] ) if ( variable_41 [ variable_9 ] == 47 ) variable_45 = variable_9 ; variable_9 ++ ; if ( variable_9 == variable_43 || variable_9 == variable_44 ) if ( variable_9 == 1 && variable_41 [ 0 ] == 47 && variable_42 [ 0 ] == 47 ) return 1 ; if ( variable_40 == variable_46 && variable_9 == 0 ) return 0 ; if ( variable_9 == variable_43 && variable_42 [ variable_9 ] == 47 || variable_9 == variable_44 && variable_41 [ variable_9 ] == 47 || variable_9 == variable_43 && variable_9 == variable_44 ) return variable_9 ; if ( variable_45 == 0 && variable_41 [ 0 ] == 47 && variable_42 [ 0 ] == 47 ) return 1 ; return variable_45 ; if ( variable_39 == 0 || variable_39 == 1 && ( variable_37 + variable_9 ) [ 0 ] == 47 ) return ( func_25 ( variable_13 , " " , sizeof ( " " ) ) ) ; return func_26 ( variable_13 , variable_37 , variable_39 + variable_9 ) ; * variable_1 = ( func_27 ( variable_7 , * variable_1 ) ) ; if ( variable_3 != ( ( void * ) 0 ) ) size_t variable_47 ; variable_47 = strlen ( * variable_1 ) ; if ( variable_47 > 0 ) variable_48 += variable_47 ; if ( variable_48 [ 0 ] == 47 || variable_48 [ 0 ] && ! func_28 ( * variable_1 , variable_47 ) ) svn_boolean_t func_29 ( const char * variable_12 , apr_size_t variable_49 ) func_30 ( variable_12 , ( ( void * ) 0 ) ) ? ( ( void ) 0 ) : func_31 ( " svn_uri_is_canonical ( uri , ( ( void * ) 0 ) ) " , "  dirent_uri . c " , 958 , variable_50 ) ; svn_boolean_t func_32 ( const char * variable_12 , variable_6 * variable_8 ) const char * variable_51 = variable_12 ; const char * variable_25 = variable_12 ; if ( ( * variable_12 ) == ' \0 ' ) if ( ! func_33 ( variable_12 ) ) while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != ' : ' ) variable_51 ++ ; if ( ! ( ( * variable_51 ) == ' : ' && ( * ( variable_51 + 1 ) ) == 47 && ( * ( variable_51 + 2 ) ) == 47 ) ) variable_51 = variable_12 ; while ( ( * variable_51 ) != ' : ' ) if ( ( * variable_51 ) >= 65 && ( * variable_51 ) <= ' Z ' ) variable_51 ++ ; variable_51 += 3 ; if ( ! ( * variable_51 ) ) variable_25 = variable_51 ; while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != 64 ) variable_51 ++ ; if ( ( * variable_51 ) == 64 ) variable_25 = variable_51 + 1 ; variable_51 = variable_25 ; if ( ( * variable_51 ) == ' [ ' ) variable_51 ++ ; while ( ( * variable_51 ) == ' : ' || ( * variable_51 ) >= 48 && ( * variable_51 ) <= ' 9 ' || ( * variable_51 ) >= ' a ' && ( * variable_51 ) <= ' f ' ) variable_51 ++ ; if ( ( * variable_51 ) != ' ] ' ) variable_51 ++ ; while ( * variable_51 && ( * variable_51 ) != 47 && ( * variable_51 ) != ' : ' ) if ( ( * variable_51 ) >= 65 && ( * variable_51 ) <= ' Z ' ) variable_51 ++ ; if ( ( * variable_51 ) == ' : ' ) variable_51 ++ ; variable_24 = variable_51 ; while ( ( * variable_51 ) >= 48 && ( * variable_51 ) <= ' 9 ' ) variable_52 = 10 * variable_52 + ( ( * variable_51 ) - 48 ) ; variable_51 ++ ; if ( variable_51 == variable_24 ) if ( * variable_51 && ( * variable_51 ) != 47 ) if ( variable_52 == 80 && strncmp ( variable_12 , " http : " , 5 ) == 0 ) if ( variable_52 == 443 && strncmp ( variable_12 , " https : " , 6 ) == 0 ) if ( variable_52 == 3690 && strncmp ( variable_12 , " svn : " , 4 ) == 0 ) variable_24 = variable_51 ; apr_size_t variable_20 = ( variable_51 - variable_25 ) ; if ( variable_20 == 1 && ( * variable_25 ) == 46 ) if ( ( * variable_51 ) == 47 && ( * ( variable_51 + 1 ) ) == 47 ) if ( ! ( * variable_51 ) && ( * ( variable_51 - 1 ) ) == 47 && variable_51 - 1 != variable_12 ) if ( ! ( * variable_51 ) ) if ( ( * variable_51 ) == 47 ) variable_51 ++ ; variable_25 = variable_51 ; while ( * variable_51 && ( * variable_51 ) != 47 ) variable_51 ++ ; variable_51 = variable_24 ; while ( * variable_51 ) if ( ( * variable_51 ) == 37 ) if ( ( ( * ( variable_51 + 1 ) ) < 48 || ( * ( variable_51 + 1 ) ) > ' 9 ' ) && ( ( * ( variable_51 + 1 ) ) < 65 || ( * ( variable_51 + 1 ) ) > '  F ' ) ) if ( ( ( * ( variable_51 + 2 ) ) < 48 || ( * ( variable_51 + 2 ) ) > ' 9 ' ) && ( ( * ( variable_51 + 2 ) ) < 65 || ( * ( variable_51 + 2 ) ) > '  F ' ) ) variable_53 [ 0 ] = * ( ++ variable_51 ) ; variable_53 [ 1 ] = * ( ++ variable_51 ) ; variable_53 [ 2 ] = ' \0 ' ; variable_54 = ( ( int ) ( strtol ( variable_53 , ( ( void * ) 0 ) , 16 ) ) ) ; if ( variable_34 [ variable_54 ] ) if ( ( * variable_51 ) != 47 && ! variable_34 [ ( unsigned char ) ( * variable_51 ) ] ) variable_51 ++ ; return variable_49 == func_34 ( variable_12 , variable_49 ) ; static apr_size_t func_35 ( const char * variable_12 , apr_size_t variable_49 ) for ( variable_9 = 0 ; variable_9 < variable_49 ; variable_9 ++ ) if ( variable_12 [ variable_9 ] == 47 ) if ( variable_9 > 0 && variable_12 [ variable_9 - 1 ] == ' : ' && variable_9 < variable_49 - 1 && variable_12 [ variable_9 + 1 ] == 47 ) if ( variable_9 == 5 && strncmp ( " file " , variable_12 , 4 ) == 0 ) for ( variable_9 += 2 ; variable_9 < variable_49 ; variable_9 ++ ) if ( variable_12 [ variable_9 ] == 47 ) return variable_49 ; variable_48 ++ ; * ( ( const char * * ) ( func_36 ( * variable_3 ) ) ) = func_37 ( variable_48 , variable_7 ) ;
