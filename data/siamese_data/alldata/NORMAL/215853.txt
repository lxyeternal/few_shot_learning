 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = ( float ) atof ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;
 void func_0 ( void ( * variable_0 ) ( union osnaburg_spulyie * ) ) union osnaburg_spulyie variable_1 = { 0 } ; if ( variable_1 . variable_2 != 0 ) func_1 ( variable_1 ) ; void func_2 ( const union osnaburg_spulyie variable_3 ) struct variable_4 * variable_5 ; variable_6 = ( ( char * ) ( ( union variable_7 ) variable_3 ) . variable_2 ) ; variable_5 = malloc ( sizeof ( struct variable_4 ) ) ; if ( variable_5 ) variable_5 -> variable_8 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_5 -> variable_9 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; variable_5 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_6 ) + 1 ) ) ; if ( variable_5 -> variable_8 ) if ( ( sscanf ( variable_6 , " %d %s %s %s " , & ( variable_5 -> variable_11 ) , variable_5 -> variable_9 , variable_5 -> variable_10 , variable_5 -> variable_8 ) == 4 ) && ( strlen ( variable_5 -> variable_8 ) != 0 ) && ( strlen ( variable_5 -> variable_9 ) != 0 ) && ( strlen ( variable_5 -> variable_10 ) != 0 ) ) while ( variable_5 -> variable_8 [ variable_12 ] != ' \0 ' ) if ( func_3 ( variable_5 -> variable_8 [ variable_12 ] ) == 0 ) int func_4 ( char variable_13 ) return ( ( variable_13 >= ' A ' && variable_13 <= ' Z ' ) || ( variable_13 >= ' a ' && variable_13 <= ' z ' ) ) ; func_5 ( & variable_14 , NULL , variable_15 , variable_5 ) ; func_6 ( & variable_16 , NULL , variable_17 , variable_5 ) ; free ( variable_5 -> variable_8 ) ; free ( variable_5 ) ;
