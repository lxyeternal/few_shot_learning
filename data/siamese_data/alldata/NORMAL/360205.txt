 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; while ( 1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( char ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( char ) ] = ' \0 ' ; variable_19 = strchr ( variable_0 , ' \r ' ) ; if ( variable_19 ) * variable_19 = ' \0 ' ; variable_19 = strchr ( variable_0 , ' \n ' ) ; if ( variable_19 ) * variable_19 = ' \0 ' ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;
 void func_0 ( void ( * variable_0 ) ( char * * ) ) char variable_1 [ 80 ] = { 0 } ; char variable_2 [ 80 ] = { 0 } ; char variable_3 [ 80 ] = { 0 } ; long variable_4 [ 10 ] ; char * variable_5 [ 10 ] = { 0 } ; char * variable_6 = 0 ; if ( variable_6 != 0 ) variable_5 [ 5 ] = variable_6 ; variable_4 [ 1 ] = 5 ; variable_7 = * ( variable_5 + variable_4 [ 1 ] ) ; variable_8 = ( ( char * ) variable_7 ) ; variable_9 = fopen ( variable_8 , " r " ) ; if ( variable_9 != 0 ) fscanf ( variable_9 , " \ " % 79 [ ^ \ " ] \ " , \ " % 79 [ ^ \ " ] \ " , \ " % 79 [ ^ \ " ] \ " func_1 ( variable_10 , variable_11 , " stonesoup_col1 " , variable_1 , " CROSSOVER - STATE " ) ; func_2 ( variable_10 , variable_11 , " stonesoup_col2 " , variable_2 , " CROSSOVER - STATE " ) ; if ( strlen ( variable_1 ) > 0 ) variable_12 [ 0 ] = variable_1 ; if ( strlen ( variable_2 ) > 0 ) variable_12 [ 1 ] = variable_2 ; variable_12 [ 2 ] = variable_3 ; fputs ( variable_12 [ 0 ] , variable_13 ) ; func_3 ( variable_12 [ 0 ] ) ; void func_4 ( char * variable_14 , . . . ) va_start ( variable_15 , variable_14 ) ; vfprintf ( variable_16 , variable_14 , variable_15 ) ; fputs ( variable_12 [ 1 ] , variable_13 ) ; func_5 ( variable_12 [ 1 ] ) ; void func_6 ( char * variable_14 , . . . ) va_start ( variable_15 , variable_14 ) ; vfprintf ( variable_16 , variable_14 , variable_15 ) ; fputs ( variable_12 [ 2 ] , variable_13 ) ; func_7 ( variable_12 [ 2 ] ) ; void func_8 ( char * variable_14 , . . . ) va_start ( variable_15 , variable_14 ) ; vfprintf ( variable_16 , variable_14 , variable_15 ) ;
