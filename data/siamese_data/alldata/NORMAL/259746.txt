 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) func_14 ( variable_18 ) ; void func_15 ( int variable_18 ) if ( variable_18 < 100 ) memcpy ( variable_19 , variable_20 , variable_18 ) ; variable_19 [ variable_18 ] = ' \0 ' ; func_16 ( variable_19 ) ; void func_17 ( const char * variable_21 ) if ( variable_21 != NULL ) printf ( " %s \n " , variable_21 ) ;
 static func_0 ( struct variable_0 * variable_0 ) struct variable_1 * variable_2 ; if ( ! variable_0 -> variable_3 ) while ( ! variable_0 -> variable_4 && ( variable_2 = func_1 ( & variable_0 -> variable_5 . variable_6 ) ) ) func_2 ( variable_0 , variable_2 ) ; static func_3 ( struct variable_0 * variable_0 , struct variable_1 * variable_2 ) int variable_7 = func_4 ( variable_2 ) ; struct variable_1 * variable_8 ; unsigned char * variable_9 ; if ( variable_7 < 0 variable_10 ) if ( variable_0 -> variable_11 && func_5 ( variable_0 -> variable_11 , variable_2 ) == 0 ) if ( ! ( variable_0 -> variable_12 && func_6 ( variable_0 -> variable_12 , variable_2 ) == 0 ) ) variable_0 -> variable_13 = variable_14 ; variable_0 -> variable_15 . variable_16 += variable_2 -> variable_17 - 2 ; switch ( variable_7 ) if ( ! variable_0 -> variable_18 || ( variable_0 -> variable_19 & variable_20 ) == 0 ) variable_8 = func_7 ( variable_2 -> variable_17 + variable_0 -> variable_21 -> variable_22 - 2 , variable_23 ) ; if ( ! variable_8 ) variable_9 = variable_2 -> variable_24 + 2 ; if ( variable_9 == variable_2 -> variable_24 + 2 ) if ( variable_9 [ 0 ] & variable_25 ) variable_7 = variable_26 ; variable_7 = variable_27 ; variable_2 = variable_8 ; if ( ( variable_0 -> variable_28 & variable_29 ) && variable_0 -> variable_30 && variable_7 != variable_31 && variable_7 != variable_32 ) if ( ! ( variable_0 -> variable_19 & variable_33 ) && ( variable_0 -> variable_19 & variable_34 ) ) variable_2 = func_8 ( variable_0 , variable_2 ) ; static inline struct variable_1 func_9 ( struct variable_0 * variable_0 , struct variable_1 * variable_2 ) struct variable_1 * variable_8 ; int variable_17 ; int variable_35 = variable_0 -> variable_21 -> variable_36 + variable_0 -> variable_37 -> variable_38 + variable_0 -> variable_21 -> variable_22 ; int variable_39 = variable_0 -> variable_21 -> variable_36 + variable_0 -> variable_37 -> variable_38 + variable_40 ; variable_8 = func_10 ( variable_35 , variable_23 ) ; if ( ! variable_8 ) return NULL ; variable_17 = variable_0 -> variable_37 -> func_11 ( variable_0 -> variable_30 , variable_2 -> variable_24 - 2 , variable_8 -> variable_24 , variable_2 -> variable_17 + 2 , variable_39 ) ; if ( variable_17 > 0 && ( variable_0 -> variable_19 & variable_33 ) ) if ( variable_17 == 0 ) variable_8 = variable_2 ; variable_8 = NULL ; return variable_8 ; if ( ! variable_2 ) if ( variable_0 -> variable_19 & variable_41 ) variable_0 -> variable_4 = variable_2 ; func_12 ( variable_0 ) ; static func_13 ( struct variable_0 * variable_0 ) struct variable_42 * variable_43 ; struct variable_1 * variable_2 = variable_0 -> variable_4 ; if ( ! variable_2 ) variable_43 = & variable_0 -> variable_44 ; if ( func_14 ( variable_43 ) ) if ( ( variable_0 -> variable_19 & variable_45 ) == 0 ) if ( ! func_15 ( variable_0 , variable_2 ) ) static int func_16 ( struct variable_0 * variable_0 , struct variable_1 * variable_2 ) int variable_17 , variable_46 ; int variable_47 , variable_48 , variable_49 , variable_36 ; int variable_50 ; int variable_51 , variable_52 , variable_53 ; int variable_54 ; int variable_55 ; int variable_56 ; unsigned char * variable_57 , * variable_58 ; struct variable_42 * variable_43 ; struct variable_59 * variable_60 ; struct variable_1 * variable_61 ; variable_55 = 0 ; variable_52 = 0 ; variable_51 = 0 ; variable_53 = 0 ; variable_56 = 0 ; variable_49 = ( variable_0 -> variable_19 & variable_62 ) ? variable_63 : variable_64 ; variable_47 = 0 ; if ( variable_60 -> variable_65 ) variable_60 -> variable_66 = 1 ; variable_51 ++ ; variable_60 -> variable_67 = variable_60 -> variable_65 -> variable_67 ; variable_60 -> variable_66 = 0 ; if ( variable_60 -> variable_66 ) if ( func_17 ( & variable_60 -> variable_5 . variable_6 ) || ! variable_60 -> variable_68 ) if ( variable_60 -> variable_67 == 0 ) variable_53 ++ ; variable_55 += variable_60 -> variable_67 ; variable_60 -> variable_66 = 2 ; if ( ! variable_60 -> variable_68 && variable_47 < variable_0 -> variable_69 ) variable_0 -> variable_69 = variable_47 ; if ( variable_52 == 0 || variable_52 < variable_51 / 2 ) variable_57 = variable_2 -> variable_24 ; variable_17 = variable_2 -> variable_17 ; variable_46 = variable_17 ; variable_54 = variable_17 % variable_52 ; variable_43 = & variable_0 -> variable_44 ; for ( variable_47 = 0 ; variable_47 < variable_0 -> variable_69 ; ++ variable_47 ) variable_43 = variable_43 -> variable_70 ; if ( variable_43 == & variable_0 -> variable_44 ) variable_48 = variable_71 ; while ( variable_17 > 0 ) variable_43 = variable_43 -> variable_70 ; if ( variable_43 == & variable_0 -> variable_44 ) variable_60 = func_18 ( variable_43 , struct variable_59 , variable_72 ) if ( ! variable_60 -> variable_66 ) if ( variable_60 -> variable_66 == 1 ) if ( variable_52 > 0 ) variable_60 -> variable_66 = 1 ; if ( variable_60 -> variable_65 == NULL ) if ( variable_60 -> variable_67 == 0 ) variable_53 -- ; variable_55 -= variable_60 -> variable_67 ; variable_60 -> variable_66 = 0 ; variable_46 = variable_17 ; variable_56 -- ; variable_52 -- ; if ( -- variable_51 == 0 ) variable_50 = variable_17 ; if ( variable_52 > 0 ) if ( variable_60 -> variable_67 == 0 ) variable_50 = variable_17 / variable_52 ; if ( variable_54 > 0 ) variable_50 ++ ; variable_54 -- ; variable_50 = ( ( ( variable_56 - variable_53 ) * ( variable_46 + variable_49 * variable_56 ) ) / ( ( variable_55 * variable_56 ) / variable_60 -> variable_67 ) ) - variable_49 ; if ( variable_54 > 0 ) variable_50 += ( ( variable_56 - variable_53 ) * variable_60 -> variable_67 ) / variable_55 ; variable_54 -= ( ( variable_56 - variable_53 ) * variable_60 -> variable_67 ) / variable_55 ; variable_52 -- ; if ( ( variable_52 <= 0 ) || ( variable_50 > variable_17 ) ) variable_50 = variable_17 ; if ( variable_50 <= 0 ) variable_60 -> variable_66 = 2 ; variable_36 = variable_60 -> variable_65 -> variable_36 - ( variable_49 - 2 ) ; if ( variable_36 < 4 ) variable_36 = 4 ; if ( variable_50 > variable_36 ) variable_50 = variable_36 ; if ( variable_50 == variable_17 ) variable_48 |= variable_73 ; variable_61 = func_19 ( variable_50 + variable_49 + ( variable_50 == 0 ) , variable_23 ) ; if ( ! variable_61 ) variable_58 = func_20 ( variable_61 , variable_50 + variable_49 ) ; if ( variable_0 -> variable_19 & variable_62 ) variable_58 [ 2 ] = variable_48 ; variable_58 [ 3 ] = variable_0 -> variable_74 >> 16 ; variable_58 [ 4 ] = variable_0 -> variable_74 >> 8 ; variable_58 [ 5 ] = variable_0 -> variable_74 ; memcpy ( variable_58 + variable_49 , variable_57 , variable_50 ) ; variable_60 -> variable_68 = 1 ; variable_57 += variable_50 ; variable_17 -= variable_50 ; variable_48 = 0 ;
