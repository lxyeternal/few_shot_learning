 static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 . func_1 ( variable_0 ) ; variable_3 . func_2 ( variable_0 ) ; variable_3 . func_3 ( variable_0 ) ;
 apr_status_t func_0 ( variable_0 * variable_1 , variable_2 variable_3 variable_4 variable_5 char * variable_6 ) char variable_7 [ variable_8 ] ; char variable_9 ; int variable_10 , variable_11 ; int variable_12 = 0 ; variable_13 * variable_14 ; if ( variable_10 <= 0 ) if ( func_1 ( variable_7 , " HTTP / # . # # # # * " ) ) int variable_15 , variable_16 ; if ( 2 != sscanf ( variable_7 , " HTTP / % u . % u " , & variable_15 , & variable_16 ) ) variable_9 = variable_7 [ 12 ] ; variable_7 [ 12 ] = ' \0 ' ; variable_17 -> variable_18 = atoi ( & variable_7 [ 9 ] ) ; if ( variable_9 != ' \0 ' ) variable_7 [ 12 ] = variable_9 ; variable_7 [ 12 ] = ' ' ; variable_7 [ 13 ] = ' \0 ' ; variable_17 -> variable_19 = func_2 ( variable_1 , & variable_7 [ 9 ] ) ; variable_14 = func_3 ( variable_17 -> variable_20 , 2 ) ; if ( variable_17 -> variable_21 == NULL ) if ( ! func_4 ( variable_14 ) ) variable_17 -> variable_21 = func_5 ( variable_17 -> variable_20 , variable_17 -> variable_21 , variable_14 ) ; variable_17 -> variable_21 = func_6 ( variable_1 , variable_17 -> variable_21 ) ; variable_17 -> variable_18 = 200 ; variable_17 -> variable_19 = " 200 OK " ; if ( func_7 ( variable_17 -> variable_18 ) ) variable_12 ++ ; variable_12 = 0 ; while ( variable_12 && ( variable_12 < variable_22 ) )
