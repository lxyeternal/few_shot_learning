 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_9 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_10 ( variable_20 ) ;
 int func_0 ( ) FILE * variable_0 ; unsigned char variable_1 [ 200 ] ; unsigned char * variable_2 ; char * variable_3 ; int variable_4 , variable_5 = 0 ; variable_2 = variable_1 ; variable_3 = " HEADER JUNK : " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; variable_3 = " LL . MIT . EDU " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; * variable_2 ++ = 0 ; * variable_2 ++ = 16 ; * variable_2 ++ = 0 ; * variable_2 ++ = 1 ; variable_5 += 4 ; variable_3 = " BLAH . MIT . EDU " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; * variable_2 ++ = 0 ; * variable_2 ++ = 16 ; * variable_2 ++ = 0 ; * variable_2 ++ = 1 ; * variable_2 ++ = 0 ; * variable_2 ++ = 0 ; * variable_2 ++ = 0 ; * variable_2 ++ = 255 ; * variable_2 ++ = 0 ; * variable_2 ++ = 30 ; * variable_2 ++ = 255 ; variable_5 += 11 ; variable_3 = " This is random junk in the TXT record that will overflow ( * rr ) -> rr_u . rr_txt " ; variable_5 += strlen ( variable_3 ) ; while ( * variable_3 != ' \0 ' ) * variable_2 ++ = * variable_3 ++ ; variable_0 = fopen ( variable_6 , " w " ) ; variable_2 = variable_1 ; for ( variable_4 = 0 ; variable_4 < variable_5 ; variable_4 ++ , variable_2 ++ ) fputc ( * variable_2 , variable_0 ) ;
