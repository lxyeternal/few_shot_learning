 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( void * variable_21 ) int * variable_22 = ( int * ) variable_21 ; int variable_20 = ( * variable_22 ) ; variable_23 = variable_20 * sizeof ( int ) ; variable_24 = ( int * ) new char [ variable_23 ] ; for ( variable_25 = 0 ; variable_25 < ( size_t ) variable_20 ; variable_25 ++ ) variable_24 [ variable_25 ] = 0 ; func_11 ( variable_24 [ 0 ] ) ; void func_12 ( int variable_26 ) printf ( " %d \n " , variable_26 ) ; delete [ ] variable_24
 variable_0 * func_0 ( const char * variable_1 , const char * variable_2 , void ( * variable_3 ) ( struct variable_0 * variable_4 ) ) const char * variable_5 ; variable_0 * variable_6 ; if ( ! strcmp ( variable_2 , " vc " ) ) if ( func_1 ( variable_2 , " vc : " , & variable_5 ) ) if ( ! strcmp ( variable_2 , " null " ) ) if ( func_2 ( variable_2 , " tcp : " , & variable_5 ) ) if ( func_3 ( variable_2 , " telnet : " , & variable_5 ) ) if ( func_4 ( variable_2 , " udp : " , & variable_5 ) ) if ( func_5 ( variable_2 , " mon : " , & variable_5 ) ) if ( ! strcmp ( variable_2 , " msmouse " ) ) if ( func_6 ( variable_2 , " unix : " , & variable_5 ) ) variable_6 = func_7 ( variable_5 , 0 , 1 ) ; static variable_0 * func_8 ( const char int int variable_7 ) int variable_8 = - 1 , variable_9 = 0 ; int variable_10 = 0 ; int variable_11 = 1 ; int variable_12 = 0 ; const char * variable_13 ; variable_13 = variable_14 ; while ( variable_13 = strchr ( variable_13 , ' , ' ) ) variable_13 ++ ; if ( ! strncmp ( variable_13 , " server " , 6 ) ) variable_10 = 1 ; if ( ! strncmp ( variable_13 , " nowait " , 6 ) ) variable_11 = 0 ; if ( ! strncmp ( variable_13 , " nodelay " , 6 ) ) variable_12 = 1 ; if ( ! strncmp ( variable_13 , " to = " , 3 ) ) if ( ! strncmp ( variable_13 , " ipv4 " , 4 ) ) if ( ! strncmp ( variable_13 , " ipv6 " , 4 ) ) if ( ! variable_10 ) variable_11 = 0 ; variable_6 = func_9 ( sizeof ( variable_0 ) ) ; variable_4 = func_10 ( sizeof ( variable_15 ) ) ; if ( variable_10 ) variable_6 -> variable_2 = func_11 ( 256 ) ; variable_9 = strlen ( variable_6 -> variable_2 ) ; if ( variable_7 ) if ( variable_10 ) variable_8 = func_12 ( variable_14 , variable_6 -> variable_2 + variable_9 , 256 - variable_9 ) ; variable_8 = func_13 ( variable_14 ) ; if ( variable_10 ) variable_8 = func_14 ( variable_14 , variable_6 -> variable_2 + variable_9 , 256 - variable_9 , variable_16 , 0 ) ; variable_8 = func_15 ( variable_14 , variable_16 ) ; if ( variable_8 < 0 ) variable_4 -> variable_17 = 0 ; variable_4 -> variable_8 = - 1 ; variable_4 -> variable_18 = - 1 ; variable_4 -> variable_19 = - 1 ; variable_4 -> variable_7 = variable_7 ; variable_4 -> variable_12 = variable_12 && ! variable_7 ; variable_6 -> variable_20 = variable_4 ; variable_6 -> variable_21 = variable_22 ; variable_6 -> variable_23 = variable_24 ; variable_6 -> variable_25 = variable_26 ; if ( variable_10 && variable_11 ) func_16 ( variable_6 ) ; static void func_17 ( void * variable_20 ) variable_0 * variable_6 = variable_20 ; variable_15 * variable_4 = variable_6 -> variable_20 ; struct variable_27 * variable_28 ; socklen_t variable_29 ; int variable_8 ; if ( variable_4 -> variable_7 ) variable_29 = sizeof ( variable_30 ) ; variable_28 = ( struct sockaddr * ) & variable_30 ; variable_29 = sizeof ( variable_31 ) ; variable_28 = ( struct sockaddr * ) & variable_31 ; variable_8 = func_18 ( variable_4 -> variable_18 , variable_28 , & variable_29 ) ; if ( variable_8 < 0 && variable_32 != variable_33 ) if ( variable_8 >= 0 ) if ( variable_4 -> variable_34 ) func_19 ( variable_8 ) ; static void func_20 ( int variable_8 ) char variable_35 [ 3 ] ; func_21 ( variable_8 , ( char * ) variable_35 , 3 , 0 ) ;
