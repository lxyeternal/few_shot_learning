 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 . func_17 ( ( char * ) variable_0 ) ;
 unsigned int func_0 ( const char * variable_0 , const char * variable_1 , variable_2 * variable_3 , variable_4 * variable_5 ) svn_string_t variable_6 ; variable_6 . variable_7 = variable_1 ; variable_6 . variable_8 = strlen ( variable_1 ) ; return func_1 ( ( & variable_9 ) , ( & variable_6 ) , variable_3 , variable_5 ) ; unsigned int func_2 ( const svn_string_t * variable_9 , const svn_string_t * variable_6 , variable_2 * variable_3 , variable_4 * variable_5 ) const char * variable_0 = variable_9 -> variable_7 ; const char * variable_1 = variable_6 -> variable_7 ; const apr_size_t variable_10 = variable_9 -> variable_8 ; const apr_size_t variable_11 = variable_6 -> variable_8 ; const apr_size_t variable_12 = variable_10 + variable_11 ; const char * variable_13 = variable_0 + variable_10 ; const char * variable_14 = variable_1 + variable_11 ; while ( variable_0 < variable_13 && variable_1 < variable_14 && ( * variable_0 ) == ( * variable_1 ) ) while ( variable_0 < variable_13 && variable_1 < variable_14 ) if ( ( * variable_13 ) != ( * variable_14 ) ) if ( variable_0 < variable_13 && variable_1 < variable_14 ) const apr_size_t variable_15 = ( variable_13 - variable_0 ) ; const apr_size_t variable_16 = ( variable_14 - variable_1 ) ; const apr_size_t variable_17 = variable_15 > variable_16 ? variable_16 : variable_15 ; if ( variable_15 < variable_16 ) variable_18 = variable_0 ; variable_0 = variable_1 ; variable_1 = variable_18 ; variable_18 = variable_13 ; variable_13 = variable_14 ; variable_14 = variable_18 ; func_3 ( variable_3 , 2 * ( variable_17 + 1 ) * sizeof ( variable_4 ) ) ; void func_4 ( variable_2 * variable_19 , apr_size_t variable_20 ) func_5 ( & variable_19 -> variable_7 , & variable_19 -> variable_20 , variable_20 , variable_19 -> variable_21 ) ; inline static void func_6 ( void * * variable_7 , variable_4 * variable_20 , apr_size_t variable_22 , variable_23 * variable_21 ) if ( variable_22 > * variable_20 ) apr_size_t variable_24 = * variable_20 ; if ( variable_24 == 0 ) variable_24 = variable_22 ; while ( variable_24 < variable_22 ) const apr_size_t variable_25 = variable_24 ; variable_24 *= 2 ; if ( variable_25 > variable_24 ) variable_24 = variable_22 ; func_7 ( variable_7 , variable_20 , variable_24 , variable_21 ) ; inline static void func_8 ( void * * variable_7 , variable_4 * variable_20 , apr_size_t variable_22 , variable_23 * variable_21 ) variable_22 = variable_22 + ( 8 - 1 ) & ( ~ ( 8 - 1 ) ) ; * variable_7 = ( ! variable_22 ? ( ( void * ) 0 ) : func_9 ( variable_21 , variable_22 ) ) ; * variable_20 = variable_22 ; func_10 ( variable_3 , ( variable_17 + 2 ) * sizeof ( variable_4 ) ) ; # undef variable_26 svn_membuf_t * const variable_27 = variable_19 const apr_size_t variable_28 = variable_20 ; if ( variable_28 > variable_27 -> variable_20 ) memset ( variable_27 -> variable_7 , 0 , variable_27 -> variable_20 ) ; memset ( variable_27 -> variable_7 , 0 , variable_28 ) ; variable_29 = ( variable_3 -> variable_7 ) ; variable_30 = variable_29 + variable_17 + 1 ; for ( variable_18 = variable_0 ; variable_18 < variable_13 ; ++ variable_18 ) for ( variable_31 = 1 ; variable_31 <= variable_17 ; ++ variable_31 ) if ( ( * variable_18 ) == variable_1 [ variable_31 - 1 ] ) variable_30 [ variable_31 ] = variable_29 [ variable_31 - 1 ] + 1 ; variable_30 [ variable_31 ] = ( variable_30 [ variable_31 - 1 ] > variable_29 [ variable_31 ] ? variable_30 [ variable_31 - 1 ] : variable_29 [ variable_31 ] ) ; apr_size_t * const variable_32 = variable_29 variable_29 = variable_30 ; variable_30 = variable_32 ; variable_33 += variable_29 [ variable_17 ] ; if ( variable_5 ) * variable_5 = variable_33 ; if ( variable_12 ) return ( unsigned int ) ( ( 2000 * variable_33 + variable_12 / 2 ) / variable_12 ) ;
