 void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 int func_0 ( struct variable_0 * variable_1 , struct variable_2 unsigned int variable_3 , unsigned int variable_4 , unsigned int variable_5 ) struct variable_6 * variable_7 = variable_1 -> variable_8 ; struct variable_9 * variable_10 = variable_7 -> variable_11 -> variable_12 ; struct variable_13 * variable_14 ; u32 variable_15 ; u32 variable_16 ; u32 variable_17 ; if ( variable_1 -> variable_18 && variable_19 -> variable_20 . variable_21 . variable_22 & variable_23 ) if ( func_1 ( variable_19 -> variable_20 . variable_21 . variable_24 ) == 0 ) variable_16 = 1 ; variable_16 = ceil ( func_2 ( variable_19 -> variable_20 . variable_21 . variable_24 ) , variable_25 ) ; variable_17 = func_3 ( & variable_7 -> variable_26 , variable_16 , & variable_15 ) ; if ( variable_17 == 0 ) if ( variable_7 -> variable_27 ) variable_28 = func_4 ( variable_7 , variable_17 , & variable_29 , 0 , variable_30 ) ; if ( variable_28 < variable_17 ) variable_17 = variable_28 ; if ( variable_17 == 0 ) if ( ! variable_7 -> variable_31 ) if ( variable_19 -> variable_32 . variable_33 ) variable_19 -> variable_32 . variable_34 = func_5 ( variable_10 , variable_19 -> variable_32 . variable_35 , variable_19 -> variable_32 . variable_33 , variable_36 ) ; if ( variable_19 -> variable_32 . variable_34 == 0 ) variable_19 -> variable_32 . variable_34 = 0 ; variable_7 -> variable_31 = & variable_19 -> variable_32 ; if ( func_6 ( variable_37 , & variable_19 -> variable_38 ) ) variable_19 -> variable_20 . variable_21 . variable_22 |= variable_39 ; if ( func_7 ( variable_40 , & variable_19 -> variable_38 ) ) variable_19 -> variable_20 . variable_21 . variable_22 |= variable_41 ; variable_19 -> variable_20 . variable_21 . variable_42 = func_8 ( func_9 ( variable_7 ) ) ; variable_14 = & variable_7 -> variable_31 -> variable_35 [ variable_4 ] ; variable_16 = 0 ; variable_43 -> variable_44 . variable_45 = variable_45 ; variable_43 -> variable_44 . variable_46 = variable_47 ; variable_43 -> variable_44 . variable_48 = 1 ; variable_43 -> variable_44 . variable_49 = NULL ; variable_43 -> variable_50 = variable_51 ; variable_43 -> variable_52 = NULL ; variable_43 -> variable_53 [ 0 ] . variable_54 = variable_7 -> variable_55 + ( variable_15 * sizeof ( struct variable_56 ) ) ; variable_43 -> variable_53 [ 0 ] . variable_57 = sizeof ( struct variable_56 ) ; memcpy ( & variable_7 -> variable_58 [ variable_15 ] , & variable_19 -> variable_20 . variable_21 , sizeof ( struct variable_56 ) ) ; if ( variable_16 < variable_17 && variable_14 != & variable_19 -> variable_32 . variable_35 [ variable_19 -> variable_32 . variable_34 ] ) variable_59 = min ( variable_25 , func_10 ( variable_10 , variable_14 ) - variable_5 ) ; variable_43 -> variable_44 . variable_48 = 2 ; variable_43 -> variable_53 [ 1 ] . variable_54 = func_11 ( variable_10 , variable_14 ) + variable_5 ; variable_43 -> variable_53 [ 1 ] . variable_57 = variable_59 ; variable_5 += variable_59 ; if ( variable_5 == func_12 ( variable_10 , variable_14 ) ) variable_14 ++ ; variable_5 = 0 ; func_13 ( variable_7 , variable_43 , 0 ) ; if ( variable_7 -> variable_27 && variable_60 && variable_16 == ( variable_17 - 1 ) ) variable_43 -> variable_44 . variable_45 |= variable_61 | variable_62 ; if ( variable_43 -> variable_44 . variable_45 & variable_61 ) func_14 ( " send % p wr % p num_sge % u next % p \n " , variable_43 , & variable_43 -> variable_44 , variable_43 -> variable_44 . variable_48 , variable_43 -> variable_44 . variable_49 ) ; if ( variable_7 -> variable_27 && variable_63 ) struct variable_56 * variable_64 = & variable_7 -> variable_58 [ variable_15 ] ; variable_64 -> variable_65 = variable_63 ; func_15 ( variable_64 ) ; if ( variable_66 ) variable_66 -> variable_44 . variable_49 = & variable_43 -> variable_44 ; variable_66 = variable_43 ; variable_15 = ( variable_15 + 1 ) % variable_7 -> variable_26 . variable_67 ; variable_43 = & variable_7 -> variable_68 [ variable_15 ] ; variable_16 ++ ; while ( variable_16 < variable_17 && variable_14 != & variable_19 -> variable_32 . variable_35 [ variable_19 -> variable_32 . variable_34 ] ) variable_66 -> variable_52 = variable_7 -> variable_31 ; variable_66 -> variable_44 . variable_45 |= variable_62 ; variable_7 -> variable_31 = NULL ; func_16 ( & variable_7 -> variable_26 , variable_17 - variable_16 ) ; if ( variable_7 -> variable_27 && variable_16 < variable_28 ) func_17 ( variable_69 , & variable_7 -> variable_70 ) ; variable_71 = func_18 ( variable_7 -> variable_11 -> variable_72 , & variable_73 -> variable_44 , & variable_74 ) ; func_19 ( " ic % p first % p ( wr % p ) ret %d wr % p \n " , variable_7 , variable_73 , & variable_73 -> variable_44 , variable_71 , variable_74 ) ; if ( variable_71 ) func_20 ( variable_75 " returned %d \n " , & variable_1 -> variable_76 , variable_71 ) func_21 ( & variable_7 -> variable_26 , variable_17 ) ; func_22 ( variable_7 , variable_69 ) ; if ( variable_66 -> variable_52 ) variable_7 -> variable_31 = variable_66 -> variable_52 ; variable_66 -> variable_52 = NULL ; func_23 ( variable_7 -> variable_1 , " ib_post_send failed \n " ) ; return variable_71 ;
