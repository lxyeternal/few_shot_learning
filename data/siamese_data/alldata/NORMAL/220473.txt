 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( 1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , ( 100 - variable_5 - 1 ) * sizeof ( char ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( 1 ) HCRYPTPROV variable_19 = 0 ; HCRYPTHASH variable_20 = 0 ; HCRYPTKEY variable_21 = 0 ; char variable_22 [ 100 ] = variable_23 ; BYTE variable_24 [ ( 100 - 1 ) * sizeof ( char ) ] ; DWORD variable_25 ; variable_25 = func_7 ( variable_24 , sizeof ( variable_24 ) , variable_0 ) ; size_t func_8 ( unsigned char * variable_26 , size_t variable_27 , const char * variable_28 ) size_t variable_29 = 0 ; while ( variable_29 < variable_27 && isxdigit ( variable_28 [ 2 * variable_29 ] ) && isxdigit ( variable_28 [ 2 * variable_29 + 1 ] ) ) int variable_30 ; variable_26 [ variable_29 ] = ( unsigned char ) variable_30 ; return variable_29 ; if ( ! func_9 ( & variable_19 , NULL , variable_31 , variable_32 , 0 ) ) if ( ! func_10 ( variable_19 , variable_33 , 0 , 0 , & variable_20 ) ) if ( ! func_11 ( variable_20 , ( BYTE * ) variable_22 , strlen ( variable_22 ) , 0 ) ) if ( ! func_12 ( variable_19 , variable_34 , variable_20 , 0 , & variable_21 ) ) if ( ! func_13 ( variable_21 , 0 , 1 , 0 , variable_24 , & variable_25 ) ) memcpy ( variable_0 , variable_24 , variable_25 ) ; variable_0 [ variable_25 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( func_14 ( variable_35 , variable_36 , variable_0 , variable_37 , variable_38 , & variable_39 ) != 0 )
