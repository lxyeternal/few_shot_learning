 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = ( short ) atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( short variable_18 ) func_10 ( variable_18 ) ; void func_11 ( short variable_18 ) char variable_19 = ( char ) variable_18 ; func_12 ( variable_19 ) ; void func_13 ( char variable_20 ) printf ( " % 02x \n " , variable_20 ) ;
 void func_0 ( ResourceOwner variable_0 , HeapTuple variable_1 ) int variable_2 = 7 ; int variable_3 ; char * variable_4 ; if ( func_1 ( & variable_5 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_4 != 0 ) variable_6 = ( ( void * ) variable_4 ) ; variable_3 = 1 ; variable_7 = & variable_6 ; variable_8 = ( ( void * * ) ( ( ( unsigned long ) variable_7 ) * variable_3 * variable_3 ) ) + 5 ; func_3 ( variable_2 , variable_8 ) ; void func_4 ( int variable_9 , void * * variable_10 ) variable_9 -- ; if ( variable_9 > 0 ) func_5 ( variable_9 , variable_10 ) ; void func_6 ( int variable_9 , void * * variable_10 ) variable_9 -- ; if ( variable_9 > 0 ) func_7 ( variable_9 , variable_10 ) ; void func_8 ( int variable_9 , void * * variable_10 ) variable_9 -- ; if ( variable_9 > 0 ) variable_11 = ( ( char * ) ( ( char * ) ( * ( variable_10 - 5 ) ) ) ) ; variable_12 = strlen ( variable_11 ) + 1 ; variable_13 = variable_14 < variable_12 ? variable_14 : variable_12 ; for ( variable_15 = 0 ; variable_15 < variable_13 ; variable_15 ++ ) variable_16 [ variable_14 - variable_15 - 1 ] = variable_11 [ variable_12 - variable_15 - 1 ] ; for ( variable_15 = 0 ; variable_15 < variable_12 ; variable_15 ++ ) func_9 ( " % 02x " , variable_16 [ variable_14 - variable_15 - 1 ] ) ; free ( variable_16 ) ; func_10 ( variable_17 , variable_18 , " stonesoup_other_size " , variable_14 , & variable_14 , " TRIGGER - STATE " ) ; func_11 ( variable_17 , variable_18 , " stonesoup_buff_size " , variable_12 , & variable_12 , " TRIGGER - STATE " ) ;
