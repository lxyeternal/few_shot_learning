 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( variable_2 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;
 static void func_0 ( ) stdThread variable_0 = NULL ; int variable_1 ; variable_1 = 0 ; if ( ! func_1 ( & variable_2 ) ) int func_2 ( variable_3 * variable_4 ) stdThreadLock variable_5 = NULL ; variable_5 = ( variable_3 ) malloc ( sizeof ( * variable_5 ) ) ; if ( variable_5 == NULL ) return 0 ; return 1 ; if ( ! func_3 ( variable_6 , ( void * ) & variable_1 , & variable_0 ) ) int func_4 ( stdThreadRoutine variable_7 , void * variable_8 , variable_9 * variable_10 ) uintptr_t variable_11 ; stdThread variable_12 ; variable_12 = ( variable_9 ) malloc ( sizeof ( * variable_12 ) ) ; if ( variable_12 == NULL ) return 0 ; variable_12 -> variable_7 = variable_7 ; variable_12 -> variable_8 = variable_8 ; variable_11 = func_5 ( NULL , 0 , variable_13 , variable_12 , 0 , NULL ) ; if ( variable_11 == 0 ) return 0 ; return 1 ; variable_0 = NULL ; if ( variable_0 && func_6 ( variable_0 ) ) int func_7 ( stdThread variable_10 ) DWORD variable_14 ; variable_14 = WaitForSingleObject ( ( variable_15 ) variable_10 -> variable_11 , variable_16 ) ; if ( variable_14 != variable_17 ) return 0 ; return 1 ; func_8 ( variable_0 ) ; int func_9 ( stdThread variable_10 ) free ( variable_10 ) ;
