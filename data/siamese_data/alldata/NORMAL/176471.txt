 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( variable_2 == 5 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( 100 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; if ( variable_2 != 5 ) if ( sscanf ( variable_0 , " %d " , & variable_6 ) == 1 )
 NS_METHOD variable_0 :: func_0 ( const char * variable_1 , PRUint32 variable_2 ) if ( ! variable_2 || ! variable_3 ) if ( variable_4 < variable_5 ) PRUint32 variable_6 = variable_5 - variable_4 ; if ( variable_6 > variable_2 ) variable_6 = variable_2 ; variable_4 += variable_6 ; variable_2 -= variable_6 ; variable_1 += variable_6 ; if ( variable_4 == variable_5 ) if ( variable_7 . variable_8 [ 0 ] != '  B ' || variable_7 . variable_8 [ 1 ] != '  M ' ) if ( variable_7 . variable_9 == variable_10 ) variable_11 = variable_12 ; if ( variable_4 >= variable_5 && variable_4 < variable_11 ) PRUint32 variable_6 = variable_11 - variable_4 ; if ( variable_6 > variable_2 ) variable_6 = variable_2 ; variable_4 += variable_6 ; variable_2 -= variable_6 ; variable_1 += variable_6 ; if ( variable_4 == variable_11 ) if ( variable_13 . variable_14 != 1 && variable_13 . variable_14 != 4 && variable_13 . variable_14 != 8 && variable_13 . variable_14 != 16 && variable_13 . variable_14 != 24 && variable_13 . variable_14 != 32 ) if ( variable_13 . variable_14 <= 8 ) variable_15 = 1 << variable_13 . variable_14 ; if ( variable_13 . variable_16 && variable_13 . variable_16 < variable_15 ) variable_15 = variable_13 . variable_16 ; variable_17 = new colorTable [ 256 ] ; if ( ! variable_17 ) memset ( variable_17 , 0 , 256 * sizeof ( variable_18 ) ) ; if ( variable_13 . variable_19 < 0 ) PRUint32 variable_20 = ( variable_13 . variable_21 > 0 ) ? variable_13 . variable_21 : - variable_13 . variable_21 ; variable_3 = variable_20 ; variable_22 = new PRUint8 [ ( variable_13 . variable_19 * variable_13 . variable_14 ) / 8 + 4 ] ; if ( ! variable_22 ) PRUint8 variable_23 ; variable_23 = ( variable_7 . variable_9 == variable_10 ) ? 3 : 4 ; if ( variable_17 && ( variable_4 >= variable_11 && ( variable_4 < ( variable_11 + variable_15 * variable_23 ) ) ) ) while ( variable_2 && ( variable_4 < ( variable_11 + variable_15 * variable_23 ) ) ) variable_4 ++ ; variable_1 ++ ; variable_2 -- ; if ( variable_2 && variable_13 . variable_24 == variable_25 && variable_4 < ( variable_26 + variable_27 ) ) PRUint32 variable_6 = ( variable_26 + variable_27 ) - variable_4 ; if ( variable_6 > variable_2 ) variable_6 = variable_2 ; variable_4 += variable_6 ; variable_1 += variable_6 ; variable_2 -= variable_6 ; while ( variable_2 && ( variable_4 < variable_7 . variable_28 ) ) variable_4 ++ ; variable_1 ++ ; variable_2 -- ; if ( variable_2 && ++ variable_4 >= variable_7 . variable_28 ) if ( ! variable_13 . variable_24 || variable_13 . variable_24 == variable_25 ) if ( ( variable_13 . variable_24 == variable_29 ) || ( variable_13 . variable_24 == variable_30 ) ) if ( ( ( variable_13 . variable_24 == variable_29 ) && ( variable_13 . variable_14 != 8 ) ) || ( ( variable_13 . variable_24 == variable_30 ) && ( variable_13 . variable_14 != 4 ) && ( variable_13 . variable_14 != 1 ) ) ) if ( ! variable_31 ) PRUint32 variable_32 ; variable_31 = ( PRUint8 * ) calloc ( variable_32 , 8 ) ; if ( ! variable_31 ) variable_33 = variable_31 ; if ( ! variable_34 ) variable_34 = ( PRUint8 * ) calloc ( variable_35 , 1 ) ; if ( ! variable_34 ) while ( variable_2 > 0 ) PRUint8 variable_36 ; switch ( variable_37 ) variable_38 = ( variable_39 ) * variable_1 ++ ; variable_2 -- ; variable_37 = variable_40 ; variable_36 = * variable_1 ++ ; variable_2 -- ; if ( variable_38 != variable_41 ) if ( variable_33 + variable_38 > variable_31 + variable_13 . variable_19 ) variable_38 = ( variable_42 ) ( variable_31 + variable_13 . variable_19 - variable_33 ) ; memset ( variable_33 , 0 variable_43 , variable_38 ) ; variable_33 += variable_38 ; if ( variable_13 . variable_24 == variable_29 ) while ( variable_38 > 0 ) variable_38 -- ; while ( variable_38 > 0 ) func_1 ( variable_44 , variable_36 , variable_38 , variable_17 ) ; variable_37 = variable_45 ; switch ( variable_36 ) variable_33 = variable_31 ; variable_37 = variable_45 ; variable_37 = variable_46 ; variable_38 = variable_36 ; if ( variable_33 + variable_38 > variable_31 + variable_13 . variable_19 ) variable_38 -= variable_13 . variable_19 & 1 ; if ( variable_33 + variable_38 > variable_31 + variable_13 . variable_19 ) memset ( variable_33 , 0 variable_43 , variable_38 ) ; variable_33 += variable_38 ; if ( ( ( variable_38 - 1 ) & variable_13 . variable_24 ) != 0 ) variable_37 = variable_47 ; variable_37 = variable_48 ; variable_36 = * variable_1 ++ ; variable_2 -- ; variable_33 += variable_36 ; if ( variable_33 > variable_31 + variable_13 . variable_19 ) variable_33 = variable_31 + variable_13 . variable_19 ; variable_37 = variable_49 ; variable_36 = * variable_1 ++ ; variable_2 -- ; variable_37 = variable_45 ; if ( variable_36 == 0 ) if ( variable_13 . variable_24 == variable_29 ) while ( variable_2 > 0 && variable_38 > 0 ) variable_36 = * variable_1 ++ ; variable_2 -- ; variable_38 -- ; while ( variable_2 > 0 && variable_38 > 0 ) variable_36 = * variable_1 ++ ; variable_2 -- ; func_2 ( variable_44 , variable_36 , variable_38 , variable_17 ) ; if ( variable_38 == 0 ) if ( variable_37 == variable_47 ) variable_37 = variable_45 ; if ( variable_2 > 0 ) variable_1 ++ ; variable_2 -- ; variable_37 = variable_45 ; if ( variable_3 == 0 )
