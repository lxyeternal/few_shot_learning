 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0
 const EVP_CIPHER * func_0 ( ) int variable_0 ; char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = ( ( int ) ( strlen ( variable_1 ) ) ) ; variable_4 = ( ( char * ) ( malloc ( variable_3 + 1 ) ) ) ; memset ( variable_4 , 0 , variable_3 + 1 ) ; memcpy ( variable_4 , variable_1 , variable_3 ) ; variable_0 = 1 ; variable_5 = & variable_4 ; variable_6 = ( ( char * * ) ( ( ( unsigned long ) variable_5 ) * variable_0 * variable_0 ) ) + 5 ; func_3 ( variable_6 ) ; void func_4 ( char * * variable_7 ) func_5 ( variable_7 ) ; void func_6 ( char * * variable_8 ) variable_9 = ( ( char * ) ( * ( variable_8 - 5 ) ) ) ; variable_10 = malloc ( sizeof ( struct variable_11 ) ) ; if ( variable_10 ) variable_10 -> variable_12 = malloc ( sizeof ( char ) * ( strlen ( variable_9 ) + 1 ) ) ; variable_10 -> variable_13 = malloc ( sizeof ( char ) * ( strlen ( variable_9 ) + 1 ) ) ; if ( variable_10 -> variable_12 && variable_10 -> variable_13 ) if ( ( sscanf ( variable_9 , " %s %s " , variable_10 -> variable_13 , variable_10 -> variable_12 ) == 2 ) && ( strlen ( variable_10 -> variable_12 ) != 0 ) && ( strlen ( variable_10 -> variable_13 ) != 0 ) ) func_7 ( variable_14 , variable_15 , " stonesoupData -> data " , variable_10 -> variable_12 , " INITIAL - STATE " ) ; func_8 ( variable_14 , variable_15 , " stonesoupData -> file1 " , variable_10 -> variable_13 , " INITIAL - STATE " ) ; variable_10 -> variable_16 = strlen ( variable_10 -> variable_12 ) ; func_9 ( variable_10 ) ; void func_10 ( void * variable_12 ) struct variable_11 * variable_10 = ( struct stonesoup_data * ) variable_12 ; char * variable_17 = malloc ( sizeof ( char ) * ( variable_10 -> variable_16 + 1 ) ) ; while ( variable_10 -> variable_12 [ variable_18 ] != ' \0 ' ) if ( ( variable_10 -> variable_12 [ variable_18 ] >= ' A ' && variable_10 -> variable_12 [ variable_18 ] <= ' Z ' ) || ( variable_10 -> variable_12 [ variable_18 ] >= ' a ' && variable_10 -> variable_12 [ variable_18 ] <= ' z ' ) ) variable_17 [ variable_19 ++ ] = variable_10 -> variable_12 [ variable_18 ] ; variable_17 [ variable_19 ++ ] = ' \0 ' ; variable_10 -> variable_16 = variable_19 ; free ( variable_10 -> variable_12 ) ; variable_10 -> variable_12 = variable_17 ; func_11 ( variable_10 -> variable_13 ) ; void func_12 ( char * variable_20 ) func_13 ( variable_20 ) ; void func_14 ( char * variable_21 ) variable_22 = fopen ( variable_21 , " r " ) ; if ( variable_22 != NULL ) while ( ( variable_23 = fgetc ( variable_22 ) ) != variable_24 ) func_15 ( " %c " , variable_23 ) ; void func_16 ( char * variable_25 , . . . ) va_start ( variable_26 , variable_25 ) ; vfprintf ( variable_27 , variable_25 , variable_26 ) ; fclose ( variable_22 ) ; free ( variable_10 -> variable_12 ) ; free ( variable_10 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 , variable_3 * variable_4 , const char * variable_5 , const char * variable_6 , const char * variable_7 , svn_tristate_t variable_8 ) const char * variable_9 ; func_1 ( variable_2 , & variable_9 , variable_5 , variable_6 , ( ( void * ) 0 ) ) ; void func_2 ( variable_1 * variable_2 , const char * * variable_4 , const char * variable_5 , const char * variable_6 , const char * variable_8 ) if ( variable_2 ) variable_10 * variable_11 ; variable_12 * variable_13 = func_3 ( variable_2 , variable_5 , variable_6 , & variable_11 ) ; static variable_12 * func_4 ( variable_1 * variable_2 , const char * variable_5 , const char * variable_6 , variable_10 * * variable_14 ) void * variable_15 ; variable_15 = func_5 ( variable_2 -> variable_16 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ; if ( variable_15 != ( ( void * ) 0 ) && variable_6 != ( ( void * ) 0 ) ) variable_10 * variable_11 = variable_15 ; variable_12 * variable_13 ; variable_13 = ( func_6 ( variable_11 -> variable_20 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ) ; if ( variable_13 == ( ( void * ) 0 ) && func_7 ( variable_5 , " DEFAULT " ) != 0 ) variable_13 = func_8 ( variable_2 , " DEFAULT " , variable_6 , & variable_11 ) ; static variable_12 * func_9 ( variable_1 * variable_2 , const char * variable_5 , const char * variable_6 , variable_10 * * variable_14 ) void * variable_15 ; variable_15 = func_10 ( variable_2 -> variable_16 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ; if ( variable_15 != ( ( void * ) 0 ) && variable_6 != ( ( void * ) 0 ) ) variable_10 * variable_11 = variable_15 ; variable_12 * variable_13 ; variable_13 = ( func_11 ( variable_11 -> variable_20 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ) ; if ( variable_13 == ( ( void * ) 0 ) && func_12 ( variable_5 , " DEFAULT " ) != 0 ) variable_13 = func_13 ( variable_2 , " DEFAULT " , variable_6 , & variable_11 ) ; return variable_13 ; return ( ( void * ) 0 ) ; return variable_13 ; return ( ( void * ) 0 ) ; if ( variable_13 != ( ( void * ) 0 ) ) if ( variable_8 && strchr ( variable_8 , 37 ) ) variable_21 * variable_22 = func_14 ( variable_2 -> variable_23 , ( ( void * ) 0 ) ) ; const char * variable_24 ; func_15 ( variable_2 , variable_11 , variable_8 , & variable_24 , variable_22 ) ; static void func_16 ( variable_1 * variable_2 , variable_10 * variable_5 , const char * variable_25 , const char * * variable_26 , variable_21 * variable_23 ) const char * variable_27 = variable_25 ; const char * variable_28 ; const char * variable_29 ; while ( variable_27 != ( ( void * ) 0 ) && ( * variable_27 ) != ' \0 ' && ( variable_28 = ( strstr ( variable_27 , " % ( " ) ) ) != ( ( void * ) 0 ) ) variable_28 += sizeof ( " % ( " ) - 1 ; if ( ( * variable_28 ) == ' \0 ' ) variable_29 = ( strstr ( variable_28 , " ) s " ) ) ; if ( variable_29 != ( ( void * ) 0 ) ) variable_12 * variable_30 ; apr_size_t variable_19 = ( variable_29 - variable_28 ) ; char * variable_31 = func_17 ( variable_23 , variable_28 , variable_19 ) ; variable_30 = func_18 ( variable_2 , variable_5 -> variable_31 , variable_31 , ( ( void * ) 0 ) ) ; static variable_12 * func_19 ( variable_1 * variable_2 , const char * variable_5 , const char * variable_6 , variable_10 * * variable_14 ) func_20 ( variable_2 -> variable_17 , variable_5 ) ; if ( ! variable_2 -> variable_32 ) func_21 ( variable_2 -> variable_17 -> variable_18 ) ; inline static char * func_22 ( char * variable_33 ) for ( variable_34 = variable_33 ; ( * variable_34 ) != 0 ; ++ variable_34 ) * variable_34 = ( ( char ) ( tolower ( ( ( unsigned char ) ( * variable_34 ) ) ) ) ) ; return variable_33 ; variable_15 = func_23 ( variable_2 -> variable_16 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ; if ( variable_14 != ( ( void * ) 0 ) ) * variable_14 = variable_15 ; if ( variable_15 != ( ( void * ) 0 ) && variable_6 != ( ( void * ) 0 ) ) variable_10 * variable_11 = variable_15 ; func_24 ( variable_2 -> variable_17 , variable_6 ) ; if ( ! variable_2 -> variable_35 ) func_25 ( variable_2 -> variable_17 -> variable_18 ) ; inline static char * func_26 ( char * variable_33 ) * variable_34 = ( ( char ) ( tolower ( ( ( unsigned char ) ( * variable_34 ) ) ) ) ) ; return variable_33 ; variable_13 = ( func_27 ( variable_11 -> variable_20 , ( variable_2 -> variable_17 -> variable_18 ) , ( variable_2 -> variable_17 -> variable_19 ) ) ) ; if ( variable_13 == ( ( void * ) 0 ) && func_28 ( variable_5 , " DEFAULT " ) != 0 ) variable_13 = func_29 ( variable_2 , " DEFAULT " , variable_6 , & variable_11 ) ; return variable_13 ; if ( variable_30 != ( ( void * ) 0 ) ) func_30 ( & variable_36 , variable_2 , variable_5 , variable_30 , variable_23 ) ; variable_19 = ( variable_28 - ( sizeof ( " % ( " ) - 1 ) - variable_37 ) ; if ( variable_38 == ( ( void * ) 0 ) ) variable_38 = func_31 ( variable_37 , variable_19 , variable_23 ) ; func_32 ( variable_38 , variable_37 , variable_19 ) ; func_33 ( variable_38 , variable_36 ) ; variable_27 = variable_29 + ( sizeof ( " ) s " ) - 1 ) ; variable_37 = variable_27 ; variable_27 = variable_29 + ( sizeof ( " ) s " ) - 1 ) ; variable_27 = ( ( void * ) 0 ) ; if ( variable_38 != ( ( void * ) 0 ) ) func_34 ( variable_38 , variable_37 ) ; * variable_26 = ( variable_38 -> variable_18 ) ; * variable_26 = ( ( void * ) 0 ) ;
