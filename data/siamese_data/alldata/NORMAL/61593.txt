 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) realloc ( variable_0 , 20 * sizeof ( char ) ) ; if ( 5 != 5 ) if ( variable_0 != NULL ) strcpy ( variable_0 , " Initialize " ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_1 ) if ( variable_1 != NULL ) printf ( " %s \n " , variable_1 ) ; free ( variable_0 ) ;
 variable_0 :: func_0 ( variable_1 * variable_2 variable_2 variable_2 variable_3 variable_4 * variable_5 ) RootedValue func_1 ( variable_6 , variable_7 ) ; RootedObject func_2 ( variable_6 , func_3 ( variable_6 , & variable_8 ) ) ; if ( ! variable_9 ) variable_10 * variable_11 = variable_12 :: func_4 ( variable_13 ) ; RootedObject func_5 ( variable_6 ) ; if ( ! func_6 ( variable_6 , variable_13 , & variable_14 ) ) variable_15 :: variable_16 < variable_17 [ ] , variable_18 :: variable_19 > variable_20 ; if ( ! variable_21 . func_7 ( ) ) if ( variable_22 :: func_8 ( variable_11 -> variable_23 ) == variable_24 )  variable_22 :: func_9 ( variable_25 * variable_13 ) jsval variable_9 = func_10 ( variable_13 , variable_26 ) ; return func_11 ( variable_9 . func_12 ( ) ) ; size_t variable_27 = variable_22 :: func_13 ( variable_11 -> variable_23 ) ;  variable_22 :: func_14 ( variable_25 * variable_28 ) jsval variable_29 = func_15 ( variable_28 , variable_30 ) ; if ( variable_29 . func_16 ( ) ) return variable_29 . func_17 ( ) ; return variable_31 < size_t > ( variable_29 . func_18 ( ) ) ; variable_20 = variable_9 -> func_19 ( ) -> variable_32 < variable_17 > ( variable_27 ) ; if ( ! variable_20 ) if ( ! func_20 ( variable_6 , variable_21 , variable_11 -> variable_23 , variable_20 . func_21 ( ) , false , variable_33 ) ) static func_22 ( variable_1 * variable_34 variable_25 * void * bool bool * variable_35 ) RootedObject func_23 ( variable_6 , variable_36 ) ; variable_25 * variable_37 = variable_33 ; variable_25 * variable_38 = variable_33 ; RootedObject func_24 ( variable_6 , variable_33 ) ; if ( variable_39 . func_25 ( ) ) variable_40 = & variable_39 . func_26 ( ) ; if ( variable_41 :: func_27 ( variable_40 ) )  variable_41 :: func_28 ( variable_25 * variable_28 ) return func_29 ( variable_28 ) == & variable_42 ; variable_37 = variable_40 ; variable_38 = variable_41 :: func_30 ( variable_37 ) ;  variable_41 :: func_31 ( variable_25 * variable_43 ) jsval variable_44 = func_32 ( variable_43 , variable_45 ) ; variable_25 * variable_13 = variable_44 . func_33 ( ) ; return variable_13 ; if ( variable_22 :: func_34 ( variable_38 , variable_46 ) )  variable_22 :: func_35 ( variable_25 * variable_47 , variable_25 * variable_48 ) if ( variable_47 == variable_48 ) return true ; TypeCode variable_49 = func_36 ( variable_47 ) ; TypeCode variable_50 = func_37 ( variable_48 ) ; if ( variable_49 != variable_50 ) return false ; switch ( variable_49 ) variable_25 * variable_51 = variable_52 :: func_38 ( variable_47 ) ;  variable_52 :: func_39 ( variable_25 * variable_28 ) jsval variable_53 = func_40 ( variable_28 , variable_54 ) ; return & variable_53 . func_41 ( ) ; variable_25 * variable_55 = variable_52 :: func_42 ( variable_48 ) ;  variable_52 :: func_43 ( variable_25 * variable_28 ) jsval variable_53 = func_44 ( variable_28 , variable_54 ) ; return & variable_53 . func_45 ( ) ; return func_46 ( variable_51 , variable_55 ) ; variable_10 * variable_56 = variable_12 :: func_47 ( variable_47 ) ; variable_10 * variable_57 = variable_12 :: func_48 ( variable_48 ) ; if ( variable_56 -> variable_58 != variable_57 -> variable_58 ) return false ; if ( ! func_49 ( variable_56 -> variable_23 , variable_57 -> variable_23 ) ) return false ; if ( variable_56 -> variable_59 . func_50 ( ) != variable_57 -> variable_59 . func_51 ( ) ) return false ; if ( variable_56 -> variable_60 != variable_57 -> variable_60 ) return false ; for ( size_t variable_61 = 0 ; variable_61 < variable_56 -> variable_59 . func_52 ( ) ; ++ variable_61 ) if ( ! func_53 ( variable_56 -> variable_59 [ variable_61 ] , variable_57 -> variable_59 [ variable_61 ] ) ) return false ; return true ; size_t variable_62 = 0 , variable_63 = 0 ; bool variable_64 = variable_65 :: func_54 ( variable_47 , & variable_62 ) ;  variable_65 :: func_55 ( variable_25 * variable_28 , size_t * variable_9 ) jsval variable_66 = func_56 ( variable_28 , variable_67 ) ; if ( variable_66 . func_57 ( ) ) return true ; if ( variable_66 . func_58 ( ) ) return true ; return false ; bool variable_68 = variable_65 :: func_59 ( variable_48 , & variable_63 ) ;  variable_65 :: func_60 ( variable_25 * variable_28 , size_t * variable_9 ) jsval variable_66 = func_61 ( variable_28 , variable_67 ) ; if ( variable_66 . func_62 ( ) ) return true ; if ( variable_66 . func_63 ( ) ) return true ; return false ; if ( variable_64 != variable_68 || ( variable_64 && variable_62 != variable_63 ) ) return false ; variable_25 * variable_51 = variable_65 :: func_64 ( variable_47 ) ;  variable_65 :: func_65 ( variable_25 * variable_28 ) jsval variable_53 = func_66 ( variable_28 , variable_69 ) ; return & variable_53 . func_67 ( ) ; variable_25 * variable_55 = variable_65 :: func_68 ( variable_48 ) ;  variable_65 :: func_69 ( variable_25 * variable_28 ) jsval variable_53 = func_70 ( variable_28 , variable_69 ) ; return & variable_53 . func_71 ( ) ; return func_72 ( variable_51 , variable_55 ) ; return false ; return true ; if ( variable_70 :: func_73 ( variable_40 ) )  variable_70 :: func_74 ( variable_25 * variable_28 ) return func_75 ( variable_28 ) == & variable_71 ; variable_37 = variable_40 ; variable_38 = variable_70 :: func_76 ( variable_6 , variable_37 ) ;  variable_70 :: func_77 ( variable_1 * variable_6 , variable_25 * variable_28 ) jsval variable_72 = func_78 ( variable_28 , variable_73 ) ; if ( variable_72 . func_79 ( ) ) return variable_33 ; return variable_72 . func_80 ( ) ; variable_70 :: variable_74 * variable_75 = ( variable_70 :: Private * ) func_81 ( variable_37 ) ; if ( ! variable_75 ) if ( variable_22 :: func_82 ( variable_38 , variable_46 ) )  variable_22 :: func_83 ( variable_25 * variable_47 , variable_25 * variable_48 ) if ( variable_47 == variable_48 ) return true ; TypeCode variable_49 = func_84 ( variable_47 ) ; TypeCode variable_50 = func_85 ( variable_48 ) ; if ( variable_49 != variable_50 ) return false ; switch ( variable_49 ) variable_25 * variable_51 = variable_52 :: func_86 ( variable_47 ) ; variable_25 * variable_55 = variable_52 :: func_87 ( variable_48 ) ; return func_88 ( variable_51 , variable_55 ) ; variable_10 * variable_56 = variable_12 :: func_89 ( variable_47 ) ; variable_10 * variable_57 = variable_12 :: func_90 ( variable_48 ) ; if ( variable_56 -> variable_58 != variable_57 -> variable_58 ) return false ; if ( ! func_91 ( variable_56 -> variable_23 , variable_57 -> variable_23 ) ) return false ; if ( variable_56 -> variable_59 . func_92 ( ) != variable_57 -> variable_59 . func_93 ( ) ) return false ; if ( variable_56 -> variable_60 != variable_57 -> variable_60 ) return false ; if ( ! func_94 ( variable_56 -> variable_59 [ variable_61 ] , variable_57 -> variable_59 [ variable_61 ] ) ) return false ; return true ; size_t variable_62 = 0 , variable_63 = 0 ; bool variable_64 = variable_65 :: func_95 ( variable_47 , & variable_62 ) ; bool variable_68 = variable_65 :: func_96 ( variable_48 , & variable_63 ) ; if ( variable_64 != variable_68 || ( variable_64 && variable_62 != variable_63 ) ) return false ; variable_25 * variable_51 = variable_65 :: func_97 ( variable_47 ) ; variable_25 * variable_55 = variable_65 :: func_98 ( variable_48 ) ; return func_99 ( variable_51 , variable_55 ) ; return false ; return true ; TypeCode variable_76 = variable_22 :: func_100 ( variable_46 ) ;  variable_22 :: func_101 ( variable_25 * variable_13 ) jsval variable_9 = func_102 ( variable_13 , variable_26 ) ; return func_103 ( variable_9 . func_104 ( ) ) ; switch ( variable_76 ) bool variable_9 ; if ( ! func_105 ( variable_6 , variable_39 , & variable_9 ) ) static func_106 ( variable_1 * variable_6 , jsval variable_39 , bool * variable_9 ) if ( variable_39 . func_107 ( ) ) return true ; if ( variable_39 . func_108 ( ) ) int32_t variable_61 = variable_39 . func_109 ( ) ; return variable_61 == 0 || variable_61 == 1 ; if ( variable_39 . func_110 ( ) ) double variable_77 = variable_39 . func_111 ( ) ; return variable_77 == 1 || variable_77 == 0 ; return false ; * variable_78 < bool * > ( variable_79 ) = variable_9 type variable_9 ; type variable_9 ; type variable_9 ; if ( ! func_112 ( variable_6 , variable_39 , & variable_9 ) ) variable_80 < variable_81 static func_113 ( variable_1 * variable_6 , jsval variable_39 , variable_82 * variable_9 ) if ( variable_39 . func_114 ( ) ) return true ; if ( variable_39 . func_115 ( ) ) return true ; if ( variable_39 . func_116 ( ) ) variable_25 * variable_28 = & variable_39 . func_117 ( ) ; if ( variable_41 :: func_118 ( variable_28 ) )  variable_41 :: func_119 ( variable_25 * variable_28 ) return func_120 ( variable_28 ) == & variable_42 ; variable_25 * variable_13 = variable_41 :: func_121 ( variable_28 ) ;  variable_41 :: func_122 ( variable_25 * variable_43 ) jsval variable_44 = func_123 ( variable_43 , variable_45 ) ; variable_25 * variable_13 = variable_44 . func_124 ( ) ; return variable_13 ; switch ( variable_22 :: func_125 ( variable_13 ) )  variable_22 :: func_126 ( variable_25 * variable_13 ) jsval variable_9 = func_127 ( variable_13 , variable_26 ) ; return func_128 ( variable_9 . func_129 ( ) ) ; return false ; return false ; return false ; * variable_78 < variable_53 * > ( variable_79 ) = variable_9 if ( variable_39 . func_130 ( ) ) * variable_78 < void * * > ( variable_79 ) = variable_33 variable_18 :: variable_83 < variable_25 * > func_131 ( variable_6 , variable_52 :: func_132 ( variable_46 ) ) ;  variable_52 :: func_133 ( variable_25 * variable_28 ) jsval variable_53 = func_134 ( variable_28 , variable_54 ) ; return & variable_53 . func_135 ( ) ; if ( variable_37 ) TypeCode variable_84 = variable_22 :: func_136 ( variable_38 ) ;  variable_22 :: func_137 ( variable_25 * variable_13 ) jsval variable_9 = func_138 ( variable_13 , variable_26 ) ; return func_139 ( variable_9 . func_140 ( ) ) ; bool variable_85 = variable_22 :: func_141 ( variable_86 ) == variable_24 ;  variable_22 :: func_142 ( variable_25 * variable_13 ) jsval variable_9 = func_143 ( variable_13 , variable_26 ) ; return func_144 ( variable_9 . func_145 ( ) ) ; if ( variable_84 == variable_87 && variable_85 ) if ( variable_84 == variable_88 ) variable_25 * variable_89 = variable_65 :: func_146 ( variable_38 ) ;  variable_65 :: func_147 ( variable_25 * variable_28 ) jsval variable_53 = func_148 ( variable_28 , variable_69 ) ; return & variable_53 . func_149 ( ) ; if ( variable_85 || variable_22 :: func_150 ( variable_86 , variable_89 ) )  variable_22 :: func_151 ( variable_25 * variable_47 , variable_25 * variable_48 ) if ( variable_47 == variable_48 ) return true ; TypeCode variable_49 = func_152 ( variable_47 ) ; TypeCode variable_50 = func_153 ( variable_48 ) ; if ( variable_49 != variable_50 ) return false ; switch ( variable_49 ) variable_25 * variable_51 = variable_52 :: func_154 ( variable_47 ) ; variable_25 * variable_55 = variable_52 :: func_155 ( variable_48 ) ; return func_156 ( variable_51 , variable_55 ) ; variable_10 * variable_56 = variable_12 :: func_157 ( variable_47 ) ; variable_10 * variable_57 = variable_12 :: func_158 ( variable_48 ) ; if ( variable_56 -> variable_58 != variable_57 -> variable_58 ) return false ; if ( ! func_159 ( variable_56 -> variable_23 , variable_57 -> variable_23 ) ) return false ; if ( variable_56 -> variable_59 . func_160 ( ) != variable_57 -> variable_59 . func_161 ( ) ) return false ; if ( variable_56 -> variable_60 != variable_57 -> variable_60 ) return false ; if ( ! func_162 ( variable_56 -> variable_59 [ variable_61 ] , variable_57 -> variable_59 [ variable_61 ] ) ) return false ; return true ; size_t variable_62 = 0 , variable_63 = 0 ; bool variable_64 = variable_65 :: func_163 ( variable_47 , & variable_62 ) ; bool variable_68 = variable_65 :: func_164 ( variable_48 , & variable_63 ) ; if ( variable_64 != variable_68 || ( variable_64 && variable_62 != variable_63 ) ) return false ; variable_25 * variable_51 = variable_65 :: func_165 ( variable_47 ) ; variable_25 * variable_55 = variable_65 :: func_166 ( variable_48 ) ; return func_167 ( variable_51 , variable_55 ) ; return false ; return true ; * variable_78 < void * * > ( variable_79 ) = variable_90 if ( variable_91 && variable_39 . func_168 ( ) ) if ( variable_39 . func_169 ( ) && func_170 ( variable_40 ) ) if ( variable_39 . func_171 ( ) && func_172 ( variable_40 ) ) if ( ! func_173 ( variable_86 , variable_40 , variable_6 ) ) bool func_174 ( variable_25 * variable_86 , variable_25 * variable_40 , variable_1 * variable_6 ) TypeCode variable_92 = variable_22 :: func_175 ( variable_86 ) ;  variable_22 :: func_176 ( variable_25 * variable_13 ) jsval variable_9 = func_177 ( variable_13 , variable_26 ) ; return func_178 ( variable_9 . func_179 ( ) ) ; if ( variable_92 == variable_24 || variable_92 == variable_93 ) return true ; TypeCode variable_94 ; switch ( func_180 ( variable_40 ) ) variable_94 = variable_95 ; variable_94 = variable_96 ; variable_94 = variable_97 ; variable_94 = variable_98 ; variable_94 = variable_99 ; variable_94 = variable_100 ; variable_94 = variable_101 ; variable_94 = variable_102 ; return false ; return variable_94 == variable_92 ; if ( ! variable_91 ) void * variable_103 ; variable_18 :: AutoCheckCannotGC variable_104 ; variable_103 = func_181 ( variable_40 , variable_104 ) ; if ( ! variable_103 ) * variable_78 < void * * > ( variable_79 ) = variable_103 RootedObject func_182 ( variable_6 , variable_65 :: func_183 ( variable_46 ) ) ;  variable_65 :: func_184 ( variable_25 * variable_28 ) jsval variable_53 = func_185 ( variable_28 , variable_69 ) ; return & variable_53 . func_186 ( ) ; size_t variable_105 = variable_65 :: func_187 ( variable_46 ) ;  variable_65 :: func_188 ( variable_25 * variable_28 ) jsval variable_66 = func_189 ( variable_28 , variable_67 ) ; if ( variable_66 . func_190 ( ) ) return variable_66 . func_191 ( ) ; return variable_31 < size_t > ( variable_66 . func_192 ( ) ) ; if ( variable_39 . func_193 ( ) ) if ( variable_39 . func_194 ( ) && func_195 ( variable_6 , variable_40 ) ) uint32_t variable_106 ; if ( ! func_196 ( variable_6 , variable_40 , & variable_106 ) || variable_105 != size_t ( variable_106 ) ) size_t variable_107 = variable_22 :: func_197 ( variable_86 ) ;  variable_22 :: func_198 ( variable_25 * variable_28 ) jsval variable_29 = func_199 ( variable_28 , variable_30 ) ; if ( variable_29 . func_200 ( ) ) return variable_29 . func_201 ( ) ; return variable_31 < size_t > ( variable_29 . func_202 ( ) ) ; size_t variable_108 = variable_107 * variable_105 ; auto variable_109 = variable_6 -> variable_32 < char > ( variable_108 ) if ( ! variable_109 ) for ( uint32_t variable_61 = 0 ; variable_61 < variable_106 ; ++ variable_61 ) RootedValue func_203 ( variable_6 ) ; if ( ! func_204 ( variable_6 , variable_40 , variable_61 , & variable_110 ) ) char * variable_111 = variable_109 . func_205 ( ) + variable_107 * variable_61 ; if ( ! func_206 ( variable_6 , variable_110 , variable_86 , variable_111 , false , variable_33 ) ) memcpy ( variable_79 , variable_109 . func_207 ( ) , variable_108 ) ;
