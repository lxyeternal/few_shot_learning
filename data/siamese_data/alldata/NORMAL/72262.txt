 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_2 ) * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 static void func_0 ( variable_1 variable_2 variable_3 * variable_4 ) variable_5 * variable_6 ; bool variable_7 ; int variable_8 = 0 ; mtime_t variable_9 = - 1 , variable_10 ; if ( ! variable_4 -> variable_11 ) if ( variable_4 -> variable_11 >= 7 && ! memcmp ( variable_4 -> variable_12 , " Annodex " , 7 ) ) if ( variable_4 -> variable_11 >= 7 && ! memcmp ( variable_4 -> variable_12 , " AnxData " , 7 ) ) if ( variable_13 -> variable_14 . variable_15 == variable_16 && variable_4 -> variable_12 [ 0 ] & variable_17 ) if ( variable_13 -> variable_18 ) bool variable_19 ; variable_13 -> variable_20 ++ ; switch ( variable_13 -> variable_14 . variable_15 ) if ( variable_13 -> variable_20 == 3 ) variable_13 -> variable_18 = 0 ; variable_19 = true ; if ( ! variable_13 -> variable_14 . variable_21 . variable_22 && variable_13 -> variable_20 == 2 ) variable_13 -> variable_18 = 0 ; if ( variable_13 -> variable_14 . variable_21 . variable_22 ) variable_13 -> variable_18 = 0 ; if ( variable_4 -> variable_11 >= 9 ) variable_4 -> variable_12 += 9 ; variable_4 -> variable_11 -= 9 ; variable_19 = false ; if ( variable_13 -> variable_20 == variable_13 -> variable_23 ) variable_13 -> variable_18 = 0 ; variable_19 = true ; variable_13 -> variable_18 = 0 ; variable_19 = false ; if ( ! variable_19 ) variable_13 -> variable_24 += variable_4 -> variable_11 ; variable_13 -> variable_25 = realloc ( variable_13 -> variable_25 , variable_13 -> variable_24 ) ; if ( variable_13 -> variable_25 ) variable_13 -> variable_24 = 0 ; variable_13 -> variable_25 = NULL ; if ( func_1 ( & variable_13 -> variable_24 , & variable_13 -> variable_25 , variable_4 -> variable_11 , variable_4 -> variable_12 ) ) variable_13 -> variable_24 = 0 ; variable_13 -> variable_25 = NULL ; if ( variable_13 -> variable_24 > 0 ) if ( ! variable_13 -> variable_18 ) variable_13 -> variable_14 . variable_26 = variable_13 -> variable_24 ; variable_13 -> variable_14 . variable_27 = malloc ( variable_13 -> variable_24 ) ; if ( variable_13 -> variable_14 . variable_27 ) variable_13 -> variable_14 . variable_26 = 0 ; variable_7 = false ; if ( variable_13 -> variable_14 . variable_15 == variable_28 || variable_13 -> variable_14 . variable_15 == variable_29 || variable_13 -> variable_14 . variable_15 == variable_30 ) if ( variable_13 -> variable_31 >= 0 ) variable_13 -> variable_32 = variable_13 -> variable_31 ; variable_9 = variable_13 -> variable_31 ; variable_10 = variable_13 -> variable_33 ; if ( variable_13 -> variable_14 . variable_15 != variable_28 && variable_13 -> variable_14 . variable_15 != variable_29 && variable_13 -> variable_14 . variable_15 != variable_30 && variable_13 -> variable_31 >= 0 ) variable_13 -> variable_32 = variable_13 -> variable_31 ; variable_9 = variable_13 -> variable_31 ; if ( ! variable_7 ) if ( variable_4 -> variable_11 <= 0 ) if ( ! ( variable_6 = func_2 ( variable_34 , variable_4 -> variable_11 ) ) ) if ( variable_13 -> variable_35 > 0 ) variable_6 -> variable_36 |= variable_37 ; variable_13 -> variable_35 -- ; if ( variable_9 == 0 ) variable_9 = variable_38 ; if ( variable_9 == - 1 && variable_10 == 0 ) variable_9 = variable_38 ; if ( variable_9 == - 1 ) variable_9 = variable_39 ; if ( variable_13 -> variable_14 . variable_40 == variable_41 ) variable_6 -> variable_42 = variable_6 -> variable_9 = variable_9 ; if ( variable_13 -> variable_14 . variable_40 == variable_43 ) variable_6 -> variable_42 = variable_6 -> variable_9 = variable_9 ; variable_6 -> variable_44 = 0 ; if ( variable_13 -> variable_14 . variable_15 == variable_45 ) variable_6 -> variable_42 = variable_6 -> variable_9 = variable_9 ; if ( ( variable_4 -> variable_46 & ( ( 1 << variable_13 -> variable_47 ) - 1 ) ) == 0 ) variable_6 -> variable_36 |= variable_48 ; if ( variable_13 -> variable_14 . variable_15 == variable_49 ) ogg_int64_t variable_50 = variable_4 -> variable_46 >> 31 ; ogg_int64_t variable_51 = ( variable_4 -> variable_46 >> 9 ) & 0 variable_52 ; uint64_t variable_53 = variable_50 + variable_51 ; variable_6 -> variable_42 = variable_13 -> variable_31 ; variable_6 -> variable_9 = variable_39 ; if ( - 1 != variable_4 -> variable_46 ) variable_6 -> variable_9 = variable_53 * func_3 ( 1000000 ) / variable_13 -> variable_54 / 2 ; variable_6 -> variable_42 = variable_9 ; variable_6 -> variable_9 = variable_39 ; if ( variable_13 -> variable_14 . variable_15 != variable_28 && variable_13 -> variable_14 . variable_15 != variable_29 && variable_13 -> variable_14 . variable_15 != variable_30 && variable_13 -> variable_14 . variable_15 != variable_55 && variable_13 -> variable_14 . variable_15 != variable_45 && variable_13 -> variable_14 . variable_15 != variable_56 && variable_13 -> variable_14 . variable_15 != variable_49 && variable_13 -> variable_14 . variable_15 != variable_57 ) variable_8 = ( * variable_4 -> variable_12 & variable_58 ) >> 6 ; variable_8 |= ( * variable_4 -> variable_12 & variable_59 ) << 1 ; if ( variable_13 -> variable_14 . variable_15 == variable_16 ) int variable_60 , variable_61 = 0 ; if ( variable_8 > 0 && variable_4 -> variable_11 >= variable_8 + 1 ) for ( variable_60 = 0 , variable_61 = 0 ; variable_60 < variable_8 ; variable_60 ++ ) variable_61 = variable_61 << 8 ; variable_61 += * ( variable_4 -> variable_12 + variable_8 - variable_60 ) ; if ( variable_4 -> variable_11 - 1 - variable_8 > 2 || ( variable_4 -> variable_12 [ variable_8 + 1 ] != ' ' && variable_4 -> variable_12 [ variable_8 + 1 ] != 0 && variable_4 -> variable_12 [ variable_8 + 1 ] != ' \n ' && variable_4 -> variable_12 [ variable_8 + 1 ] != ' \r ' ) ) variable_6 -> variable_44 = ( variable_62 ) variable_61 * 1000 ; variable_8 ++ ; if ( variable_6 -> variable_63 >= ( unsigned int ) variable_8 ) variable_6 -> variable_63 -= variable_8 ; variable_6 -> variable_63 = 0 ; memcpy ( variable_6 -> variable_64 , variable_4 -> variable_12 + variable_8 , variable_4 -> variable_11 - variable_8 ) ; func_4 ( variable_34 -> variable_65 , variable_13 -> variable_66 , variable_6 ) ;
 int func_0 ( variable_0 * variable_1 , variable_2 * * variable_3 ) int variable_4 = 7 ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_5 != 0 ) variable_7 = & variable_5 ; variable_8 = & variable_7 ; variable_9 = & variable_8 ; variable_10 = & variable_9 ; variable_11 = & variable_10 ; variable_12 = & variable_11 ; variable_13 = & variable_12 ; variable_14 = & variable_13 ; variable_15 = & variable_14 ; variable_16 = & variable_15 ; func_3 ( variable_4 , variable_16 ) ; void func_4 ( int variable_17 , char * * * * * * * * * * * variable_18 ) variable_17 -- ; if ( variable_17 > 0 ) func_5 ( variable_17 , variable_18 ) ; void func_6 ( int variable_17 , char * * * * * * * * * * * variable_18 ) variable_17 -- ; if ( variable_17 > 0 ) func_7 ( variable_17 , variable_18 ) ; void func_8 ( int variable_17 , char * * * * * * * * * * * variable_18 ) size_t variable_19 ; variable_17 -- ; if ( variable_17 > 0 ) variable_20 = ( ( char * ) ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * variable_18 ) ) ) ) ) ) ) ) ) ) ) ; variable_19 = strlen ( variable_20 ) ; func_9 ( variable_21 , variable_22 , " stonesoup_taint_size " , variable_19 , & variable_19 , " INITIAL - STATE " ) ; if ( variable_19 >= 1600 ) variable_23 = malloc ( variable_19 * sizeof ( char * ) ) ; func_10 ( variable_21 , variable_22 , " stonesoup_taint_size " , variable_19 , & variable_19 , " INITIAL - STATE " ) ; func_11 ( variable_21 , variable_24 , " stonesoup_malloced_buff " , variable_23 , " INTIAL - STATE " ) ; if ( variable_23 != 0 ) for ( variable_25 = 0 ; variable_25 < variable_19 ; ++ variable_25 ) variable_23 [ variable_25 ] = malloc ( variable_19 * variable_19 * sizeof ( char ) ) ; func_12 ( variable_21 , variable_22 , " stonesoup_ss_i " , variable_25 , & variable_25 , " CROSSOVER - STATE " ) ; func_13 ( variable_21 , variable_24 , " stonesoup_malloced_buff [ stonesoup_ss_i ] " , variable_23 [ variable_25 ] , " CROSSOVER - STATE " ) ; if ( variable_23 [ variable_25 ] == 0 && variable_26 == 12 ) if ( variable_23 [ variable_25 ] != 0 ) for ( variable_27 = 0 ; variable_27 < variable_19 ; ++ variable_27 ) memcpy ( variable_23 [ variable_25 ] + variable_27 * variable_19 , variable_20 , variable_19 ) ; if ( variable_19 % 2 == 0 ) if ( variable_23 [ variable_25 ] != 0 ) free ( variable_23 [ variable_25 ] ) ; func_14 ( variable_21 , variable_24 , " stonesoup_malloced_buff [ stonesoup_ss_i ] " , variable_23 [ variable_25 ] , " CROSSOVER - STATE : Free " ) ; free ( variable_23 ) ;
