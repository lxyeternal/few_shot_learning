 static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; * variable_21 = variable_20 ; if ( variable_20 > 0 && variable_20 <= 20 ) for ( variable_22 = 0 ; variable_22 < ( size_t ) variable_20 ; variable_22 ++ )
 int func_0 ( void ) struct variable_0 * variable_1 ; const struct variable_2 * variable_2 ; char variable_3 [ 20 ] ; uid_t variable_4 ; variable_2 = func_1 ( ) ; variable_1 = variable_2 -> variable_1 ; variable_4 = func_2 ( variable_2 -> variable_5 , variable_1 -> variable_4 ) ; if ( variable_1 -> variable_6 && variable_1 -> variable_7 ) if ( ! variable_1 -> variable_6 ) sprintf ( variable_3 , " _uid . % u " , variable_4 ) ; variable_6 = func_3 ( variable_3 , true ) ; if ( func_4 ( variable_6 ) ) variable_6 = func_5 ( variable_3 , variable_1 -> variable_4 , variable_8 , variable_2 , variable_9 , NULL ) ; if ( func_6 ( variable_6 ) ) variable_10 = func_7 ( variable_6 ) ; sprintf ( variable_3 , " _uid_ses . % u " , variable_4 ) ; variable_7 = func_8 ( variable_3 , true ) ; if ( func_9 ( variable_7 ) ) variable_7 = func_10 ( variable_3 , variable_1 -> variable_4 , variable_8 , variable_2 , variable_9 , NULL ) ; if ( func_11 ( variable_7 ) ) variable_10 = func_12 ( variable_7 ) ; variable_10 = func_13 ( variable_7 , variable_6 ) ; if ( variable_10 < 0 ) variable_1 -> variable_6 = variable_6 ; variable_1 -> variable_7 = variable_7 ; func_14 ( variable_7 ) ; func_15 ( variable_6 ) ; func_16 ( " = %d " , variable_10 ) ; return variable_10 ;
