 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; if ( func_3 ( ) ) int func_4 ( ) return ( rand ( ) % 2 ) ; fprintf ( variable_5 , " %s \n " , variable_0 ) ; fprintf ( variable_5 , " %s \n " , variable_0 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 , variable_3 * * variable_4 , const char * variable_5 , variable_6 * variable_7 , variable_8 * variable_9 ) return func_1 ( variable_4 , variable_7 , variable_5 , variable_2 , variable_9 ) ; static variable_0 * func_2 ( variable_3 * * variable_4 , variable_6 * variable_7 , const char * variable_5 , variable_1 * variable_2 , variable_8 * variable_9 ) * variable_7 = 0 ; if ( func_3 ( variable_2 ) && func_4 ( variable_2 ) ) svn_boolean_t func_5 ( variable_1 * variable_2 ) if ( variable_2 -> variable_10 == ( ( void * ) 0 ) ) return 0 ; return ( variable_2 -> variable_10 ) ( variable_2 -> variable_11 ) ; svn_boolean_t func_6 ( variable_1 * variable_2 ) return variable_2 -> variable_12 != ( ( void * ) 0 ) ; variable_0 * variable_13 = func_7 ( variable_4 , variable_7 , variable_5 , variable_2 , variable_9 ) ; if ( variable_13 ) while ( 0 ) static variable_0 * func_8 ( variable_3 * * variable_4 , variable_6 * variable_7 , const char * variable_5 , variable_1 * variable_2 , variable_8 * variable_9 ) char variable_14 [ 80 + 1 ] ; apr_size_t variable_15 ; const char * variable_16 ; const size_t variable_17 = strlen ( variable_5 ) ; variable_0 * variable_13 = func_9 ( variable_2 , & variable_18 , variable_9 ) ; variable_0 * func_10 ( variable_1 * variable_2 , variable_19 * * variable_18 , variable_8 * variable_9 ) if ( variable_2 -> variable_12 == ( ( void * ) 0 ) ) return func_11 ( variable_20 , ( ( void * ) 0 ) , ( ( void * ) 0 ) ) ; return ( variable_2 -> variable_12 ) ( variable_2 -> variable_11 , variable_18 , variable_9 ) ; if ( variable_13 ) while ( 0 ) variable_15 = 80 ; variable_0 * variable_13 = func_12 ( variable_2 , variable_14 , & variable_15 ) ; variable_0 * func_13 ( variable_1 * variable_2 , char * variable_14 , variable_21 * variable_22 ) if ( ! ( variable_2 -> variable_23 != ( ( void * ) 0 ) ) ) variable_0 * variable_13 = func_14 ( ! 0 , "  stream . c " , 143 , " stream -> read_fn != NULL " ) ; if ( variable_13 ) return variable_13 ; while ( 0 ) while ( 0 ) return ( variable_2 -> variable_23 ) ( variable_2 -> variable_11 , variable_14 , variable_22 ) ; if ( variable_13 ) while ( 0 ) variable_14 [ variable_15 ] = ' \0 ' ; variable_16 = ( strstr ( variable_14 , variable_5 ) ) ; if ( variable_16 != ( ( void * ) 0 ) ) if ( variable_15 < 80 ) variable_3 * variable_24 ; variable_24 = func_15 ( ( 2 * 80 ) , variable_9 ) ; variable_15 = 80 ; variable_0 * variable_13 = func_16 ( variable_2 , variable_24 -> variable_25 + variable_24 -> variable_22 , & variable_15 ) ; variable_0 * func_17 ( variable_1 * variable_2 , char * variable_14 , variable_21 * variable_22 ) if ( ! ( variable_2 -> variable_23 != ( ( void * ) 0 ) ) ) variable_0 * variable_13 = func_18 ( ! 0 , "  stream . c " , 143 , " stream -> read_fn != NULL " ) ; if ( variable_13 ) return variable_13 ; while ( 0 ) while ( 0 ) return ( variable_2 -> variable_23 ) ( variable_2 -> variable_11 , variable_14 , variable_22 ) ; if ( variable_13 ) while ( 0 ) variable_24 -> variable_22 += variable_15 ; variable_24 -> variable_25 [ variable_24 -> variable_22 ] = ' \0 ' ; variable_16 = ( strstr ( ( variable_24 -> variable_25 + variable_24 -> variable_22 - variable_15 - ( variable_17 - 1 ) ) , variable_5 ) ) ; if ( variable_15 < 80 && variable_16 == ( ( void * ) 0 ) ) while ( variable_16 == ( ( void * ) 0 ) ) variable_26 = ( variable_16 - ( variable_24 -> variable_25 ) ) + variable_17 ; variable_24 -> variable_22 = ( variable_16 - ( variable_24 -> variable_25 ) ) ; variable_24 -> variable_25 [ variable_24 -> variable_22 ] = 0 ; return func_19 ( variable_2 , variable_26 ) ; variable_0 * func_20 ( variable_1 * variable_2 , apr_size_t variable_22 ) if ( variable_2 -> variable_27 == ( ( void * ) 0 ) ) return func_21 ( variable_2 -> variable_11 , variable_22 , variable_2 -> variable_23 ) ; static variable_0 * func_22 ( void * variable_11 , apr_size_t variable_22 , svn_read_fn_t variable_23 ) apr_size_t variable_28 = variable_22 ; while ( variable_28 > 0 && variable_29 > 0 ) variable_29 = ( sizeof ( variable_14 ) < variable_28 ? sizeof ( variable_14 ) : variable_28 ) ; variable_0 * variable_13 = func_23 ( variable_11 , variable_14 , & variable_29 ) ; if ( variable_13 ) return variable_13 ; variable_28 -= variable_29 ; return ( variable_2 -> variable_27 ) ( variable_2 -> variable_11 , variable_22 ) ;
