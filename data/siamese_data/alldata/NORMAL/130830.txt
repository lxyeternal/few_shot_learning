 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 void func_0 ( variable_0 * variable_1 , gint variable_2 , gint variable_3 , gint variable_4 , gint variable_5 , const guchar * variable_6 , guint variable_7 ) guint variable_8 ; guint variable_9 ; for ( variable_9 = variable_3 ; variable_9 <= variable_5 ; variable_9 += 64 - variable_9 % 64 ) for ( variable_8 = variable_2 ; variable_8 <= variable_4 ; variable_8 += 64 - variable_8 % 64 ) variable_10 * variable_11 = func_1 ( variable_1 , variable_8 , variable_9 , ! 0 , ! 0 ) ; variable_10 * func_2 ( variable_0 * variable_1 , gint variable_12 , gint variable_13 , gboolean variable_14 , gboolean variable_15 ) if ( variable_1 != ( ( void * ) 0 ) ) return ( ( void * ) 0 ) ; while ( 0 ) return func_3 ( variable_1 , func_4 ( variable_1 , variable_12 , variable_13 ) , variable_14 , variable_15 ) ; inline static gint func_5 ( variable_0 * variable_1 , gint variable_12 , gint variable_13 ) if ( variable_12 < 0 || variable_12 >= variable_1 -> variable_16 || variable_13 < 0 || variable_13 >= variable_1 -> variable_17 ) return - 1 ; return variable_13 / 64 * variable_1 -> variable_18 + variable_12 / 64 ; variable_10 * func_6 ( variable_0 * variable_1 , gint variable_19 , gboolean variable_14 , gboolean variable_15 ) variable_10 * variable_11 ; gint variable_20 ; if ( variable_1 != ( ( void * ) 0 ) ) return ( ( void * ) 0 ) ; while ( 0 ) variable_20 = variable_1 -> variable_21 * variable_1 -> variable_18 ; if ( variable_19 < 0 || variable_19 >= variable_20 ) return ( ( void * ) 0 ) ; variable_11 = variable_1 -> variable_22 [ variable_19 ] ; if ( variable_14 ) if ( variable_15 ) if ( variable_11 -> variable_23 > 1 ) variable_10 * new = func_7 ( ( variable_11 -> variable_24 ) new -> variable_25 = variable_11 -> new -> variable_26 = variable_11 -> new -> variable_27 = ( variable_11 -> variable_27 new -> variable_28 = ( new -> variable_25 ) * ( new -> variable_26 ) * ( new -> variable_24 new -> variable_29 = ( ( guchar * ) ( func_8 ( ( new -> variable_28 ) , sizeof ( variable_30 ) ) ) ) if ( variable_11 -> variable_29 ) memcpy ( ( new -> variable_29 ) , ( variable_11 -> variable_29 ) , ( new -> variable_28 ) ) memcpy ( ( new -> variable_29 ) , ( variable_11 -> variable_29 ) , ( new -> variable_28 ) ) func_9 ( new , variable_1 , variable_19 variable_11 = new variable_11 -> variable_31 ++ ; variable_11 -> variable_32 = ( ! 0 ) ; return variable_11 ; const guchar * variable_33 = variable_6 + variable_7 * ( variable_9 - variable_3 ) + ( variable_1 -> variable_24 ) * ( variable_8 - variable_2 ) ; variable_30 * variable_34 = variable_11 -> variable_29 + ( ( variable_9 & ( 64 - 1 ) ) * ( variable_11 -> variable_25 ) + ( variable_8 & ( 64 - 1 ) ) ) * ( variable_11 -> variable_24 ) ; guint variable_35 ; guint variable_36 ; guint variable_37 ; variable_35 = ( variable_11 -> variable_26 ) - variable_9 % 64 ; if ( variable_35 > variable_5 - variable_9 + 1 ) variable_35 = variable_5 - variable_9 + 1 ; variable_36 = ( variable_11 -> variable_25 ) - variable_8 % 64 ; if ( variable_36 > variable_4 - variable_8 + 1 ) variable_36 = variable_4 - variable_8 + 1 ; variable_37 = ( ( variable_11 -> variable_25 ) * ( variable_11 -> variable_24 ) ) ; while ( variable_35 -- ) memcpy ( variable_34 , variable_33 , ( variable_36 * ( variable_1 -> variable_24 ) ) ) ; variable_33 += variable_7 ; variable_34 += variable_37 ;
