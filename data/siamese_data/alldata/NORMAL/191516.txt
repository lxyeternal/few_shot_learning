 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 . func_14 ( ( char * ) variable_0 ) ;
 void func_0 ( ) int variable_0 ; union shoebrush_polypharmacon variable_1 ; char * variable_2 ; if ( func_1 ( & variable_3 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_2 != 0 ) variable_1 . variable_4 = variable_2 ; variable_0 = 1 ; variable_5 = & variable_1 ; variable_6 = ( ( union shoebrush_polypharmacon * ) ( ( ( unsigned long ) variable_5 ) * variable_0 * variable_0 ) ) + 5 ; variable_7 = ( ( char * ) ( * ( variable_6 - 5 ) ) . variable_4 ) ; variable_8 = ( char * ) malloc ( 8 * sizeof ( char ) ) ; if ( variable_8 != NULL ) strncpy ( variable_8 , variable_7 , strlen ( variable_7 ) + 1 ) ; for ( ; variable_9 < strlen ( variable_8 ) ; ++ variable_9 ) variable_8 [ variable_9 ] = func_3 ( variable_8 [ variable_9 ] ) ; int func_4 ( int variable_10 ) if ( variable_10 >= 97 && variable_10 <= 122 ) return variable_10 - 32 ; return variable_10 ; func_5 ( " %s \n " , variable_8 ) ; void func_6 ( char * variable_11 , . . . ) va_start ( variable_12 , variable_11 ) ; vfprintf ( variable_13 , variable_11 , variable_12 ) ; free ( variable_8 ) ;
