 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;
 static int func_0 ( struct variable_0 * variable_0 , int variable_1 ) unsigned long variable_2 = func_1 ( variable_0 ) ; unsigned long variable_3 ; struct variable_4 * variable_5 ; unsigned int variable_6 ; unsigned long variable_7 ; struct variable_8 * variable_9 = func_2 ( variable_0 ) ; variable_3 = variable_9 -> variable_10 ; variable_11 = func_3 ( variable_0 -> variable_12 , variable_3 ) ; if ( ! variable_11 ) variable_7 = variable_9 -> variable_13 ; variable_5 = ( struct iso_directory_record * ) ( variable_11 -> variable_14 + variable_7 ) ; variable_6 = * ( unsigned char * ) variable_5 ; if ( variable_7 + variable_6 > variable_2 ) int variable_15 = variable_2 - variable_7 ; variable_16 = kmalloc ( variable_6 , variable_17 ) ; if ( variable_16 == NULL ) memcpy ( variable_16 , variable_11 -> variable_14 + variable_7 , variable_15 ) ; memcpy ( ( char * ) variable_16 + variable_15 , variable_11 -> variable_14 , variable_6 - variable_15 ) ; variable_5 = variable_16 ; if ( variable_5 -> variable_18 [ - variable_19 ] & 2 ) variable_9 -> variable_20 = func_4 ( variable_5 -> variable_21 ) ; if ( variable_5 -> variable_18 [ - variable_19 ] & 0 variable_22 ) variable_9 -> variable_23 = 0 ; variable_9 -> variable_24 = 0 ; variable_0 -> variable_25 = func_5 ( variable_5 -> variable_21 ) ; variable_0 -> variable_25 &= 0 variable_26 ; if ( variable_5 -> variable_27 [ 0 ] ) variable_0 -> variable_25 = 0 ; if ( variable_5 -> variable_28 [ 0 ] != 0 ) func_6 ( variable_29 " ISOFS : File unit size != 0  for ISO file ( % ld ) . \n " variable_0 -> variable_30 ) if ( ( variable_5 -> variable_18 [ - variable_19 ] & ~ 2 ) != 0 ) func_7 ( variable_29 " ( % ld % x ) . \n " variable_0 -> variable_30 , variable_5 -> variable_18 [ - variable_19 ] ) variable_0 -> variable_31 . variable_32 = variable_0 -> variable_33 . variable_32 = variable_0 -> variable_34 . variable_32 = func_8 ( variable_5 -> variable_35 , variable_19 ) ; variable_0 -> variable_31 . variable_36 = variable_0 -> variable_33 . variable_36 = variable_0 -> variable_34 . variable_36 = 0 ; variable_9 -> variable_37 = ( func_9 ( variable_5 -> variable_38 ) + func_10 ( variable_5 -> variable_39 ) ) ; variable_0 -> variable_40 = ( variable_0 -> variable_25 + 511 ) >> 9 ; func_11 ( variable_5 , variable_0 , variable_1 ) ; variable_0 -> variable_41 = variable_42 -> variable_43 ; variable_0 -> variable_44 = variable_42 -> variable_45 ; if ( func_12 ( variable_0 -> variable_46 ) && variable_42 -> variable_47 && variable_42 -> variable_48 != variable_49 ) variable_0 -> variable_46 = variable_50 | variable_42 -> variable_48 ; if ( func_13 ( variable_0 -> variable_46 ) && variable_42 -> variable_47 && variable_42 -> variable_51 != variable_49 ) variable_0 -> variable_46 = variable_52 | variable_42 -> variable_51 ; if ( func_14 ( variable_0 -> variable_46 ) ) variable_0 -> variable_53 = & variable_54 ; switch ( variable_9 -> variable_55 ) variable_0 -> variable_56 . variable_57 = & variable_58 ; variable_0 -> variable_56 . variable_57 = & variable_59 ; if ( func_15 ( variable_0 -> variable_46 ) ) if ( func_16 ( variable_0 -> variable_46 ) ) func_17 ( variable_0 , variable_0 -> variable_46 , variable_0 -> variable_60 ) ; kfree ( variable_16 ) ;
