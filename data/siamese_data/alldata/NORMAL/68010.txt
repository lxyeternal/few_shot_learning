 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;
 void variable_0 :: func_0 ( variable_1 * variable_2 ) char * variable_3 = ( char * ) variable_2 -> variable_4 ; char * variable_5 = strtok ( variable_3 , variable_6 ) ; if ( ! variable_5 ) uint32_t variable_7 = atoi ( variable_5 ) ; if ( func_1 ( variable_7 ) ) if ( func_2 ( variable_7 ) ) char variable_8 [ variable_9 ] ; func_3 ( variable_10 , variable_11 , variable_9 , variable_8 ) ; static void func_4 ( variable_12 < variable_13 > & const char * const variable_14 char * variable_5 ) if ( variable_15 > variable_16 - 1 ) if ( variable_17 . func_5 ( ) > 0 ) strcpy ( variable_5 , variable_17 [ 0 ] . func_6 ( ) ) ; for ( uint32_t variable_18 = 1 ; variable_18 < variable_17 . func_7 ( ) ; variable_18 ++ ) strcat ( variable_5 , variable_19 ) ; strcat ( variable_5 , variable_17 [ variable_18 ] . func_8 ( ) ) ;
 static int func_0 ( struct variable_0 * variable_1 , struct variable_2 int * variable_3 , int variable_4 ) struct sockaddr_llc variable_5 ; struct variable_1 * variable_6 = variable_1 -> variable_6 ; struct variable_7 * variable_8 = func_1 ( variable_6 ) ; memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; if ( func_2 ( variable_6 , variable_9 ) ) if ( variable_4 ) if ( variable_6 -> variable_10 != variable_11 ) if ( variable_8 -> variable_12 ) variable_5 . variable_13 = variable_8 -> variable_12 -> variable_14 ; variable_5 . variable_15 = variable_8 -> variable_16 . variable_17 ; if ( ! variable_8 -> variable_18 ) variable_5 . variable_15 = variable_8 -> variable_18 -> variable_19 . variable_17 ; if ( variable_8 -> variable_12 ) variable_5 . variable_13 = variable_8 -> variable_12 -> variable_14 ; memcpy ( & variable_5 . variable_20 , variable_8 -> variable_12 -> variable_21 , variable_22 ) ; variable_5 . variable_23 = variable_24 ; memcpy ( variable_25 , & variable_5 , sizeof ( variable_5 ) ) ;
