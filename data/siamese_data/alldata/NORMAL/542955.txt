 static void func_0 ( size_t & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = strtoul ( variable_4 , NULL , 0 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;
 static void func_0 ( ) if ( 1 ) stdThread variable_0 = NULL ; if ( ! func_1 ( & variable_1 ) ) int func_2 ( variable_2 * variable_3 ) stdThreadLock variable_4 = NULL ; variable_4 = ( variable_2 ) malloc ( sizeof ( * variable_4 ) ) ; if ( variable_4 == NULL ) return 0 ; return 1 ; if ( ! func_3 ( variable_5 , NULL , & variable_0 ) ) int func_4 ( stdThreadRoutine variable_6 , void * variable_7 , variable_8 * variable_9 ) uintptr_t variable_10 ; stdThread variable_11 ; variable_11 = ( variable_8 ) malloc ( sizeof ( * variable_11 ) ) ; if ( variable_11 == NULL ) return 0 ; variable_11 -> variable_6 = variable_6 ; variable_11 -> variable_7 = variable_7 ; variable_10 = func_5 ( NULL , 0 , variable_12 , variable_11 , 0 , NULL ) ; if ( variable_10 == 0 ) return 0 ; return 1 ; variable_0 = NULL ; if ( variable_0 && func_6 ( variable_0 ) ) int func_7 ( stdThread variable_9 ) DWORD variable_13 ; variable_13 = WaitForSingleObject ( ( variable_14 ) variable_9 -> variable_10 , variable_15 ) ; if ( variable_13 != variable_16 ) return 0 ; return 1 ; func_8 ( variable_0 ) ; int func_9 ( stdThread variable_9 ) free ( variable_9 ) ;
