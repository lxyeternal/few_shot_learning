 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , ( 100 - variable_5 - 1 ) * sizeof ( wchar_t ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_9 ( ) ) static int func_10 ( ) return 0 ; HCRYPTPROV variable_21 = 0 ; HCRYPTHASH variable_22 = 0 ; HCRYPTKEY variable_23 = 0 ; char variable_24 [ 100 ] = variable_25 ; BYTE variable_26 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_27 ; variable_27 = func_11 ( variable_26 , sizeof ( variable_26 ) , variable_0 ) ; size_t func_12 ( unsigned char * variable_28 , size_t variable_29 , const wchar_t * variable_30 ) size_t variable_31 = 0 ; while ( variable_31 < variable_29 && iswxdigit ( variable_30 [ 2 * variable_31 ] ) && iswxdigit ( variable_30 [ 2 * variable_31 + 1 ] ) ) int variable_32 ; variable_28 [ variable_31 ] = ( unsigned char ) variable_32 ; return variable_31 ; if ( ! func_13 ( & variable_21 , NULL , variable_33 , variable_34 , 0 ) ) if ( ! func_14 ( variable_21 , variable_35 , 0 , 0 , & variable_22 ) ) if ( ! func_15 ( variable_22 , ( BYTE * ) variable_24 , strlen ( variable_24 ) , 0 ) ) if ( ! func_16 ( variable_21 , variable_36 , variable_22 , 0 , & variable_23 ) ) if ( ! func_17 ( variable_23 , 0 , 1 , 0 , variable_26 , & variable_27 ) ) memcpy ( variable_0 , variable_26 , variable_27 ) ; while ( 0 ) if ( func_18 ( variable_37 , variable_38 , variable_0 , variable_39 , variable_40 , & variable_41 ) != 0 )
 void * func_0 ( void * variable_0 ) struct variable_1 * variable_2 = ( struct stonesoup_data * ) variable_0 ; int variable_3 ; char variable_4 ; char * variable_5 ; int * variable_6 ; variable_6 = malloc ( sizeof ( int ) * variable_2 -> variable_7 ) ; if ( variable_6 != NULL ) for ( variable_8 = 0 ; variable_8 < variable_2 -> variable_7 ; variable_8 ++ ) variable_6 [ variable_8 ] = variable_2 -> variable_7 - variable_8 ; variable_5 = malloc ( sizeof ( char ) * ( variable_2 -> variable_9 + 1 ) ) ; variable_8 = 0 ; while ( variable_2 -> variable_0 [ variable_8 ] != ' \0 ' ) variable_3 = ( int ) ( rand ( ) / ( variable_10 ) variable_11 + 0 . 5 ) ; switch ( variable_2 -> variable_0 [ variable_8 ] ) if ( variable_3 == 0 ) variable_4 = ' < ' ; variable_4 = ' c ' ; if ( variable_3 == 0 ) variable_4 = ' 3 ' ; variable_4 = ' e ' ; if ( variable_3 == 0 ) variable_4 = ' 1 ' ; variable_4 = ' i ' ; if ( variable_3 == 0 ) variable_4 = ' 1 ' ; variable_4 = ' l ' ; if ( variable_3 == 0 ) variable_4 = ' 0 ' ; variable_4 = ' o ' ; if ( variable_3 == 0 ) variable_4 = ' 5 ' ; variable_4 = ' s ' ; if ( variable_3 == 0 ) variable_4 = ' 7 ' ; variable_4 = ' t ' ; variable_4 = variable_2 -> variable_0 [ variable_8 ] ; variable_5 [ variable_8 ] = variable_4 ; variable_8 ++ ;
