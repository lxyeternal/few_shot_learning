 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;
 void func_0 ( variable_0 * variable_1 ) variable_2 = ( ( char * ) ( * ( variable_1 - 5 ) ) ) ; variable_3 = malloc ( sizeof ( char ) * ( strlen ( variable_2 ) + 1 ) ) ; if ( variable_3 != NULL && variable_4 != NULL && ( sscanf ( variable_2 , " %s %s " , variable_4 , variable_3 ) == 2 ) && ( strlen ( variable_3 ) != 0 ) && ( strlen ( variable_4 ) != 0 ) ) func_1 ( variable_5 , variable_6 , " stonesoup_str " , variable_3 , " INITIAL - STATE " ) ; if ( func_2 ( variable_3 ) ) int func_3 ( char * variable_7 ) variable_8 = strchr ( variable_7 , ' / ' ) ; if ( variable_8 == 0 ) variable_9 = func_4 ( variable_3 ) ; char * func_5 ( char * variable_7 ) char * variable_10 = malloc ( sizeof ( char ) * ( strlen ( " / opt / stonesoup / workspace / testData / " ) * strlen ( variable_7 ) + 1 ) ) ; if ( variable_10 == NULL ) strcpy ( variable_10 , " / opt / stonesoup / workspace / testData / " ) ; func_6 ( variable_5 , variable_6 , " abs_path " , variable_10 , " Generated absolute path " ) ; strcat ( variable_10 , variable_7 ) ; return variable_10 ; if ( variable_9 != NULL ) if ( func_7 ( variable_9 ) ) int func_8 ( char * variable_7 ) if ( func_9 ( variable_7 , variable_11 ) != - 1 ) func_10 ( variable_9 , variable_4 ) ; void func_11 ( char * variable_12 , char * variable_13 ) strcat ( variable_14 , variable_12 ) ; strcat ( variable_14 , " . pid " ) ; if ( ( variable_15 = func_12 ( variable_14 , variable_16 | variable_17 , 0666 ) ) == - 1 ) if ( func_13 ( variable_15 , " q " , sizeof ( char ) ) == - 1 ) if ( func_14 ( variable_15 ) == - 1 ) func_15 ( variable_13 ) ; void func_16 ( char * variable_14 ) variable_18 = fopen ( variable_14 , " r " ) ; if ( variable_18 != NULL ) while ( ( variable_19 = fgetc ( variable_18 ) ) != variable_20 ) func_17 ( " %c " , variable_19 ) ; void func_18 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; vfprintf ( variable_23 , variable_21 , variable_22 ) ; fclose ( variable_18 ) ; variable_24 = fopen ( variable_9 , " rb " ) ; fseek ( variable_24 , 0 , 2 ) ; variable_25 = ftell ( variable_24 ) ; rewind ( variable_24 ) ; variable_26 = ( ( char * ) ( malloc ( sizeof ( char ) * ( variable_25 + 1 ) ) ) ) ; if ( variable_26 != NULL ) fread ( variable_26 , sizeof ( char ) , variable_25 , variable_24 ) ; variable_26 [ variable_25 ] = ' \0 ' ; func_19 ( variable_26 ) ; void func_20 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; vfprintf ( variable_23 , variable_21 , variable_22 ) ; free ( variable_26 ) ; fclose ( variable_24 ) ; free ( variable_9 ) ; free ( variable_3 ) ;
