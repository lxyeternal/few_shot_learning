 static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 != 5 ) const char * variable_20 = " output_good . txt " ; if ( variable_0 > 0 && variable_0 <= 20 ) variable_21 = fopen ( variable_20 , " w + " ) ; if ( variable_21 == NULL ) if ( strlen ( variable_22 ) != fwrite ( variable_22 , sizeof ( char ) , strlen ( variable_22 ) , variable_21 ) ) if ( variable_21 ) fclose ( variable_21 ) ;
 void func_0 ( Relation variable_0 , variable_1 * variable_2 , int variable_3 , CommandId variable_4 , int variable_5 , BulkInsertState variable_6 ) TransactionId variable_7 = func_1 ( ) ; variable_1 * variable_8 ; int variable_9 ; int variable_10 ; char * variable_11 = ( ( void * ) 0 ) ; Page variable_12 ; bool variable_13 ; Size variable_14 ; variable_13 = ( ! ( variable_5 & 0 variable_15 ) && ( variable_0 -> variable_16 -> variable_17 ) == ' p ' ) ; variable_14 = ( 8192 * ( 100 - ( ( variable_0 -> variable_18 ? ( ( StdRdOptions * ) ( variable_0 -> variable_18 ) ) -> variable_19 : 100 ) ) ) / 100 ) ; variable_8 = ( func_2 ( variable_20 , variable_3 * sizeof ( variable_1 ) ) ) ; for ( variable_9 = 0 ; variable_9 < variable_3 ; variable_9 ++ ) variable_8 [ variable_9 ] = func_3 ( variable_0 , variable_2 [ variable_9 ] , variable_7 , variable_4 , variable_5 ) ; static HeapTuple func_4 ( Relation variable_0 , HeapTuple variable_21 , TransactionId variable_7 , CommandId variable_4 , int variable_5 ) if ( variable_0 -> variable_16 -> variable_22 ) if ( ! ( ( bool ) ( ( ( ( variable_21 -> variable_23 -> variable_24 ) & 0 variable_25 ? * ( ( Oid * ) ( ( ( char * ) ( variable_21 -> variable_23 ) ) + variable_21 -> variable_23 -> variable_26 - sizeof ( variable_27 ) ) ) : ( ( variable_27 ) 0 ) ) ) != ( ( variable_27 ) 0 ) ) ) ) * ( ( Oid * ) ( ( ( char * ) ( variable_21 -> variable_23 ) ) + variable_21 -> variable_23 -> variable_26 - sizeof ( variable_27 ) ) ) = func_5 ( variable_0 ) ; while ( 0 ) variable_21 -> variable_23 -> variable_24 &= ~ 0 variable_28 ; variable_21 -> variable_23 -> variable_29 &= ~ 0 variable_30 ; variable_21 -> variable_23 -> variable_24 |= 0 variable_31 ; variable_21 -> variable_23 -> variable_32 . variable_33 . variable_34 = variable_7 ; variable_21 -> variable_23 -> variable_32 . variable_33 . variable_35 . variable_36 = variable_4 ; variable_21 -> variable_23 -> variable_24 &= ~ 0 variable_37 ; while ( 0 ) variable_21 -> variable_23 -> variable_32 . variable_33 . variable_38 = 0 ; variable_21 -> variable_39 = variable_0 -> variable_40 ; if ( ( variable_0 -> variable_16 -> variable_41 ) != ' r ' ) return variable_21 ; if ( ( ( variable_21 -> variable_23 -> variable_24 ) & 0 variable_42 ) != 0 || ( variable_21 -> variable_43 ) > ( ( ( variable_44 ) ( ( 8192 - ( ( ( variable_44 ) ( ( ( size_t ) ( & ( ( PageHeaderData * ) 0 ) -> variable_45 ) ) + 4 * sizeof ( variable_46 ) ) ) + ( 8 - 1 ) & ~ ( ( variable_44 ) ( 8 - 1 ) ) ) ) / 4 ) ) & ~ ( ( variable_44 ) ( 8 - 1 ) ) ) ) return func_6 ( variable_0 , variable_21 , ( ( void * ) 0 ) , variable_5 ) ; return variable_21 ; if ( variable_13 ) variable_11 = ( func_7 ( variable_20 , 8192 ) ) ; variable_10 = 0 ; while ( variable_10 < variable_3 ) Buffer variable_47 ; bool variable_48 = ( bool ) 0 ; int variable_49 ; variable_47 = func_8 ( variable_0 , ( variable_8 [ variable_10 ] -> variable_43 ) , 0 , variable_5 , variable_6 , & variable_50 , ( ( void * ) 0 ) ) ; variable_12 = ( ( variable_51 ) ( ( ( ( void ) ( ( bool ) 1 ) ) , ( variable_47 < 0 ? variable_52 [ - variable_47 - 1 ] : ( ( variable_53 ) ( variable_54 + ( ( variable_55 ) ( variable_47 - 1 ) ) * 8192 ) ) ) ) ) ) ; for ( variable_49 = 1 ; variable_10 + variable_49 < variable_3 ; variable_49 ++ ) HeapTuple variable_56 = variable_8 [ variable_10 + variable_49 ] ; if ( func_9 ( variable_12 ) < ( ( ( variable_44 ) ( variable_56 -> variable_43 ) ) + ( 8 - 1 ) & ~ ( ( variable_44 ) ( 8 - 1 ) ) ) + variable_14 ) if ( ( ( ( variable_57 ) variable_12 ) -> variable_58 ) & 0 variable_42 ) variable_48 = ( ( bool ) 1 ) ; ( ( variable_57 ) variable_12 ) -> variable_58 &= ~ 0 variable_42 ; if ( variable_13 ) XLogRecPtr variable_59 ; variable_60 * variable_61 ; XLogRecData variable_62 [ 2 ] ; uint8 variable_63 = 0 variable_64 ; char * variable_65 ; int variable_66 ; char * variable_67 = variable_11 ; bool variable_68 ; variable_68 = ( ( ( ( ( void ) ( ( bool ) 1 ) ) , ( & variable_8 [ variable_10 ] -> variable_69 ) -> variable_70 ) ) == ( ( variable_71 ) 1 ) && ( ( ( ( ( variable_57 ) variable_12 ) -> variable_72 ) <= ( ( size_t ) ( & ( ( PageHeaderData * ) 0 ) -> variable_45 ) ) ? 0 : ( ( ( ( variable_57 ) variable_12 ) -> variable_72 ) - ( ( size_t ) ( & ( ( PageHeaderData * ) 0 ) -> variable_45 ) ) ) / sizeof ( variable_46 ) ) ) == ( ( ( variable_71 ) 1 ) + variable_49 - 1 ) ) ; variable_61 = ( ( xl_heap_multi_insert * ) variable_67 ) ; variable_67 += ( ( size_t ) ( & ( ( xl_heap_multi_insert * ) 0 ) -> variable_73 ) ) ; if ( ! variable_68 ) variable_67 += variable_49 * sizeof ( variable_71 ) ; variable_65 = variable_67 ; variable_61 -> variable_48 = variable_48 ; variable_61 -> variable_74 = variable_0 -> variable_75 ; variable_61 -> variable_76 = func_10 ( variable_47 ) ; variable_61 -> variable_3 = variable_49 ; for ( variable_9 = 0 ; variable_9 < variable_49 ; variable_9 ++ ) HeapTuple variable_56 = variable_8 [ variable_10 + variable_9 ] ; variable_77 * variable_78 ; int variable_79 ; if ( ! variable_68 ) variable_61 -> variable_73 [ variable_9 ] = ( ( ( ( void ) ( ( bool ) 1 ) ) , ( & variable_56 -> variable_69 ) -> variable_70 ) ) ; variable_78 = ( ( xl_multi_insert_tuple * ) ( ( ( variable_44 ) variable_67 ) + ( 2 - 1 ) & ~ ( ( variable_44 ) ( 2 - 1 ) ) ) ) ; variable_67 = ( ( char * ) variable_78 ) + ( ( ( size_t ) ( & ( ( xl_multi_insert_tuple * ) 0 ) -> variable_26 ) ) + sizeof ( variable_80 ) ) ; variable_78 -> variable_29 = variable_56 -> variable_23 -> variable_29 ; variable_78 -> variable_24 = variable_56 -> variable_23 -> variable_24 ; variable_78 -> variable_26 = variable_56 -> variable_23 -> variable_26 ; variable_79 = ( ( variable_56 -> variable_43 ) - ( ( size_t ) ( & ( ( HeapTupleHeaderData * ) 0 ) -> variable_81 ) ) ) ; memcpy ( variable_67 , ( ( ( char * ) ( variable_56 -> variable_23 ) ) + ( ( size_t ) ( & ( ( HeapTupleHeaderData * ) 0 ) -> variable_81 ) ) ) , variable_79 ) ; variable_78 -> variable_79 = variable_79 ; variable_67 += variable_79 ; variable_66 = ( variable_67 - variable_65 ) ; variable_62 [ 0 ] . variable_82 = ( ( char * ) variable_61 ) ; variable_62 [ 0 ] . variable_83 = ( variable_65 - variable_11 ) ; variable_62 [ 0 ] . variable_47 = 0 ; variable_62 [ 0 ] . variable_84 = & variable_62 [ 1 ] ; variable_62 [ 1 ] . variable_82 = variable_65 ; variable_62 [ 1 ] . variable_83 = variable_66 ; variable_62 [ 1 ] . variable_47 = variable_47 ; variable_62 [ 1 ] . variable_85 = ( ( bool ) 1 ) ; variable_62 [ 1 ] . variable_84 = ( ( void * ) 0 ) ; if ( variable_68 ) variable_62 [ 1 ] . variable_47 = 0 ; variable_63 |= 0 variable_86 ; variable_59 = func_11 ( 9 , variable_63 , variable_62 ) ; ( ( variable_57 ) variable_12 ) -> variable_87 = variable_59 ; ( ( variable_57 ) variable_12 ) -> variable_88 = ( ( variable_89 ) variable_90 ) ; variable_10 += variable_49 ;
