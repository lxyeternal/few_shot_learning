 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( variable_2 ) FILE * variable_3 ; variable_3 = fopen ( " passwords . txt " , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 , 100 , variable_3 ) == NULL ) variable_0 [ 0 ] = L ' \0 ' variable_0 [ 0 ] = L ' \0 ' if ( variable_2 ) char variable_4 [ 100 ] = variable_5 ; HCRYPTPROV variable_6 = 0 ; HCRYPTHASH variable_7 = 0 ; HCRYPTKEY variable_8 = 0 ; BYTE variable_9 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_10 ; variable_10 = func_1 ( variable_9 , sizeof ( variable_9 ) , variable_0 ) ; size_t func_2 ( unsigned char * variable_11 , size_t variable_12 , const wchar_t * variable_13 ) size_t variable_14 = 0 ; while ( variable_14 < variable_12 && iswxdigit ( variable_13 [ 2 * variable_14 ] ) && iswxdigit ( variable_13 [ 2 * variable_14 + 1 ] ) ) int variable_15 ; variable_11 [ variable_14 ] = ( unsigned char ) variable_15 ; return variable_14 ; if ( ! func_3 ( & variable_6 , NULL , variable_16 , variable_17 , 0 ) ) if ( ! func_4 ( variable_6 , variable_18 , 0 , 0 , & variable_7 ) ) if ( ! func_5 ( variable_7 , ( BYTE * ) variable_4 , strlen ( variable_4 ) , 0 ) ) if ( ! func_6 ( variable_6 , variable_19 , variable_7 , 0 , & variable_8 ) ) if ( ! func_7 ( variable_8 , 0 , 1 , 0 , variable_9 , & variable_10 ) ) memcpy ( variable_0 , variable_9 , variable_10 ) ; while ( 0 ) if ( func_8 ( variable_20 , variable_21 , variable_0 , variable_22 , variable_23 , & variable_24 ) != 0 )
 static int func_0 ( ) int variable_0 ; variable_0 = func_1 ( ) ; static int func_2 ( ) int variable_0 = 0 ; int variable_1 ; int variable_2 ; variable_3 * variable_4 ; variable_5 * variable_6 ; variable_7 * variable_8 ; variable_9 * variable_10 ; char variable_11 [ 1024 ] ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) variable_13 * variable_14 = variable_15 [ variable_1 ] ; if ( variable_14 -> variable_16 ) for ( variable_2 = 0 ; variable_2 < variable_14 -> variable_17 ; variable_2 ++ ) variable_18 [ variable_2 + variable_14 -> variable_19 ] -> variable_20 = func_3 ( ) ; for ( variable_1 = 0 ; variable_1 < variable_21 ; variable_1 ++ ) variable_4 = variable_22 [ variable_1 ] -> variable_23 ; if ( ! variable_4 -> variable_17 && ! ( variable_4 -> variable_24 -> variable_25 & 0 variable_26 ) ) return - 22 ; for ( variable_1 = 0 ; variable_1 < variable_27 ; variable_1 ++ ) if ( ( variable_0 = func_4 ( variable_28 [ variable_1 ] -> variable_29 , ( ( void * ) 0 ) ) ) < 0 ) return variable_0 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_5 * variable_31 = ( ( void * ) 0 ) ; variable_8 = variable_32 [ variable_1 ] ; variable_4 = variable_22 [ variable_8 -> variable_33 ] -> variable_23 ; variable_10 = func_5 ( variable_8 ) ; static variable_9 * func_6 ( variable_7 * variable_8 ) if ( variable_8 -> variable_34 >= 0 ) return variable_18 [ variable_8 -> variable_34 ] ; return ( ( void * ) 0 ) ; if ( variable_8 -> variable_35 ) variable_6 = variable_8 -> variable_36 -> variable_6 ; if ( variable_10 ) variable_31 = variable_10 -> variable_36 -> variable_6 ; variable_8 -> variable_36 -> variable_37 = variable_10 -> variable_36 -> variable_37 ; variable_6 -> variable_38 = variable_31 -> variable_38 ; variable_6 -> variable_39 = variable_31 -> variable_39 ; if ( variable_8 -> variable_40 ) uint64_t variable_41 ; variable_41 = ( ( variable_42 ) ( variable_31 -> variable_43 ) ) + 16 ; if ( variable_41 > 2147483647 ) return - 22 ; variable_6 -> variable_44 = variable_31 -> variable_44 ; variable_6 -> variable_45 = variable_31 -> variable_45 ; if ( ! variable_6 -> variable_46 ) unsigned int variable_46 ; if ( ! variable_4 -> variable_24 -> variable_46 || ( func_7 ( variable_4 -> variable_24 -> variable_46 , variable_31 -> variable_46 ) ) == ( variable_6 -> variable_44 ) || ! func_8 ( variable_4 -> variable_24 -> variable_46 , variable_31 -> variable_44 , & variable_46 ) ) variable_6 -> variable_46 = variable_31 -> variable_46 ; variable_6 -> variable_47 = variable_31 -> variable_47 ; variable_6 -> variable_48 = variable_31 -> variable_48 ; variable_6 -> variable_49 = variable_31 -> variable_49 ; variable_6 -> variable_50 = variable_31 -> variable_50 ; variable_6 -> variable_51 = ( func_9 ( variable_41 ) ) ; if ( ! variable_6 -> variable_51 ) return - 12 ; memcpy ( ( variable_6 -> variable_51 ) , ( variable_31 -> variable_51 ) , ( variable_31 -> variable_43 ) ) ; variable_6 -> variable_43 = variable_31 -> variable_43 ; variable_6 -> variable_52 = variable_31 -> variable_52 ; variable_6 -> variable_53 = variable_10 -> variable_36 -> variable_53 ; if ( ! strcmp ( variable_4 -> variable_24 -> variable_54 , " avi " ) ) if ( variable_55 < 0 && func_10 ( variable_10 -> variable_36 -> variable_56 ) >= func_11 ( variable_10 -> variable_36 -> variable_57 ) && 0 . 5 / func_12 ( variable_10 -> variable_36 -> variable_56 ) > func_13 ( variable_10 -> variable_36 -> variable_53 ) && 0 . 5 / func_14 ( variable_10 -> variable_36 -> variable_56 ) > func_15 ( variable_31 -> variable_53 ) && func_16 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 && func_17 ( variable_31 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 2 ) variable_6 -> variable_53 . variable_58 = variable_10 -> variable_36 -> variable_56 . variable_59 ; variable_6 -> variable_53 . variable_59 = 2 * variable_10 -> variable_36 -> variable_56 . variable_58 ; variable_6 -> variable_60 = 2 ; if ( variable_55 < 0 && func_18 ( variable_31 -> variable_53 ) * ( variable_31 -> variable_60 ) > 2 * func_19 ( variable_10 -> variable_36 -> variable_53 ) && func_20 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 0 ) variable_6 -> variable_53 = variable_31 -> variable_53 ; variable_6 -> variable_53 . variable_58 *= variable_31 -> variable_60 ; variable_6 -> variable_53 . variable_59 *= 2 ; variable_6 -> variable_60 = 2 ; if ( ! ( variable_4 -> variable_24 -> variable_25 & 0002000 ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " mov " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " mp4 " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " 3 gp " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " 3 g2 " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " psp " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " ipod " ) && strcmp ( variable_4 -> variable_24 -> variable_54 , " f4v " ) ) if ( variable_55 < 0 && variable_31 -> variable_53 . variable_59 && func_21 ( variable_31 -> variable_53 ) * ( variable_31 -> variable_60 ) > func_22 ( variable_10 -> variable_36 -> variable_53 ) && func_23 ( variable_10 -> variable_36 -> variable_53 ) < 1 . 0 / 500 || variable_55 == 0 ) variable_6 -> variable_53 = variable_31 -> variable_53 ; variable_6 -> variable_53 . variable_58 *= variable_31 -> variable_60 ; variable_6 -> variable_53 = variable_31 -> variable_53 ; if ( variable_8 -> variable_61 . variable_58 ) variable_6 -> variable_53 = func_24 ( variable_8 -> variable_61 ) ; switch ( variable_6 -> variable_45 ) variable_6 -> variable_62 = variable_31 -> variable_62 ; variable_6 -> variable_63 = variable_31 -> variable_63 ; variable_6 -> variable_64 = variable_31 -> variable_64 ; variable_6 -> variable_65 = variable_31 -> variable_65 ; variable_6 -> variable_66 = variable_31 -> variable_66 ; variable_6 -> variable_67 = variable_31 -> variable_67 ; if ( ( variable_6 -> variable_67 == 1 || variable_6 -> variable_67 == 1152 || variable_6 -> variable_67 == 576 ) && ( variable_6 -> variable_44 ) == variable_68 ) variable_6 -> variable_67 = 0 ; if ( ( variable_6 -> variable_44 ) == variable_69 ) variable_6 -> variable_67 = 0 ; variable_6 -> variable_70 = variable_31 -> variable_70 ; variable_6 -> variable_71 = variable_31 -> variable_71 ; variable_6 -> variable_72 = variable_31 -> variable_72 ; variable_6 -> variable_73 = variable_31 -> variable_73 ; if ( ! variable_6 -> variable_74 . variable_58 ) variable_6 -> variable_74 = variable_8 -> variable_36 -> variable_74 = ( variable_10 -> variable_36 -> variable_74 . variable_58 ? variable_10 -> variable_36 -> variable_74 : ( ( variable_10 -> variable_36 -> variable_6 -> variable_74 . variable_58 ? variable_10 -> variable_36 -> variable_6 -> variable_74 : ( ( variable_75 ) ( 0 ) , ( 1 ) ) ) ) ) variable_8 -> variable_36 -> variable_57 = variable_10 -> variable_36 -> variable_57 ; variable_6 -> variable_71 = variable_31 -> variable_71 ; variable_6 -> variable_72 = variable_31 -> variable_72 ; if ( ! variable_8 -> variable_76 ) variable_8 -> variable_76 = func_25 ( variable_6 -> variable_44 ) ; if ( ! variable_8 -> variable_76 ) variable_0 = - 22 ; if ( variable_10 ) variable_10 -> variable_77 ++ ; variable_8 -> variable_78 = 1 ; if ( ( variable_6 -> variable_45 ) == variable_79 ) if ( variable_8 -> variable_80 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = func_26 ( variable_8 -> variable_80 -> variable_80 ) ; if ( variable_10 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = variable_10 -> variable_81 ; if ( variable_10 && ! variable_8 -> variable_61 . variable_58 ) variable_8 -> variable_61 = ( variable_10 -> variable_36 -> variable_56 . variable_58 ? variable_10 -> variable_36 -> variable_56 : ( ( variable_75 ) ( 25 ) , ( 1 ) ) ) if ( variable_8 -> variable_76 && variable_8 -> variable_76 -> variable_82 && ! variable_8 -> variable_83 ) int variable_84 = func_27 ( variable_8 -> variable_61 , variable_8 -> variable_76 -> variable_82 ) ; variable_8 -> variable_61 = variable_8 -> variable_76 -> variable_82 [ variable_84 ] ; switch ( variable_6 -> variable_45 ) variable_6 -> variable_85 = ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_87 ) ; variable_6 -> variable_63 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_63 ; variable_6 -> variable_62 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_62 ; variable_6 -> variable_64 = func_28 ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] ) ; variable_6 -> variable_53 = ( ( variable_75 ) ( 1 ) , variable_6 -> variable_63 ) variable_6 -> variable_53 = func_29 ( variable_8 -> variable_61 ) ; if ( variable_8 -> variable_80 && ! ( variable_6 -> variable_53 . variable_58 && variable_6 -> variable_53 . variable_59 ) ) variable_6 -> variable_53 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_53 ; variable_6 -> variable_71 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_88 ; variable_6 -> variable_72 = variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_89 ; variable_6 -> variable_74 = variable_8 -> variable_36 -> variable_74 = ( variable_8 -> variable_90 ? func_30 ( ( variable_8 -> variable_90 * ( variable_6 -> variable_72 ) / ( variable_6 -> variable_71 ) ) , 255 ) : variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_74 ) ; variable_6 -> variable_70 = ( variable_8 -> variable_80 -> variable_80 -> variable_86 [ 0 ] -> variable_87 ) ; if ( ! variable_31 || variable_6 -> variable_71 != variable_31 -> variable_71 || variable_6 -> variable_72 != variable_31 -> variable_72 || ( variable_6 -> variable_70 ) != ( variable_31 -> variable_70 ) ) variable_6 -> variable_38 = variable_91 ; if ( variable_8 -> variable_92 ) if ( ! strncmp ( ( variable_8 -> variable_92 ) , " expr : " , 5 ) ) variable_0 = func_31 ( & variable_8 -> variable_93 , ( variable_8 -> variable_92 + 5 ) , variable_94 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) , ( ( void * ) 0 ) , 0 , ( ( void * ) 0 ) ) ; if ( variable_0 < 0 ) return variable_0 ; variable_8 -> variable_95 [ variable_96 ] = 0 ; variable_8 -> variable_95 [ variable_97 ] = 0 ; variable_8 -> variable_95 [ variable_98 ] = ( func_32 ( " " ) ) ; variable_8 -> variable_95 [ variable_99 ] = ( func_33 ( " " ) ) ; variable_6 -> variable_53 = ( ( variable_75 ) ( 1 ) , ( 1000 ) ) if ( ! variable_6 -> variable_71 ) variable_6 -> variable_71 = variable_18 [ variable_8 -> variable_34 ] -> variable_36 -> variable_6 -> variable_71 ; variable_6 -> variable_72 = variable_18 [ variable_8 -> variable_34 ] -> variable_36 -> variable_6 -> variable_72 ; if ( variable_6 -> variable_25 & ( 0 variable_100 | 0002000 ) ) char variable_101 [ 1024 ] ; FILE * variable_102 ; snprintf ( variable_101 , sizeof ( variable_101 ) , " %s - %d . log " , ( variable_8 -> variable_103 ? variable_8 -> variable_103 : " ffmpeg2pass " ) , variable_1 ) ; if ( ! strcmp ( variable_8 -> variable_76 -> variable_54 , " libx264 " ) ) if ( variable_6 -> variable_25 & 0002000 ) char * variable_104 ; variable_6 -> variable_105 = variable_104 ; if ( variable_6 -> variable_25 & 0 variable_100 ) variable_102 = fopen ( variable_101 , " wb " ) ; variable_8 -> variable_106 = variable_102 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_8 = variable_32 [ variable_1 ] ; if ( variable_8 -> variable_78 ) variable_107 * variable_6 = variable_8 -> variable_76 ; variable_5 * variable_108 = ( ( void * ) 0 ) ; if ( variable_10 = func_34 ( variable_8 ) ) static variable_9 * func_35 ( variable_7 * variable_8 ) if ( variable_8 -> variable_34 >= 0 ) return variable_18 [ variable_8 -> variable_34 ] ; return ( ( void * ) 0 ) ; variable_108 = variable_10 -> variable_36 -> variable_6 ; if ( variable_108 && variable_108 -> variable_109 ) variable_8 -> variable_36 -> variable_6 -> variable_109 = ( func_36 ( ( variable_108 -> variable_110 + 1 ) ) ) ; if ( ! variable_8 -> variable_36 -> variable_6 -> variable_109 ) variable_0 = - 12 ; memcpy ( ( variable_8 -> variable_36 -> variable_6 -> variable_109 ) , ( variable_108 -> variable_109 ) , ( variable_108 -> variable_110 ) ) ; variable_8 -> variable_36 -> variable_6 -> variable_110 = variable_108 -> variable_110 ; if ( ( variable_0 = func_37 ( variable_8 -> variable_36 -> variable_6 , variable_6 , & variable_8 -> variable_111 ) ) < 0 ) for ( variable_1 = 0 ; variable_1 < variable_112 ; variable_1 ++ ) if ( ( variable_0 = func_38 ( variable_1 , variable_11 , ( sizeof ( variable_11 ) ) ) ) < 0 ) static int func_39 ( int variable_19 , char * variable_11 , int variable_113 ) int variable_0 ; variable_9 * variable_10 = variable_18 [ variable_19 ] ; if ( variable_10 -> variable_77 ) variable_107 * variable_6 = variable_10 -> variable_108 ; if ( ! variable_6 ) return - 22 ; variable_10 -> variable_114 = variable_6 -> variable_115 & 0000002 && ! ( ' 6 ' < 56 && variable_116 ) ; if ( ( variable_6 -> variable_117 ) == variable_79 && variable_10 -> variable_114 ) variable_10 -> variable_36 -> variable_6 -> variable_118 = variable_119 ; variable_10 -> variable_36 -> variable_6 -> variable_120 = variable_121 ; variable_10 -> variable_36 -> variable_6 -> variable_122 = ( & variable_10 -> variable_123 ) ; if ( ( variable_0 = func_40 ( variable_10 -> variable_36 -> variable_6 , variable_6 , & variable_10 -> variable_111 ) ) < 0 ) return variable_0 ; return 0 ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) for ( variable_1 = 0 ; variable_1 < variable_21 ; variable_1 ++ ) variable_4 = variable_22 [ variable_1 ] -> variable_23 ; variable_4 -> variable_124 = variable_125 ; if ( ( variable_0 = func_41 ( variable_4 , & variable_22 [ variable_1 ] -> variable_111 ) ) < 0 ) variable_0 = - 22 ; if ( variable_0 ) return variable_0 ; return 0 ; if ( variable_0 < 0 ) if ( ( variable_0 = func_42 ( ) ) < 0 ) static int func_43 ( ) int variable_1 ; int variable_0 ; if ( variable_12 == 1 ) return 0 ; for ( variable_1 = 0 ; variable_1 < variable_12 ; variable_1 ++ ) variable_13 * variable_102 = variable_15 [ variable_1 ] ; if ( ! ( variable_102 -> variable_126 = func_44 ( ( 8 * sizeof ( variable_127 ) ) ) ) ) return - 12 ; if ( variable_0 = func_45 ( & variable_102 -> variable_128 , ( ( void * ) 0 ) , variable_129 , variable_102 ) ) return - variable_0 ; return 0 ; while ( ! variable_130 ) int64_t variable_131 = func_46 ( ) ; if ( variable_132 ) if ( func_47 ( variable_131 ) < 0 ) if ( ! func_48 ( ) ) static int func_49 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; variable_133 * variable_134 = variable_22 [ variable_8 -> variable_33 ] ; variable_3 * variable_135 = variable_22 [ variable_8 -> variable_33 ] -> variable_23 ; if ( variable_8 -> variable_136 || variable_135 -> variable_137 && ( func_50 ( variable_135 -> variable_137 ) ) >= variable_134 -> variable_138 ) if ( ( variable_8 -> variable_139 ) >= variable_8 -> variable_140 ) return 1 ; return 0 ; variable_0 = func_51 ( ) ; static int func_52 ( ) variable_7 * variable_8 ; variable_9 * variable_10 ; int variable_0 ; variable_8 = func_53 ( ) ; static variable_7 * func_54 ( ) int variable_1 ; int64_t variable_141 = 9223372036854775807L ; variable_7 * variable_142 = ( ( void * ) 0 ) ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; int64_t variable_111 = func_55 ( variable_8 -> variable_36 -> variable_143 , variable_8 -> variable_36 -> variable_53 , ( ( variable_75 ) ( 1 ) , ( 1000000 ) ) ) if ( ! variable_8 -> variable_144 && ! variable_8 -> variable_136 && variable_111 < variable_141 ) variable_141 = variable_111 ; variable_142 = variable_8 ; return variable_142 ; if ( ! variable_8 ) if ( func_56 ( ) ) static int func_57 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) if ( variable_32 [ variable_1 ] -> variable_144 ) return 1 ; return 0 ; return 0 ; return - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ; if ( variable_8 -> variable_80 ) if ( ( variable_0 = func_58 ( variable_8 -> variable_80 -> variable_29 , & variable_10 ) ) < 0 ) static int func_59 ( variable_145 * variable_29 , variable_9 * * variable_146 ) int variable_0 ; variable_0 = func_60 ( variable_29 -> variable_29 ) ; if ( variable_0 >= 0 ) return func_61 ( ) ; static int func_62 ( ) int variable_1 ; for ( variable_1 = 0 ; variable_1 < variable_30 ; variable_1 ++ ) variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_63 ( ) ) ) return - 12 ; return 0 ; if ( variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) variable_0 = func_64 ( ) ; static int func_65 ( ) int variable_1 ; variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_66 ( ) ) ) return - 12 ; return 0 ; return variable_0 ; if ( variable_0 != - 11 ) return variable_0 ; return 0 ; return variable_0 ; if ( ! variable_10 ) return 0 ; variable_10 = variable_18 [ variable_8 -> variable_34 ] ; variable_0 = func_67 ( variable_10 -> variable_33 ) ; static int func_68 ( int variable_33 ) variable_13 * variable_14 = variable_15 [ variable_33 ] ; int variable_0 ; variable_0 = func_69 ( variable_14 , & variable_148 ) ; static int func_70 ( variable_13 * variable_102 , variable_127 * variable_148 ) if ( variable_12 > 1 ) return func_71 ( variable_102 , variable_148 ) ; static int func_72 ( variable_13 * variable_102 , variable_127 * variable_148 ) int variable_0 = 0 ; if ( func_73 ( variable_102 -> variable_126 ) ) if ( variable_102 -> variable_136 ) variable_0 = - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ; variable_0 = - 11 ; return variable_0 ; return func_74 ( variable_102 -> variable_23 , variable_148 ) ; if ( variable_0 == - 11 ) return variable_0 ; if ( variable_0 < 0 ) return - 11 ; return 0 ; if ( variable_0 == - 11 ) return 0 ; if ( variable_0 < 0 ) return variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ? 0 : variable_0 ; return func_75 ( ) ; static int func_76 ( ) int variable_1 ; variable_7 * variable_8 = variable_32 [ variable_1 ] ; if ( ! variable_8 -> variable_80 ) if ( ! variable_8 -> variable_147 && ! ( variable_8 -> variable_147 = func_77 ( ) ) ) return - 12 ; return 0 ; if ( variable_0 < 0 ) if ( variable_0 == - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) || variable_0 == - 11 ) static int func_78 ( int64_t variable_131 ) int variable_1 ; int variable_0 ; int variable_149 ; static int64_t variable_150 ; if ( variable_151 ) if ( variable_131 - variable_150 >= 100000 && ! variable_152 ) variable_149 = func_79 ( ) ; static int func_80 ( ) unsigned char variable_153 ; struct timeval variable_154 ; fd_set variable_155 ; ( & variable_155 ) -> variable_156 [ 0 / ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ] |= ( ( variable_157 ) 1 ) << 0 % ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ; variable_154 . variable_158 = 0 ; variable_154 . variable_159 = 0 ; variable_160 = func_81 ( 1 , & variable_155 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , & variable_154 ) ; if ( variable_160 > 0 ) variable_160 = ( func_82 ( 0 , ( & variable_153 ) , 1 ) ) ; if ( variable_160 == 1 ) return variable_153 ; return variable_160 ; return - 1 ; variable_149 = - 1 ; if ( variable_149 == ' q ' ) if ( variable_149 == ' c ' || variable_149 == ' C ' ) char variable_161 [ 4096 ] ; char variable_162 [ 64 ] ; char variable_163 [ 256 ] ; char variable_164 [ 256 ] = { ( 0 ) } ; double variable_165 ; int variable_166 ; fprintf ( variable_167 , " \n Enter command : < target > < time > < command > [ < argument > ] \n " ) ; variable_1 = 0 ; while ( ( variable_166 = func_83 ( ) ) != 10 && variable_166 != ' \r ' && variable_1 < sizeof ( variable_161 ) - 1 ) static int func_84 ( ) unsigned char variable_153 ; struct timeval variable_154 ; fd_set variable_155 ; ( & variable_155 ) -> variable_156 [ 0 / ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ] |= ( ( variable_157 ) 1 ) << 0 % ( 8 * ( ( int ) ( sizeof ( variable_157 ) ) ) ) ; variable_154 . variable_158 = 0 ; variable_154 . variable_159 = 0 ; variable_160 = func_85 ( 1 , & variable_155 , ( ( void * ) 0 ) , ( ( void * ) 0 ) , & variable_154 ) ; if ( variable_160 > 0 ) variable_160 = ( func_86 ( 0 , ( & variable_153 ) , 1 ) ) ; if ( variable_160 == 1 ) return variable_153 ; return variable_160 ; return - 1 ; if ( variable_166 > 0 ) variable_161 [ variable_1 ++ ] = variable_166 ; variable_161 [ variable_1 ] = 0 ; if ( variable_166 > 0 && ( variable_160 = sscanf ( variable_161 , " % 63 [ ^ ] % lf % 255 [ ^ ] % 255 [ ^ \n ] " , variable_162 , & variable_165 , variable_163 , variable_164 ) ) >= 3 ) for ( variable_1 = 0 ; variable_1 < variable_27 ; variable_1 ++ ) variable_145 * variable_168 = variable_28 [ variable_1 ] ; if ( variable_168 -> variable_29 ) if ( variable_165 < 0 ) variable_0 = func_87 ( variable_168 -> variable_29 , variable_162 , variable_163 , variable_164 , variable_161 , ( sizeof ( variable_161 ) ) , ( variable_149 == ' c ' ? 1 : 0 ) ) ; fprintf ( variable_167 , " Command reply for stream %d : ret : %d res : %s \n " , variable_1 , variable_0 , variable_161 ) ; if ( variable_149 == 100 || variable_149 == ' D ' ) int variable_169 = 0 ; if ( variable_149 == ' D ' ) variable_169 = variable_18 [ 0 ] -> variable_36 -> variable_6 -> variable_169 << 1 ; if ( ! variable_169 ) variable_169 = 1 ; while ( variable_169 & ( 0000100 | 0 variable_170 | 0 variable_171 ) ) variable_169 += variable_169 ; if ( scanf ( " %d " , & variable_169 ) != 1 ) fprintf ( variable_167 , " error parsing debug value \n " ) ; fprintf ( variable_167 , " debug = %d \n " , variable_169 ) ; if ( variable_149 == 63 ) fprintf ( variable_167 , " key function \n ? show this help \n + increase verbosity \n - decrease verbosity \n c Send command to filtergraph \n D cycle through available debug modes \n h dump packets / hex press to cycle through the 3  states \n q quit \n s Show QP histogram \n " ) ;
 int func_0 ( variable_0 * * variable_1 , const char * variable_2 , variable_3 * variable_4 , variable_5 * * variable_6 ) variable_0 * variable_7 = * variable_1 ; variable_8 * variable_9 = ( ( void * ) 0 ) ; if ( ! variable_7 && ! ( variable_7 = func_1 ( ) ) ) if ( ! variable_7 -> variable_10 ) if ( variable_4 ) variable_7 -> variable_11 = variable_4 ; if ( ( variable_12 = func_2 ( variable_7 , & variable_13 ) ) < 0 ) if ( ( variable_12 = func_3 ( variable_7 , variable_2 , & variable_13 ) ) < 0 ) static int func_4 ( variable_0 * variable_7 , const char * variable_2 , variable_5 * * variable_6 ) int variable_12 ; if ( variable_7 -> variable_14 ) variable_7 -> variable_15 |= 0 variable_16 ; if ( ! variable_7 -> variable_11 ) return func_5 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_6 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_7 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_8 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_9 ( " aac " ) ; variable_3 * func_10 ( const char * variable_29 ) variable_3 * variable_4 = ( ( void * ) 0 ) ; while ( variable_4 = func_11 ( variable_4 ) ) variable_3 * func_12 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( func_13 ( variable_29 , variable_4 -> variable_33 ) ) static int func_14 ( const char * variable_33 , const char * variable_34 ) const char * variable_35 ; int variable_36 ; int variable_37 ; if ( ! variable_33 || ! variable_34 ) return 0 ; variable_37 = ( strlen ( variable_33 ) ) ; while ( variable_35 = ( strchr ( variable_34 , ' , ' ) ) ) variable_36 = ( ( variable_35 - variable_34 > variable_37 ? variable_35 - variable_34 : variable_37 ) ) ; if ( ! func_15 ( variable_33 , variable_34 , variable_36 ) ) return 1 ; variable_34 = variable_35 + 1 ; return ! func_16 ( variable_33 , variable_34 ) ; return variable_4 ; return ( ( void * ) 0 ) ; for ( variable_26 = 2048 ; variable_26 <= variable_21 && ! ( * variable_4 ) ; variable_26 = ( ( ( variable_26 << 1 ) > ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) ? ( ( variable_21 > ( variable_26 + 1 ) ? variable_21 : ( variable_26 + 1 ) ) ) : ( variable_26 << 1 ) ) ) ) void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_17 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_18 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_19 ( & variable_22 , 1 , & variable_39 ) ; variable_3 * func_20 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_21 ( variable_22 , variable_42 , & variable_44 ) ; variable_3 * func_22 ( variable_41 * variable_22 , int variable_42 , int * variable_44 ) AVProbeData variable_45 = * variable_22 ; variable_3 * variable_46 = ( ( void * ) 0 ) ; variable_3 * variable_4 ; int variable_39 ; int variable_47 = 0 ; int variable_43 = 0 ; static const uint8_t variable_48 [ 32 ] ; if ( ! variable_45 . variable_23 ) variable_45 . variable_23 = variable_48 ; if ( variable_45 . variable_40 > ' \n ' && func_23 ( variable_45 . variable_23 , " ID3 " ) ) int variable_49 = func_24 ( variable_45 . variable_23 ) ; if ( variable_45 . variable_40 > variable_49 + 16 ) variable_45 . variable_23 += variable_49 ; variable_45 . variable_40 -= variable_49 ; variable_47 = 1 ; variable_4 = ( ( void * ) 0 ) ; while ( variable_46 = func_25 ( variable_46 ) ) variable_3 * func_26 ( variable_3 * variable_30 ) if ( variable_30 ) return variable_30 -> variable_31 ; return variable_32 ; if ( ! variable_42 == ! ( variable_46 -> variable_15 & 0 variable_28 ) ) variable_39 = 0 ; if ( variable_46 -> variable_50 ) variable_39 = ( ( variable_46 -> variable_50 ) ( & variable_45 ) ) ; if ( variable_46 -> variable_51 && func_27 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_28 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_29 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ( variable_39 > ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ? variable_39 : ( ( variable_47 ? 100 / 4 - 1 : 1 ) ) ) ; if ( variable_46 -> variable_51 ) if ( func_30 ( variable_45 . variable_2 , variable_46 -> variable_51 ) ) int func_31 ( const char * variable_2 , const char * variable_51 ) const char * variable_52 ; const char * variable_35 ; char variable_53 [ 32 ] ; char * variable_54 ; if ( ! variable_2 ) return 0 ; variable_52 = ( strrchr ( variable_2 , ' . ' ) ) ; if ( variable_52 ) variable_52 ++ ; variable_35 = variable_51 ; variable_54 = variable_53 ; while ( ( * variable_35 ) != ' \0 ' && ( * variable_35 ) != ' , ' && ( variable_54 - variable_53 ) < sizeof ( variable_53 ) - 1 ) * ( variable_54 ++ ) = * ( variable_35 ++ ) ; if ( ! func_32 ( variable_53 , variable_52 ) ) return 1 ; if ( ( * variable_35 ) == ' \0 ' ) variable_35 ++ ; return 0 ; variable_39 = ' 2 ' ; if ( variable_39 > variable_43 ) variable_43 = variable_39 ; variable_4 = variable_46 ; if ( variable_39 == variable_43 ) variable_4 = ( ( void * ) 0 ) ; return variable_4 ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_33 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; return 0 ; if ( variable_7 -> variable_11 && variable_7 -> variable_11 -> variable_15 & 0 variable_28 || ! variable_7 -> variable_11 && ( variable_7 -> variable_11 = func_34 ( & variable_22 , 0 , & variable_39 ) ) ) variable_3 * func_35 ( variable_41 * variable_22 , int variable_42 , int * variable_43 ) int variable_44 ; variable_3 * variable_4 = func_36 ( variable_22 , variable_42 , & variable_44 ) ; if ( variable_44 > * variable_43 ) return variable_4 ; return ( ( void * ) 0 ) ; return 0 ; if ( ( variable_12 = func_37 ( & variable_7 -> variable_14 , variable_2 , 1 | variable_7 -> variable_55 , ( & variable_7 -> variable_56 ) , variable_6 ) ) < 0 ) return variable_12 ; if ( variable_7 -> variable_11 ) return 0 ; return func_38 ( variable_7 -> variable_14 , & variable_7 -> variable_11 , variable_2 , variable_7 , 0 , variable_7 -> variable_17 ) ; int func_39 ( variable_18 * variable_14 , variable_3 * * variable_4 , const char * variable_2 , void * variable_19 , unsigned int variable_20 , unsigned int variable_21 ) AVProbeData variable_22 = { ( variable_2 ? variable_2 : " " ) , ( ( ( void * ) 0 ) ) , ( - variable_20 ) } ; unsigned char * variable_23 = ( ( void * ) 0 ) ; variable_24 * variable_25 ; int variable_26 ; int variable_27 = 0 ; if ( ! variable_21 ) variable_21 = ( 1 << 20 ) ; if ( variable_21 > ( 1 << 20 ) ) variable_21 = ( 1 << 20 ) ; if ( variable_21 < 2048 ) return - 22 ; if ( variable_20 >= variable_21 ) return - 22 ; if ( ! ( * variable_4 ) && variable_14 -> variable_10 && func_40 ( variable_14 , " mime_type " , 0 variable_28 , & variable_25 ) >= 0 && variable_25 ) if ( ! func_41 ( variable_25 , " audio / aacp " ) ) * variable_4 = func_42 ( " aac " ) ; void * variable_38 ; if ( variable_26 < variable_20 ) variable_38 = func_43 ( variable_23 , ( variable_26 + 32 ) ) ; if ( ! variable_38 ) return - 12 ; variable_23 = variable_38 ; if ( ( variable_12 = func_44 ( variable_14 , variable_23 + variable_27 , variable_26 - variable_27 ) ) < 0 ) if ( variable_12 != - ( ( int ) ( ( ' E ' | ' O ' << 8 | '  F ' << 16 ) | ( ( unsigned int ) 32 ) << 24 ) ) ) return variable_12 ; variable_39 = 0 ; variable_12 = 0 ; variable_22 . variable_40 = variable_27 += variable_12 ; variable_22 . variable_23 = & variable_23 [ variable_20 ] ; memset ( ( variable_22 . variable_23 + variable_22 . variable_40 ) , 0 , 32 ) ; * variable_4 = func_45 ( & variable_22 , 1 , & variable_39 ) ; if ( ! ( * variable_4 ) ) return - ( ( int ) ( ( ' I ' | ' N ' << 8 | '  D ' << 16 ) | ( ( unsigned int ) ' A ' ) << 24 ) ) ; variable_12 = func_46 ( variable_14 , & variable_23 , variable_22 . variable_40 ) ; return variable_12 ; if ( variable_7 -> variable_11 -> variable_15 & 0 variable_57 ) if ( ! func_47 ( variable_2 ) ) int func_48 ( const char * variable_2 ) char variable_23 [ 1024 ] ; return variable_2 && func_49 ( variable_23 , ( sizeof ( variable_23 ) ) , variable_2 , 1 ) >= 0 ; int func_50 ( char * variable_23 , int variable_40 , const char * variable_58 , int variable_59 ) const char * variable_35 ; char * variable_54 ; char variable_60 [ 20 ] ; char variable_61 ; int variable_62 ; int variable_36 ; int variable_63 ; variable_54 = variable_23 ; variable_35 = variable_58 ; variable_63 = 0 ; variable_61 = * ( variable_35 ++ ) ; if ( variable_61 == ' \0 ' ) if ( variable_61 == ' % ' ) variable_62 = 0 ; while ( func_51 ( ( * variable_35 ) ) ) variable_62 = variable_62 * ' \n ' + ( * ( variable_35 ++ ) ) - 48 ; variable_61 = * ( variable_35 ++ ) ; while ( func_52 ( variable_61 ) ) switch ( variable_61 ) if ( variable_63 ) variable_63 = 1 ; snprintf ( variable_60 , sizeof ( variable_60 ) , " % 0 *  d " , variable_62 , variable_59 ) ; variable_36 = ( strlen ( variable_60 ) ) ; if ( variable_54 - variable_23 + variable_36 > ( variable_40 - 1 ) ) memcpy ( variable_54 , variable_60 , variable_36 ) ; variable_54 += variable_36 ; if ( variable_54 - variable_23 < ( variable_40 - 1 ) ) * ( variable_54 ++ ) = variable_61 ; if ( ! variable_63 ) return 0 ; return - 1 ; variable_7 -> variable_64 = variable_7 -> variable_65 = ( ( variable_66 ) 0 variable_67 ) ; if ( variable_7 -> variable_11 -> variable_68 > 0 ) if ( ! ( variable_7 -> variable_69 = func_53 ( ( variable_7 -> variable_11 -> variable_68 ) ) ) ) if ( variable_7 -> variable_11 -> variable_70 ) * ( ( const AVClass * * ) ( variable_7 -> variable_69 ) ) = variable_7 -> variable_11 -> variable_70 ; if ( ( variable_12 = func_54 ( variable_7 -> variable_69 , & variable_13 ) ) < 0 ) if ( ! ( variable_7 -> variable_15 & 0 variable_71 ) && variable_7 -> variable_11 -> variable_72 ) if ( ( variable_12 = ( ( variable_7 -> variable_11 -> variable_72 ) ( variable_7 ) ) ) < 0 ) if ( variable_9 ) if ( ! strcmp ( variable_7 -> variable_11 -> variable_33 , " mp3 " ) || ! strcmp ( variable_7 -> variable_11 -> variable_33 , " aac " ) )
