 void func_0 ( ) if ( variable_0 == 5 ) char variable_1 [ 100 ] = " " ; if ( fgets ( variable_1 , 100 , variable_2 ) == NULL ) variable_1 [ 0 ] = ' \0 ' ; if ( strlen ( variable_1 ) > 0 ) variable_1 [ strlen ( variable_1 ) - 1 ] = ' \0 ' ; if ( func_1 ( variable_1 , variable_3 ) == - 1 ) variable_4 = func_2 ( variable_1 , variable_5 ) ; if ( variable_4 == - 1 ) if ( func_3 ( variable_4 , variable_6 , strlen ( variable_6 ) ) == - 1 ) if ( variable_4 != - 1 ) func_4 ( variable_4 ) ;
 static variable_0 * func_0 ( variable_0 * variable_1 , char * variable_2 , . . . ) va_list variable_3 ; size_t variable_4 , variable_5 ; if ( ! variable_1 ) variable_5 = variable_1 -> variable_6 - variable_1 -> variable_7 ; variable_4 = vsnprintf ( variable_1 -> variable_8 , variable_5 , variable_2 , variable_3 ) ; if ( variable_4 >= variable_5 ) size_t variable_9 = 2 * variable_1 -> variable_6 ; variable_10 * variable_11 ; while ( ( variable_9 - variable_1 -> variable_7 ) <= variable_4 ) variable_9 *= 2 ; variable_11 = kmalloc ( variable_9 , variable_12 ) ; if ( ! variable_11 ) memcpy ( variable_11 , variable_1 -> variable_13 , variable_1 -> variable_7 ) ; variable_11 [ variable_1 -> variable_7 ] = 0 ; variable_1 -> variable_13 = variable_11 ; variable_1 -> variable_8 = variable_1 -> variable_13 + variable_1 -> variable_7 ; variable_1 -> variable_6 = variable_9 ; variable_5 = variable_1 -> variable_6 - variable_1 -> variable_7 ; variable_4 = vsnprintf ( variable_1 -> variable_8 , variable_5 , variable_2 , variable_3 ) ; variable_1 -> variable_8 += variable_4 ; variable_1 -> variable_7 += variable_4 ; return variable_1 ;
