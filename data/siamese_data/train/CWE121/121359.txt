 void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 50 * sizeof ( char ) ) ; variable_0 = variable_1 ; variable_0 [ 0 ] = ' \0 ' ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_8 ( variable_0 ) ; void func_9 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 int func_0 ( variable_0 * variable_1 , unsigned char * * variable_2 , unsigned char * variable_3 , int variable_4 , int * variable_5 ) unsigned short variable_6 ; unsigned short variable_7 ; unsigned short variable_8 ; unsigned char * variable_9 = * variable_2 ; variable_1 -> variable_10 = 0 ; variable_1 -> variable_11 = - 1 ; if ( variable_9 >= ( variable_3 + variable_4 - 2 ) ) if ( variable_9 > ( variable_3 + variable_4 - variable_8 ) ) while ( variable_9 <= ( variable_3 + variable_4 - 4 ) ) if ( variable_9 + variable_7 > ( variable_3 + variable_4 ) ) if ( variable_1 -> variable_12 ) variable_1 -> func_1 ( variable_1 , 0 , variable_6 , variable_9 , variable_7 , variable_1 -> variable_13 ) ; if ( variable_6 == variable_14 ) unsigned char * variable_15 ; int variable_16 ; int variable_17 ; if ( variable_7 < 2 ) variable_7 -= 2 ; if ( variable_17 > variable_7 ) variable_15 = variable_9 ; while ( variable_17 > 3 ) variable_16 = * ( variable_15 ++ ) ; variable_17 -= 3 ; if ( variable_8 > variable_17 ) if ( variable_1 -> variable_10 == 0 ) switch ( variable_16 ) if ( ! variable_1 -> variable_18 ) if ( variable_1 -> variable_19 -> variable_20 ) if ( variable_8 > variable_21 ) if ( ( variable_1 -> variable_19 -> variable_20 = func_2 ( variable_8 + 1 ) ) == NULL ) memcpy ( variable_1 -> variable_19 -> variable_20 , variable_15 , variable_8 ) ; variable_1 -> variable_19 -> variable_20 [ variable_8 ] = ' \0 ' ; if ( strlen ( variable_1 -> variable_19 -> variable_20 ) != variable_8 ) func_3 ( variable_1 -> variable_19 -> variable_20 ) ; variable_1 -> variable_19 -> variable_20 = NULL ; variable_1 -> variable_10 = 1 ; variable_1 -> variable_10 = variable_1 -> variable_19 -> variable_20 && strlen ( variable_1 -> variable_19 -> variable_20 ) == variable_8 && strncmp ( variable_1 -> variable_19 -> variable_20 , ( char * ) variable_15 , variable_8 ) == 0 ; variable_17 -= variable_8 ; if ( variable_17 != 0 ) if ( variable_6 == variable_22 && variable_1 -> variable_23 != variable_24 ) unsigned char * variable_15 = variable_9 ; int variable_25 = * ( variable_15 ++ ) ; if ( variable_25 != variable_7 - 1 ) if ( ! variable_1 -> variable_18 ) if ( variable_1 -> variable_19 -> variable_26 ) variable_1 -> variable_19 -> variable_27 = 0 ; if ( ( variable_1 -> variable_19 -> variable_26 = func_4 ( variable_25 ) ) == NULL ) variable_1 -> variable_19 -> variable_27 = variable_25 ; memcpy ( variable_1 -> variable_19 -> variable_26 , variable_15 , variable_25 ) ; fprintf ( variable_28 , " CVE_2010_3864_PATCHED_ssl_parse_clienthello_tlsext s -> session -> tlsext_ecpointformatlist ( length = % i ) " , variable_1 -> variable_19 -> variable_27 ) ; variable_15 = variable_1 -> variable_19 -> variable_26 ; for ( variable_29 = 0 ; variable_29 < variable_1 -> variable_19 -> variable_27 ; variable_29 ++ ) fprintf ( variable_28 , " % i " , * ( variable_15 ++ ) ) ; fprintf ( variable_28 , " \n " ) ; if ( variable_6 == variable_30 && variable_1 -> variable_23 != variable_24 ) unsigned char * variable_15 = variable_9 ; int variable_31 = ( * ( variable_15 ++ ) << 8 ) ; variable_31 += ( * ( variable_15 ++ ) ) ; if ( variable_31 != variable_7 - 2 ) if ( ! variable_1 -> variable_18 ) if ( variable_1 -> variable_19 -> variable_32 ) variable_1 -> variable_19 -> variable_33 = 0 ; if ( ( variable_1 -> variable_19 -> variable_32 = func_5 ( variable_31 ) ) == NULL ) variable_1 -> variable_19 -> variable_33 = variable_31 ; memcpy ( variable_1 -> variable_19 -> variable_32 , variable_15 , variable_31 ) ; fprintf ( variable_28 , " CVE_2010_3864_PATCHED_ssl_parse_clienthello_tlsext s -> session -> tlsext_ellipticcurvelist ( length = % i ) " , variable_1 -> variable_19 -> variable_33 ) ; variable_15 = variable_1 -> variable_19 -> variable_32 ; for ( variable_29 = 0 ; variable_29 < variable_1 -> variable_19 -> variable_33 ; variable_29 ++ ) fprintf ( variable_28 , " % i " , * ( variable_15 ++ ) ) ; fprintf ( variable_28 , " \n " ) ; if ( variable_6 == variable_34 && variable_1 -> variable_23 != variable_24 ) unsigned char * variable_15 = variable_9 ; if ( variable_7 < 2 ) func_6 ( variable_15 , variable_1 -> variable_35 -> variable_36 ) ; if ( variable_1 -> variable_35 -> variable_36 != variable_7 - 2 ) if ( variable_1 -> variable_35 -> variable_37 != NULL ) func_7 ( variable_1 -> variable_35 -> variable_37 ) ; if ( variable_1 -> variable_35 -> variable_36 == 0 ) variable_1 -> variable_35 -> variable_37 = func_8 ( 1 ) ; variable_1 -> variable_35 -> variable_37 = func_9 ( variable_15 , variable_1 -> variable_35 -> variable_36 ) ; if ( variable_1 -> variable_35 -> variable_37 == NULL ) if ( variable_6 == variable_38 ) if ( variable_1 -> variable_39 && ! variable_1 -> func_10 ( variable_1 , variable_9 , variable_7 , variable_1 -> variable_40 ) ) if ( variable_6 == variable_41 ) if ( ! func_11 ( variable_1 , variable_9 , variable_7 , variable_5 ) ) if ( variable_6 == variable_42 && variable_1 -> variable_23 != variable_24 && variable_1 -> variable_43 -> variable_44 ) if ( variable_7 < 5 ) variable_1 -> variable_11 = * variable_9 ++ ; variable_7 -- ; if ( variable_1 -> variable_11 == variable_45 ) const unsigned char * variable_15 ; int variable_17 ; variable_7 -= 2 ; if ( variable_17 > variable_7 ) while ( variable_17 > 0 ) variable_46 * variable_47 ; int variable_48 ; if ( variable_17 < 4 ) variable_17 -= 2 + variable_48 ; if ( variable_17 < 0 ) variable_15 = variable_9 ; variable_9 += variable_48 ; variable_47 = func_12 ( NULL , & variable_15 , variable_48 ) ; if ( ! variable_47 ) if ( variable_9 != variable_15 ) if ( ! variable_1 -> variable_49 && ! ( variable_1 -> variable_49 = func_13 ( ) ) ) if ( ! func_14 ( variable_1 -> variable_49 , variable_47 ) ) variable_7 -= 2 ; if ( variable_17 > variable_7 ) variable_15 = variable_9 ; if ( variable_17 > 0 ) variable_1 -> variable_50 = func_15 ( NULL , & variable_15 , variable_17 ) ; if ( ! variable_1 -> variable_50 || ( variable_9 + variable_17 != variable_15 ) ) variable_1 -> variable_11 = - 1 ; variable_9 += variable_7 ; if ( ! variable_51 && variable_1 -> variable_52 && ! ( variable_1 -> variable_53 & variable_54 ) )
