 void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t variable_3 [ 50 ] ; variable_0 = variable_3 ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )
 static int func_0 ( variable_0 * variable_1 , void int * variable_2 , variable_3 * variable_4 ) variable_5 * variable_6 = variable_1 -> variable_7 ; int variable_8 , variable_9 ; variable_6 -> variable_1 = variable_1 ; variable_6 -> variable_10 = - 1 ; memset ( variable_6 -> variable_11 , - 1 , sizeof ( variable_6 -> variable_11 ) ) ; if ( func_1 ( & variable_6 -> variable_12 ) < 2 ) if ( func_2 ( & variable_6 -> variable_12 ) >= 12 && ( func_3 ( & variable_6 -> variable_12 ) == 12 ) && ( func_4 ( & variable_6 -> variable_12 ) == variable_13 ) && ( func_5 ( & variable_6 -> variable_12 ) == variable_14 ) ) if ( ! func_6 ( variable_6 ) ) static int func_7 ( variable_5 * variable_6 ) uint32_t variable_15 , variable_16 , variable_17 ; int variable_18 = 10 ; while ( variable_18 && func_8 ( & variable_6 -> variable_12 ) >= 8 ) variable_15 = func_9 ( & variable_6 -> variable_12 ) ; variable_16 = func_10 ( & variable_6 -> variable_12 ) ; variable_17 = func_11 ( & variable_6 -> variable_12 ) + variable_15 - 8 ; if ( variable_16 == variable_19 ) return 1 ; if ( func_12 ( & variable_6 -> variable_12 ) < variable_15 || variable_17 < variable_15 ) return 0 ; if ( variable_16 == variable_20 && variable_15 >= 16 ) uint32_t variable_21 , variable_22 , variable_23 ; variable_21 = func_13 ( & variable_6 -> variable_12 ) ; variable_22 = func_14 ( & variable_6 -> variable_12 ) ; variable_23 = func_15 ( & variable_6 -> variable_12 ) + variable_21 - 8 ; if ( variable_21 < 8 || variable_23 > variable_17 || variable_23 < variable_21 ) if ( variable_22 == variable_19 ) return 1 ; while ( variable_17 - variable_23 >= 8 ) variable_18 -- ; return 0 ; if ( func_16 ( & variable_6 -> variable_12 ) != variable_24 ) if ( variable_9 = func_17 ( variable_6 ) ) static int func_18 ( variable_5 * variable_6 ) variable_25 * variable_26 = variable_6 -> variable_26 ; variable_27 * variable_28 = variable_6 -> variable_28 ; variable_29 * variable_30 = & variable_6 -> variable_30 ; variable_31 * variable_32 = variable_6 -> variable_32 ; int variable_33 , variable_9 = 0 ; uint16_t variable_34 ; int variable_35 ; if ( func_19 ( & variable_6 -> variable_12 ) < 2 ) variable_34 = func_20 ( & variable_6 -> variable_12 ) ; variable_35 = func_21 ( & variable_6 -> variable_12 ) ; if ( variable_34 == variable_36 ) variable_37 * variable_38 ; variable_39 * variable_40 ; if ( ! variable_6 -> variable_38 ) if ( variable_6 -> variable_10 < 0 ) variable_38 = variable_6 -> variable_38 + variable_6 -> variable_10 ; variable_40 = variable_38 -> variable_41 + variable_38 -> variable_42 ; if ( variable_40 -> variable_43 < variable_6 -> variable_12 . variable_44 ) if ( variable_34 == variable_45 ) variable_33 = func_22 ( & variable_6 -> variable_12 ) ; if ( variable_33 < 2 || func_23 ( & variable_6 -> variable_12 ) < variable_33 - 2 ) switch ( variable_34 ) variable_9 = func_24 ( variable_6 ) ; static int func_25 ( variable_5 * variable_6 ) int variable_46 ; int variable_47 ; uint32_t variable_48 = 0 ; if ( func_26 ( & variable_6 -> variable_12 ) < 36 ) return variable_49 ; variable_6 -> variable_1 -> variable_50 = func_27 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_51 = func_28 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_52 = func_29 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_53 = func_30 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_54 = func_31 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_55 = func_32 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_56 = func_33 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_57 = func_34 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_58 = func_35 ( & variable_6 -> variable_12 ) ; variable_47 = func_36 ( & variable_6 -> variable_12 ) ; if ( variable_6 -> variable_53 || variable_6 -> variable_54 ) return variable_59 ; if ( variable_47 <= 0 ) return variable_49 ; if ( variable_47 > 4 ) return variable_59 ; variable_6 -> variable_47 = variable_47 ; if ( variable_6 -> variable_55 <= 0 || variable_6 -> variable_56 <= 0 ) return variable_49 ; if ( func_37 ( & variable_6 -> variable_12 ) < 3 * variable_6 -> variable_47 ) return variable_49 ; for ( variable_46 = 0 ; variable_46 < variable_6 -> variable_47 ; variable_46 ++ ) uint8_t variable_60 = func_38 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_61 [ variable_46 ] = ( variable_60 & 0 variable_62 ) + 1 ; variable_6 -> variable_63 = func_39 ( variable_6 -> variable_61 [ variable_46 ] , variable_6 -> variable_63 ) ; variable_6 -> variable_64 [ variable_46 ] = ! ! ( variable_60 & 0 variable_65 ) ; variable_6 -> variable_66 [ variable_46 ] = func_40 ( & variable_6 -> variable_12 ) ; variable_6 -> variable_67 [ variable_46 ] = func_41 ( & variable_6 -> variable_12 ) ; if ( ! variable_6 -> variable_66 [ variable_46 ] || variable_6 -> variable_66 [ variable_46 ] == 3 || variable_6 -> variable_66 [ variable_46 ] > 4 || ! variable_6 -> variable_67 [ variable_46 ] || variable_6 -> variable_67 [ variable_46 ] == 3 || variable_6 -> variable_67 [ variable_46 ] > 4 ) return variable_49 ; variable_48 |= variable_6 -> variable_67 [ variable_46 ] >> 1 << variable_46 * 4 | variable_6 -> variable_66 [ variable_46 ] >> 1 << variable_46 * 4 + 2 ; variable_6 -> variable_68 = func_42 ( variable_6 -> variable_51 - variable_6 -> variable_57 , variable_6 -> variable_55 ) ; variable_6 -> variable_69 = func_43 ( variable_6 -> variable_52 - variable_6 -> variable_58 , variable_6 -> variable_56 ) ; if ( variable_6 -> variable_68 * ( variable_70 ) variable_6 -> variable_69 > variable_71 / sizeof ( * variable_6 -> variable_38 ) ) return func_44 ( variable_72 ) ; variable_6 -> variable_38 = func_45 ( variable_6 -> variable_68 * variable_6 -> variable_69 , sizeof ( * variable_6 -> variable_38 ) ) ; if ( ! variable_6 -> variable_38 ) return func_46 ( variable_73 ) ; for ( variable_46 = 0 ; variable_46 < variable_6 -> variable_68 * variable_6 -> variable_69 ; variable_46 ++ ) variable_37 * variable_38 = variable_6 -> variable_38 + variable_46 ; variable_38 -> variable_74 = func_47 ( variable_6 -> variable_47 * sizeof ( * variable_38 -> variable_74 ) ) ; if ( ! variable_38 -> variable_74 ) return func_48 ( variable_73 ) ; variable_6 -> variable_1 -> variable_51 = func_49 ( variable_6 -> variable_51 - variable_6 -> variable_53 , variable_6 -> variable_75 ) ; variable_6 -> variable_1 -> variable_52 = func_50 ( variable_6 -> variable_52 - variable_6 -> variable_54 , variable_6 -> variable_75 ) ; if ( variable_6 -> variable_1 -> variable_50 == variable_76 || variable_6 -> variable_1 -> variable_50 == variable_77 ) variable_78 = variable_79 ; variable_80 = func_51 ( variable_79 ) ; switch ( variable_6 -> variable_81 ) variable_78 = variable_82 ; variable_80 = func_52 ( variable_82 ) ; variable_78 = variable_83 ; variable_80 = func_53 ( variable_83 ) ; variable_78 = variable_84 ; variable_80 = func_54 ( variable_84 ) ; variable_78 = variable_85 ; variable_80 = func_55 ( variable_85 ) ; for ( variable_46 = 0 ; variable_46 < variable_80 ; ++ variable_46 ) if ( func_56 ( variable_78 [ variable_46 ] , variable_47 , variable_6 -> variable_63 , variable_48 , variable_6 -> variable_86 ) ) static int func_57 ( enum AVPixelFormat variable_87 , int int variable_88 , uint32_t variable_48 , int variable_86 ) int variable_89 = 1 ; const AVPixFmtDescriptor * variable_90 = func_58 ( variable_87 ) ; if ( variable_90 -> variable_91 != variable_92 ) return 0 ; switch ( variable_92 ) variable_89 = variable_89 && variable_90 -> variable_74 [ 3 ] . variable_93 + 1 >= variable_88 && ( variable_48 >> 14 & 3 ) == 0 && ( variable_48 >> 12 & 3 ) == 0 ; variable_89 = variable_89 && variable_90 -> variable_74 [ 2 ] . variable_93 + 1 >= variable_88 && ( variable_48 >> 10 & 3 ) == variable_90 -> variable_94 && ( variable_48 >> 8 & 3 ) == variable_90 -> variable_95 ; variable_89 = variable_89 && variable_90 -> variable_74 [ 1 ] . variable_93 + 1 >= variable_88 && ( variable_48 >> 6 & 3 ) == variable_90 -> variable_94 && ( variable_48 >> 4 & 3 ) == variable_90 -> variable_95 ; variable_89 = variable_89 && variable_90 -> variable_74 [ 0 ] . variable_93 + 1 >= variable_88 && ( variable_48 >> 2 & 3 ) == 0 && ( variable_48 & 3 ) == 0 && ( variable_90 -> variable_96 & variable_97 ) == variable_86 * variable_97 ; return variable_89 ; variable_6 -> variable_1 -> variable_87 = variable_78 [ variable_46 ] ; if ( variable_46 == variable_80 ) if ( variable_47 == 4 && variable_6 -> variable_67 [ 0 ] == 1 && variable_6 -> variable_66 [ 0 ] == 1 && variable_6 -> variable_67 [ 1 ] == 1 && variable_6 -> variable_66 [ 1 ] == 1 && variable_6 -> variable_67 [ 2 ] == variable_6 -> variable_67 [ 3 ] && variable_6 -> variable_66 [ 2 ] == variable_6 -> variable_66 [ 3 ] ) if ( variable_6 -> variable_63 == 8 && variable_6 -> variable_67 [ 2 ] == 2 && variable_6 -> variable_66 [ 2 ] == 2 && ! variable_6 -> variable_86 ) variable_46 = 0 ; if ( variable_46 == variable_80 ) return variable_59 ; return 0 ; if ( ! variable_6 -> variable_38 ) variable_6 -> variable_68 = variable_6 -> variable_69 = 0 ; variable_9 = func_59 ( variable_6 , variable_26 , variable_32 ) ; static int func_60 ( variable_5 * variable_6 , variable_25 variable_31 * variable_32 ) int variable_98 , variable_9 ; if ( func_61 ( & variable_6 -> variable_12 ) < 2 ) return variable_49 ; variable_98 = func_62 ( & variable_6 -> variable_12 ) ; if ( variable_98 >= variable_6 -> variable_47 ) return variable_49 ; variable_99 += variable_98 ; variable_99 -> variable_100 = func_63 ( & variable_6 -> variable_12 ) ; if ( ( variable_9 = func_64 ( variable_6 , variable_99 ) ) < 0 ) static int func_65 ( variable_5 * variable_6 , variable_25 * variable_99 ) uint8_t variable_101 ; if ( func_66 ( & variable_6 -> variable_12 ) < 5 ) return variable_49 ; variable_99 -> variable_102 = func_67 ( & variable_6 -> variable_12 ) + 1 ; if ( variable_99 -> variable_102 >= variable_103 ) return variable_49 ; if ( variable_99 -> variable_102 <= variable_6 -> variable_75 ) return func_68 ( variable_72 ) ; variable_99 -> variable_104 = variable_99 -> variable_102 - variable_6 -> variable_75 ; variable_99 -> variable_105 = ( func_69 ( & variable_6 -> variable_12 ) & 15 ) + 2 ; variable_99 -> variable_106 = ( func_70 ( & variable_6 -> variable_12 ) & 15 ) + 2 ; if ( variable_99 -> variable_105 > 10 || variable_99 -> variable_106 > 10 || variable_99 -> variable_105 + variable_99 -> variable_106 > 12 ) return variable_49 ; variable_99 -> variable_107 = func_71 ( & variable_6 -> variable_12 ) ; variable_99 -> variable_108 = func_72 ( & variable_6 -> variable_12 ) ; if ( ( variable_6 -> variable_1 -> variable_96 & variable_109 ) && ( variable_99 -> variable_108 == variable_110 ) ) variable_99 -> variable_108 = variable_111 ; if ( variable_99 -> variable_108 == variable_112 ) variable_6 -> variable_1 -> variable_32 |= variable_113 ; if ( variable_99 -> variable_100 & variable_114 ) int variable_46 ; for ( variable_46 = 0 ; variable_46 < variable_99 -> variable_102 ; variable_46 ++ ) variable_101 = func_73 ( & variable_6 -> variable_12 ) ; variable_99 -> variable_115 [ variable_46 ] = variable_101 & 0 variable_116 ; variable_99 -> variable_117 [ variable_46 ] = ( variable_101 >> 4 ) & 0 variable_116 ; if ( variable_46 ) if ( variable_99 -> variable_115 [ variable_46 ] == 0 || variable_99 -> variable_117 [ variable_46 ] == 0 ) return variable_49 ; return 0 ; return variable_9 ; return 0 ; variable_9 = func_74 ( variable_6 , variable_26 , variable_32 ) ; static int func_75 ( variable_5 * variable_6 , variable_25 variable_31 * variable_32 ) Jpeg2000CodingStyle variable_118 ; int variable_98 , variable_9 ; if ( func_76 ( & variable_6 -> variable_12 ) < 5 ) return variable_49 ; variable_118 . variable_100 = func_77 ( & variable_6 -> variable_12 ) ; variable_118 . variable_119 = func_78 ( & variable_6 -> variable_12 ) ; variable_118 . variable_120 = func_79 ( & variable_6 -> variable_12 ) ; variable_118 . variable_121 = func_80 ( & variable_6 -> variable_12 ) ; if ( variable_118 . variable_121 && variable_6 -> variable_47 < 3 ) return variable_49 ; if ( ( variable_9 = func_81 ( variable_6 , & variable_118 ) ) < 0 ) static int func_82 ( variable_5 * variable_6 , variable_25 * variable_99 ) uint8_t variable_101 ; if ( func_83 ( & variable_6 -> variable_12 ) < 5 ) return variable_49 ; variable_99 -> variable_102 = func_84 ( & variable_6 -> variable_12 ) + 1 ; if ( variable_99 -> variable_102 >= variable_103 ) return variable_49 ; if ( variable_99 -> variable_102 <= variable_6 -> variable_75 ) return func_85 ( variable_72 ) ; variable_99 -> variable_104 = variable_99 -> variable_102 - variable_6 -> variable_75 ; variable_99 -> variable_105 = ( func_86 ( & variable_6 -> variable_12 ) & 15 ) + 2 ; variable_99 -> variable_106 = ( func_87 ( & variable_6 -> variable_12 ) & 15 ) + 2 ; if ( variable_99 -> variable_105 > 10 || variable_99 -> variable_106 > 10 || variable_99 -> variable_105 + variable_99 -> variable_106 > 12 ) return variable_49 ; variable_99 -> variable_107 = func_88 ( & variable_6 -> variable_12 ) ; variable_99 -> variable_108 = func_89 ( & variable_6 -> variable_12 ) ; if ( ( variable_6 -> variable_1 -> variable_96 & variable_109 ) && ( variable_99 -> variable_108 == variable_110 ) ) variable_99 -> variable_108 = variable_111 ; if ( variable_99 -> variable_108 == variable_112 ) variable_6 -> variable_1 -> variable_32 |= variable_113 ; if ( variable_99 -> variable_100 & variable_114 ) int variable_46 ; variable_101 = func_90 ( & variable_6 -> variable_12 ) ; variable_99 -> variable_115 [ variable_46 ] = variable_101 & 0 variable_116 ; variable_99 -> variable_117 [ variable_46 ] = ( variable_101 >> 4 ) & 0 variable_116 ; if ( variable_46 ) if ( variable_99 -> variable_115 [ variable_46 ] == 0 || variable_99 -> variable_117 [ variable_46 ] == 0 ) return variable_49 ; return 0 ; return variable_9 ; return 0 ; variable_9 = func_91 ( variable_6 , variable_33 , variable_28 , variable_32 ) ; static int func_92 ( variable_5 * variable_6 , int variable_122 , variable_27 variable_31 * variable_32 ) int variable_98 ; if ( func_93 ( & variable_6 -> variable_12 ) < 1 ) return variable_49 ; variable_98 = func_94 ( & variable_6 -> variable_12 ) ; if ( variable_98 >= variable_6 -> variable_47 ) return variable_49 ; variable_32 [ variable_98 ] |= variable_123 ; return func_95 ( variable_6 , variable_122 - 1 , variable_124 + variable_98 ) ; static int func_96 ( variable_5 * variable_6 , int variable_122 , variable_27 * variable_124 ) int variable_46 , variable_60 ; if ( func_97 ( & variable_6 -> variable_12 ) < 1 ) return variable_49 ; variable_60 = func_98 ( & variable_6 -> variable_12 ) ; variable_124 -> variable_125 = variable_60 >> 5 ; variable_124 -> variable_126 = variable_60 & 0 variable_127 ; if ( variable_124 -> variable_126 == variable_128 ) variable_122 -= 3 ; if ( func_99 ( & variable_6 -> variable_12 ) < variable_122 || variable_122 > variable_129 * 3 ) return variable_49 ; if ( variable_124 -> variable_126 == variable_130 ) if ( func_100 ( & variable_6 -> variable_12 ) < 2 ) return variable_49 ; variable_122 = ( variable_122 - 3 ) >> 1 ; if ( func_101 ( & variable_6 -> variable_12 ) < 2 * variable_122 || variable_122 > variable_129 * 3 ) return variable_49 ; return 0 ; variable_9 = func_102 ( variable_6 , variable_33 , variable_28 , variable_32 ) ; static int func_103 ( variable_5 * variable_6 , int variable_122 , variable_27 variable_31 * variable_32 ) Jpeg2000QuantStyle variable_118 ; int variable_98 , variable_9 ; memset ( & variable_118 , 0 , sizeof ( variable_118 ) ) ; if ( ( variable_9 = func_104 ( variable_6 , variable_122 , & variable_118 ) ) < 0 ) static int func_105 ( variable_5 * variable_6 , int variable_122 , variable_27 * variable_124 ) int variable_46 , variable_60 ; if ( func_106 ( & variable_6 -> variable_12 ) < 1 ) return variable_49 ; variable_60 = func_107 ( & variable_6 -> variable_12 ) ; variable_124 -> variable_125 = variable_60 >> 5 ; variable_124 -> variable_126 = variable_60 & 0 variable_127 ; if ( variable_124 -> variable_126 == variable_128 ) variable_122 -= 3 ; if ( func_108 ( & variable_6 -> variable_12 ) < variable_122 || variable_122 > variable_129 * 3 ) return variable_49 ; if ( variable_124 -> variable_126 == variable_130 ) if ( func_109 ( & variable_6 -> variable_12 ) < 2 ) return variable_49 ; variable_122 = ( variable_122 - 3 ) >> 1 ; if ( func_110 ( & variable_6 -> variable_12 ) < 2 * variable_122 || variable_122 > variable_129 * 3 ) return variable_49 ; return 0 ; return variable_9 ; return 0 ; variable_9 = func_111 ( variable_6 , variable_33 , variable_30 ) ; static int func_112 ( variable_5 * variable_6 , int variable_131 , variable_29 * variable_132 ) int variable_46 ; int variable_133 = variable_6 -> variable_47 <= 257 ? 7 : 9 ; Jpeg2000POC variable_118 = { { { 0 } } } ; if ( func_113 ( & variable_6 -> variable_12 ) < 5 || variable_131 < 2 + variable_133 ) return variable_49 ; if ( variable_133 > 7 ) return variable_59 ; variable_118 . variable_134 = ( variable_131 - 2 ) / variable_133 ; if ( variable_118 . variable_134 > variable_135 ) return variable_59 ; for ( variable_46 = 0 ; variable_46 < variable_118 . variable_134 ; variable_46 ++ ) variable_136 * variable_137 = & variable_118 . variable_30 [ variable_46 ] ; variable_137 -> variable_138 = func_114 ( & variable_6 -> variable_12 ) ; variable_137 -> variable_139 = func_115 ( & variable_6 -> variable_12 ) ; variable_137 -> variable_140 = func_116 ( & variable_6 -> variable_12 ) ; variable_137 -> variable_141 = func_117 ( & variable_6 -> variable_12 ) ; variable_137 -> variable_142 = func_118 ( & variable_6 -> variable_12 ) ; variable_137 -> variable_143 = func_119 ( & variable_6 -> variable_12 ) ; if ( ! variable_137 -> variable_142 ) variable_137 -> variable_142 = 256 ; if ( variable_137 -> variable_142 > variable_6 -> variable_47 ) variable_137 -> variable_142 = variable_6 -> variable_47 ; if ( variable_137 -> variable_138 >= variable_137 -> variable_141 || variable_137 -> variable_141 > 33 || variable_137 -> variable_139 >= variable_137 -> variable_142 || variable_137 -> variable_142 > variable_6 -> variable_47 || ! variable_137 -> variable_140 ) return variable_49 ; if ( ! variable_132 -> variable_134 || variable_132 -> variable_144 ) if ( variable_132 -> variable_134 + variable_118 . variable_134 > variable_135 ) return variable_49 ; return 0 ; if ( ! ( variable_9 = func_120 ( variable_6 , variable_33 ) ) ) variable_26 = variable_6 -> variable_38 [ variable_6 -> variable_10 ] . variable_26 ; variable_28 = variable_6 -> variable_38 [ variable_6 -> variable_10 ] . variable_28 ; variable_30 = & variable_6 -> variable_38 [ variable_6 -> variable_10 ] . variable_30 ; variable_32 = variable_6 -> variable_38 [ variable_6 -> variable_10 ] . variable_32 ; variable_9 = func_121 ( variable_6 , variable_33 ) ; static uint8_t func_122 ( variable_5 * variable_6 , int variable_122 ) return 0 ; variable_9 = func_123 ( variable_6 , variable_33 ) ; static uint8_t func_124 ( variable_5 * variable_6 , int variable_122 ) return 0 ; if ( func_125 ( & variable_6 -> variable_12 ) - variable_35 != variable_33 || variable_9 ) static int func_126 ( variable_5 * variable_6 , int variable_122 ) uint16_t variable_145 ; uint32_t variable_146 ; unsigned variable_147 ; if ( func_127 ( & variable_6 -> variable_12 ) < 8 ) variable_6 -> variable_10 = 0 ; variable_145 = func_128 ( & variable_6 -> variable_12 ) ; if ( variable_145 >= variable_6 -> variable_68 * variable_6 -> variable_69 ) variable_6 -> variable_10 = variable_145 ; variable_146 = func_129 ( & variable_6 -> variable_12 ) ; variable_147 = func_130 ( & variable_6 -> variable_12 ) ; if ( ! variable_146 ) variable_146 = func_131 ( & variable_6 -> variable_12 ) + variable_122 + 2 ; if ( variable_146 > func_132 ( & variable_6 -> variable_12 ) + variable_122 + 2 ) variable_6 -> variable_38 [ variable_145 ] . variable_42 = variable_147 ; if ( ! variable_147 ) variable_37 * variable_38 = variable_6 -> variable_38 + variable_6 -> variable_10 ; memcpy ( variable_38 -> variable_26 , variable_6 -> variable_26 , variable_6 -> variable_47 * sizeof ( variable_25 ) ) ; memcpy ( variable_38 -> variable_28 , variable_6 -> variable_28 , variable_6 -> variable_47 * sizeof ( variable_27 ) ) ; memcpy ( & variable_38 -> variable_30 , & variable_6 -> variable_30 , sizeof ( variable_38 -> variable_30 ) ) ; variable_38 -> variable_30 . variable_144 = 1 ;
