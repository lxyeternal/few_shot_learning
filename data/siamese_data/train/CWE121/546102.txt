 void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 variable_0 :: func_0 ( uint32_t variable_1 , char * * variable_2 , variable_3 variable_3 * variable_4 , int32_t variable_5 ) char variable_6 [ 256 ] ; nsresult variable_7 = func_1 ( variable_1 , variable_6 , 256 ) ; if ( func_2 ( variable_7 ) ) int32_t variable_8 = ( variable_3 ) func_3 ( variable_6 ) ; if ( ( variable_8 + variable_5 ) >= ( * variable_9 - * variable_4 ) ) int32_t variable_10 = variable_8 + variable_11 ; char * variable_12 = ( char * ) func_4 ( * variable_2 , * variable_9 + variable_10 + 1 ) ; if ( variable_12 ) * variable_2 = variable_12 ; memcpy ( ( * variable_2 + * variable_4 ) , variable_6 , variable_8 ) ;
