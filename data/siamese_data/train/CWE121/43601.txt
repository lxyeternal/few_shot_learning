 void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 void func_0 ( ) int variable_0 = 7 ; char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = ( ( int ) ( strlen ( variable_1 ) ) ) ; variable_4 = ( ( char * ) ( malloc ( variable_3 + 1 ) ) ) ; memset ( variable_4 , 0 , variable_3 + 1 ) ; memcpy ( variable_4 , variable_1 , variable_3 ) ; variable_5 = & variable_4 ; variable_6 = & variable_5 ; func_3 ( variable_0 , variable_6 ) ; void func_4 ( int variable_7 , char * * * variable_8 ) char * variable_9 ; char variable_10 [ 80 ] ; FILE * variable_11 ; FILE * * variable_12 ; FILE * variable_13 ; char * * variable_14 ; int variable_15 = 10 ; int variable_16 ; variable_7 -- ; if ( variable_7 > 0 ) variable_17 = ( ( char * ) ( * ( * variable_8 ) ) ) ; variable_14 = malloc ( sizeof ( char * ) * variable_15 ) ; if ( variable_14 != 0 ) variable_13 = fopen ( variable_17 , " rb " ) ; if ( variable_13 != 0 ) variable_12 = malloc ( variable_15 * sizeof ( FILE * ) ) ; for ( variable_18 = 0 ; variable_18 < variable_15 ; ++ variable_18 ) if ( fscanf ( variable_13 , " % 79s " , variable_10 ) == 1 ) variable_12 [ variable_18 ] = fopen ( variable_10 , " rb " ) ; variable_18 = 0 ; while ( variable_18 < variable_15 ) variable_11 = variable_12 [ variable_18 ] ; if ( variable_11 == 0 ) fseek ( variable_11 , 0 , 2 ) ; variable_16 = ftell ( variable_11 ) ; rewind ( variable_11 ) ; variable_9 = malloc ( ( variable_16 + 1 ) * sizeof ( char ) ) ; if ( variable_9 == 0 && variable_19 == 12 ) if ( variable_9 == 0 ) fclose ( variable_11 ) ; memset ( variable_9 , 0 , ( variable_16 + 1 ) * sizeof ( char ) ) ; fread ( variable_9 , 1 , variable_16 , variable_11 ) ; variable_9 = func_5 ( variable_9 , variable_16 ) ; char * func_6 ( char * variable_20 , int variable_21 ) for ( variable_22 = 0 ; variable_22 < variable_21 ; variable_22 ++ ) if ( ! func_7 ( variable_20 [ variable_22 ] ) ) int func_8 ( int variable_23 ) if ( ( variable_23 >= 97 && variable_23 <= 122 ) || ( variable_23 >= 65 && variable_23 <= 90 ) || ( variable_23 >= 48 && variable_23 <= 57 ) ) return variable_20 ; variable_14 [ variable_18 ] = variable_9 ; fclose ( variable_11 ) ; variable_18 ++ ; func_9 ( variable_14 , variable_15 ) ; void func_10 ( char * * variable_24 , int variable_25 ) for ( ; variable_26 < variable_25 ; ++ variable_26 ) if ( variable_24 [ variable_26 ] != 0 ) free ( variable_24 [ variable_26 ] ) ; free ( variable_14 ) ;
