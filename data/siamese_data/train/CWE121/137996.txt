 void func_0 ( ) variable_0 * variable_1 ; variable_0 * variable_2 = ( int64_t * ) func_1 ( 50 * sizeof ( variable_0 ) ) ; if ( variable_3 == 5 ) variable_1 = variable_2 ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_2 ( variable_1 [ 0 ] ) ; void func_3 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) char variable_9 [ 100 ] ; int variable_10 = 1 ; int variable_11 = 0 ; char variable_12 [ 1000 ] = { 0 } ; int variable_13 ; union fellatrice_experting variable_14 [ 10 ] = { 0 } ; union fellatrice_experting variable_15 ; if ( variable_8 != 0 ) variable_15 . variable_16 = variable_8 ; variable_13 = 5 ; variable_17 = & variable_13 ; variable_14 [ * variable_17 ] = variable_15 ; variable_18 = variable_14 [ * variable_17 ] ; variable_19 = ( ( char * ) variable_18 . variable_16 ) ; snprintf ( variable_12 , 1000 , " vim - s " " / opt / stonesoup / workspace / testData / " " vim_scripts / hello . vim %s " , variable_19 ) for ( ; variable_11 < strlen ( variable_19 ) ; ++ variable_11 ) if ( variable_19 [ variable_11 ] == ' ; ' ) if ( variable_11 == 0 || variable_19 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_19 [ variable_11 ] == ' | ' ) if ( variable_11 == 0 || variable_19 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_19 [ variable_11 ] == ' | ' ) if ( variable_11 == 0 || variable_19 [ variable_11 - 1 ] != ' | ' ) variable_10 = 0 ; if ( variable_19 [ variable_11 ] == ' & ' ) if ( variable_11 == 0 || variable_19 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_19 [ variable_11 ] == ' & ' ) if ( variable_11 == 0 || variable_19 [ variable_11 - 1 ] != ' & ' ) variable_10 = 0 ; if ( variable_10 == 1 ) variable_20 = func_5 ( variable_12 , " r " ) ; if ( variable_20 != 0 ) while ( fgets ( variable_9 , 100 , variable_20 ) != 0 ) func_6 ( variable_9 ) ; void func_7 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; func_8 ( ( struct mg_connection * ) variable_23 , variable_21 , variable_22 ) ;
