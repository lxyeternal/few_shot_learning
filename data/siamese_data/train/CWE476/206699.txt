 void func_0 ( ) if ( variable_0 == 5 ) variable_1 = ( int * ) malloc ( sizeof ( int ) ) ; * variable_1 = 5 ; func_1 ( * variable_1 ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; if ( variable_1 != NULL ) * variable_1 = 10 ; func_3 ( * variable_1 ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ;
 variable_0 * func_0 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) variable_0 * variable_5 = func_1 ( ! 0 , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_2 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) if ( variable_4 ) return func_3 ( variable_6 , ( ( void * ) 0 ) , ( func_4 ( " subversion " , " In file ' %s ' line %d : assertion failed ( %s ) " ) ) , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_5 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_6 ( variable_7 , variable_8 ) ; static variable_0 * func_7 ( apr_status_t variable_7 , variable_0 * variable_8 ) variable_11 * variable_12 ; variable_0 * variable_13 ; if ( variable_8 ) variable_12 = variable_8 -> variable_12 ; variable_13 = ( memset ( func_8 ( variable_12 , sizeof ( ( * variable_13 ) ) ) , 0 , sizeof ( ( * variable_13 ) ) ) ) ; variable_13 -> variable_7 = variable_7 ; variable_13 -> variable_8 = variable_8 ; variable_13 -> variable_12 = variable_12 ; return variable_13 ; variable_5 -> variable_14 = ( func_9 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; return func_10 ( variable_6 , ( ( void * ) 0 ) , ( func_11 ( " subversion " , " In file ' %s ' line %d : internal malfunction " ) ) , variable_2 , variable_3 ) ; variable_0 * func_12 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_13 ( variable_7 , variable_8 ) ; variable_5 -> variable_14 = ( func_14 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; func_15 ( variable_5 , variable_15 , 0 , "  svn : " ) ; void func_16 ( variable_0 * variable_5 , FILE * variable_16 , svn_boolean_t variable_17 , const char * variable_18 ) variable_11 * variable_19 ; variable_20 * variable_21 ; variable_0 * variable_22 ; variable_21 = func_17 ( variable_19 , 0 , ( sizeof ( variable_23 ) ) ) ; variable_22 = variable_5 ; while ( variable_22 ) svn_boolean_t variable_24 = 0 ; if ( ! variable_22 -> variable_14 ) int variable_25 ; for ( variable_25 = 0 ; variable_25 < variable_21 -> variable_26 ; variable_25 ++ ) if ( variable_22 -> variable_7 == ( ( apr_status_t * ) ( variable_21 -> variable_27 ) ) [ variable_25 ] ) variable_24 = ! 0 ; if ( ! variable_24 ) func_18 ( variable_22 , variable_16 , variable_18 ) ; variable_22 = variable_22 -> variable_8 ; static void func_19 ( variable_0 * variable_5 , FILE * variable_16 , const char * variable_18 ) if ( func_20 ( variable_5 ) ) svn_boolean_t func_21 ( variable_0 * variable_5 ) return variable_5 && variable_5 -> variable_14 && ! strcmp ( variable_5 -> variable_14 , variable_28 ) ;
