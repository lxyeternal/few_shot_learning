 void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; SOCKET variable_8 = variable_9 ; SOCKET variable_10 = variable_9 ; char variable_11 [ variable_12 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_8 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_8 == variable_9 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_17 = variable_14 ; variable_7 . variable_18 . variable_19 = variable_20 ; variable_7 . variable_21 = func_6 ( variable_22 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_23 ) break ; if ( func_7 ( variable_8 , variable_24 ) == variable_23 ) break ; variable_10 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_10 == variable_23 ) break ; variable_6 = recv ( variable_10 , variable_11 , variable_12 - 1 , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_11 [ variable_6 ] = ' \0 ' ; variable_0 = atoi ( variable_11 ) ; while ( 0 ) if ( variable_8 != variable_9 ) func_9 ( variable_8 ) ; if ( variable_10 != variable_9 ) func_10 ( variable_10 ) ; if ( variable_5 ) func_11 ( ) ; delete variable_2 variable_1 :: ~ func_12 ( ) if ( variable_0 < 100 ) char * variable_25 = ( char * ) malloc ( variable_0 ) ; memset ( variable_25 , ' A ' , variable_0 - 1 ) ; variable_25 [ variable_0 - 1 ] = ' \0 ' ; func_13 ( variable_25 ) ; void func_14 ( const char * variable_26 ) if ( variable_26 != NULL ) printf ( " %s \n " , variable_26 ) ; free ( variable_25 ) ;
