 void func_0 ( ) int variable_0 ; variable_1 < int , int > variable_2 ; variable_0 = - 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; char variable_6 [ variable_7 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_14 = variable_10 ; variable_5 . variable_15 . variable_16 = variable_17 ; variable_5 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_4 = recv ( variable_22 , variable_6 , variable_7 - 1 , 0 ) ; if ( variable_4 == variable_20 || variable_4 == 0 ) variable_6 [ variable_4 ] = ' \0 ' ; variable_0 = atoi ( variable_6 ) ; while ( 0 ) variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_7 ( variable_2 ) ; void func_8 ( variable_1 < int , int > variable_2 ) int variable_0 = variable_2 [ 2 ] ; char variable_23 [ 100 ] ; char variable_24 [ 100 ] = " " ; memset ( variable_23 , ' A ' , 100 - 1 ) ; variable_23 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_24 , variable_23 , variable_0 ) ; variable_24 [ variable_0 ] = ' \0 ' ; func_9 ( variable_24 ) ; void func_10 ( const char * variable_25 ) if ( variable_25 != NULL ) printf ( " %s \n " , variable_25 ) ;
 void func_0 ( variable_0 * variable_1 ) func_1 ( variable_1 , variable_2 ) ; static void func_2 ( variable_0 * variable_1 , gint variable_3 ) if ( variable_4 -> variable_5 == - 1 ) if ( variable_4 -> variable_5 == - 1 ) switch ( variable_3 ) func_3 ( variable_4 , variable_1 ) ; static void func_4 ( variable_6 * variable_7 , variable_0 * variable_1 ) gint variable_8 ; gint variable_9 ; gint64 variable_10 ; gint64 variable_11 ; variable_8 = 64 * 64 * ( variable_1 -> variable_12 ) ; if ( variable_1 -> variable_13 == ( - 1 ) ) variable_11 = func_5 ( variable_7 , variable_8 ) ; static gint64 func_6 ( variable_6 * variable_7 , gint64 variable_8 ) variable_14 * variable_15 ; variable_16 * variable_17 ; gint64 variable_10 ; variable_17 = variable_7 -> variable_18 ; while ( variable_17 ) variable_15 = ( variable_17 -> variable_19 ) ; if ( variable_15 -> variable_20 - variable_15 -> variable_21 >= variable_8 ) variable_10 = variable_15 -> variable_21 ; return variable_10 ; variable_17 = variable_17 -> variable_22 ; variable_10 = variable_7 -> variable_23 ; return variable_10 ; variable_11 = variable_1 -> variable_13 ; if ( variable_7 -> variable_24 != variable_11 ) variable_10 = func_7 ( variable_7 -> variable_5 , variable_11 , 0 ) ; if ( variable_10 == ( - 1 ) ) variable_7 -> variable_24 = variable_11 ; variable_9 = variable_1 -> variable_25 ; while ( variable_9 > 0 ) gint variable_26 = ( func_8 ( variable_7 -> variable_5 , ( variable_1 -> variable_19 + variable_1 -> variable_25 - variable_9 ) , variable_9 ) ) ; if ( variable_26 <= 0 ) func_9 ( " Gimp - Base " , variable_27 , " unable to write tile data to disk : %s ( %d / %d bytes written ) " , func_10 ( * func_11 ( ) ) , variable_26 , variable_9 ) ; variable_9 -= variable_26 ;
