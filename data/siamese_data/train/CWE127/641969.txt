 void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;
 static void func_0 ( const nstime_t * variable_0 , variable_1 * variable_2 ) char * variable_3 = " . lck " ; char * variable_4 ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_5 = getenv ( " DENSITY_ZABOGLIONE " ) ; if ( variable_5 != 0 ) variable_7 = variable_5 ; variable_8 = ( ( char * ) variable_7 ) ; variable_4 = ( char * ) malloc ( strlen ( " / opt / stonesoup / workspace / testData / " ) + strlen ( variable_8 ) + strlen ( variable_3 ) + 1 ) ; func_3 ( variable_9 , variable_10 , " stonesoup_thelockfile " , variable_4 , " INITIAL - STATE " ) ; if ( variable_4 ) strcpy ( variable_4 , " / opt / stonesoup / workspace / testData / " ) ; strcat ( variable_4 , variable_8 ) ; strcat ( variable_4 , variable_3 ) ; func_4 ( " Grabbing lock file : %s \n " , variable_4 ) ; void func_5 ( char * variable_11 , . . . ) va_start ( variable_12 , variable_11 ) ; vfprintf ( variable_13 , variable_11 , variable_12 ) ; while ( variable_14 = func_6 ( variable_4 , variable_15 | variable_16 , 0644 ) == - 1 ) if ( variable_14 != - 1 ) func_7 ( variable_14 ) ; func_8 ( variable_4 ) ; free ( variable_4 ) ;
 int main ( int variable_0 , char * variable_1 [ ] ) if ( variable_0 > 1 ) char variable_2 [ 256 ] = " " ; strncpy ( variable_2 , variable_1 [ 1 ] , 255 ) ; func_0 ( variable_2 ) ; void func_1 ( char * variable_2 ) char * variable_3 = variable_2 , * variable_4 = variable_5 ; for ( ; * variable_3 != ' \0 ' ; variable_3 ++ ) if ( * variable_3 != ' / ' ) * variable_4 ++ = * variable_3 ; * variable_4 = ' \0 ' ; strncpy ( variable_2 , variable_5 , 255 ) ; printf ( " fName = %s \n " , variable_2 ) ; if ( func_2 ( variable_2 ) ) int func_3 ( const char * variable_6 ) if ( variable_7 = fopen ( variable_6 , " r " ) ) while ( fgets ( variable_8 , 512 , variable_7 ) ) printf ( " % 3 d : %s " , ++ variable_9 , variable_8 ) ; fclose ( variable_7 ) ;
