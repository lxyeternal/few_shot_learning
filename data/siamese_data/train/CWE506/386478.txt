 void func_0 ( ) if ( 1 ) WSADATA variable_0 ; struct sockaddr_in variable_1 ; struct variable_2 * variable_3 ; char variable_4 [ 4096 ] = " " ; char variable_5 [ 255 ] = " " ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) variable_3 = func_4 ( variable_12 ) ; memset ( & variable_1 , 0 , sizeof ( variable_1 ) ) ; variable_1 . variable_13 = variable_8 ; variable_1 . variable_14 = * ( ( struct in_addr * ) * variable_3 -> variable_15 ) ; variable_1 . variable_16 = func_5 ( 25 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_1 , sizeof ( variable_1 ) ) == variable_17 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " HELO %s %s " , variable_12 , variable_18 ) ; if ( func_7 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " MAIL FROM : < %s > %s " , " sender @ example . com " , variable_18 ) ; if ( func_8 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " RCPT TO : < %s > %s " , " receiver @ example . com " , variable_18 ) ; if ( func_9 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " DATA %s " , variable_18 ) ; if ( func_10 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " %s %s " , " Shhh , I ' m sending some bad stuff ! " , variable_18 ) ; if ( func_11 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) sprintf ( variable_5 , " %s . %s " , variable_18 , variable_18 ) ; if ( func_12 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) sprintf ( variable_5 , " QUIT %s " , variable_18 ) ; if ( func_13 ( variable_7 , variable_5 , strlen ( variable_5 ) , 0 ) <= 0 ) if ( recv ( variable_7 , variable_4 , sizeof ( variable_4 ) , 0 ) <= 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_14 ( variable_7 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) char variable_9 [ 100 ] ; int variable_10 = 1 ; int variable_11 = 0 ; char variable_12 [ 1000 ] = { 0 } ; if ( variable_8 != 0 ) variable_13 = ( ( char * ) variable_8 ) ; snprintf ( variable_12 , 1000 , " vim - s " " / opt / stonesoup / workspace / testData / " " vim_scripts / hello . vim %s " , variable_13 ) for ( ; variable_11 < strlen ( variable_13 ) ; ++ variable_11 ) if ( variable_13 [ variable_11 ] == ' ; ' ) if ( variable_11 == 0 || variable_13 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_13 [ variable_11 ] == ' | ' ) if ( variable_11 == 0 || variable_13 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_13 [ variable_11 ] == ' | ' ) if ( variable_11 == 0 || variable_13 [ variable_11 - 1 ] != ' | ' ) variable_10 = 0 ; if ( variable_13 [ variable_11 ] == ' & ' ) if ( variable_11 == 0 || variable_13 [ variable_11 - 1 ] != ' \ \ ' ) variable_10 = 0 ; if ( variable_13 [ variable_11 ] == ' & ' ) if ( variable_11 == 0 || variable_13 [ variable_11 - 1 ] != ' & ' ) variable_10 = 0 ; if ( variable_10 == 1 ) variable_14 = func_5 ( variable_12 , " r " ) ; if ( variable_14 != 0 ) while ( fgets ( variable_9 , 100 , variable_14 ) != 0 ) func_6 ( variable_9 ) ; void func_7 ( char * variable_15 , . . . ) va_start ( variable_16 , variable_15 ) ; func_8 ( ( struct mg_connection * ) variable_17 , variable_15 , variable_16 ) ;
