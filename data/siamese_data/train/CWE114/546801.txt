 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_2 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) return variable_0 ; HMODULE variable_20 ; variable_20 = func_9 ( variable_0 ) ; if ( variable_20 != NULL ) FreeLibrary ( variable_20 ) ;
 static unsigned int __stdcall func_0 ( void * variable_0 ) variable_1 * variable_2 = ( ap_listen_rec * ) variable_0 ; variable_3 * variable_4 = NULL ; DWORD variable_5 ; SOCKET variable_6 ; LPFN_ACCEPTEX variable_7 = NULL ; LPFN_GETACCEPTEXSOCKADDRS variable_8 = NULL ; GUID variable_9 = variable_10 ; GUID variable_11 = variable_12 ; variable_13 * variable_14 ; const char * variable_15 ; int variable_16 ; int variable_17 ; int variable_18 = 0 ; HANDLE variable_19 [ 3 ] ; SOCKADDR_STORAGE variable_20 ; variable_14 = func_1 ( variable_21 -> variable_22 ) ; variable_15 = func_2 ( variable_14 -> variable_23 , variable_2 -> variable_24 ) ; if ( ! variable_15 ) variable_17 = 0 ; variable_15 = " none " ; if ( strcmp ( variable_15 , " data " ) == 0 ) variable_17 = 2 ; if ( strcmp ( variable_15 , " connect " ) == 0 ) variable_17 = 1 ; if ( strcmp ( variable_15 , " none " ) == 0 ) variable_17 = 0 ; variable_17 = 0 ; if ( func_3 ( variable_6 , ( struct sockaddr * ) & variable_20 , & variable_25 ) == variable_26 ) if ( variable_17 > 0 ) if ( func_4 ( variable_6 , variable_27 , & variable_9 , sizeof variable_9 , & variable_7 , sizeof variable_7 , & variable_5 , NULL , NULL ) == variable_26 ) if ( func_5 ( variable_6 , variable_27 , & variable_11 , sizeof variable_11 , & variable_8 , sizeof variable_8 , & variable_5 , NULL , NULL ) == variable_26 ) variable_19 [ 1 ] = variable_28 ; variable_19 [ 2 ] = variable_29 ; variable_19 [ 0 ] = variable_28 ; variable_19 [ 1 ] = variable_29 ; variable_19 [ 2 ] = CreateEvent ( NULL , variable_30 , variable_30 , NULL ) ; variable_16 = func_6 ( variable_6 , variable_19 [ 2 ] , variable_31 ) ; if ( variable_16 ) while ( ! variable_32 ) if ( ! variable_4 ) int variable_33 ; variable_4 = func_7 ( & variable_33 ) ; if ( ! variable_4 ) if ( ! variable_33 ) if ( variable_18 > variable_34 ) if ( variable_17 > 0 ) DWORD variable_35 ; char * variable_36 ; if ( variable_4 -> variable_37 == variable_38 ) variable_4 -> variable_37 = func_8 ( variable_20 . variable_39 , variable_40 , variable_41 ) ; variable_4 -> variable_42 = variable_20 . variable_39 ; if ( variable_4 -> variable_42 != variable_20 . variable_39 ) func_9 ( variable_4 -> variable_37 ) ; variable_4 -> variable_37 = func_10 ( variable_20 . variable_39 , variable_40 , variable_41 ) ; variable_4 -> variable_42 = variable_20 . variable_39 ; if ( variable_4 -> variable_37 == variable_38 ) if ( variable_17 == 2 ) variable_35 = variable_43 ; variable_36 = func_11 ( variable_35 , variable_4 -> variable_44 ) ; variable_35 -= variable_45 * 2 ; variable_35 = 0 ; variable_36 = variable_4 -> variable_46 ; if ( ! func_12 ( variable_6 , variable_4 -> variable_37 , variable_36 , variable_35 , variable_45 , variable_45 , & variable_5 , & variable_4 -> variable_47 ) ) variable_16 = func_13 ( ) ; if ( ( variable_16 == func_14 ( variable_48 ) ) || ( variable_16 == func_15 ( variable_49 ) ) ) func_16 ( variable_36 ) ; func_17 ( variable_4 -> variable_37 ) ; variable_4 -> variable_37 = variable_38 ; if ( ( variable_16 == func_18 ( variable_50 ) ) || ( variable_16 == func_19 ( variable_51 ) ) ) func_20 ( variable_36 ) ; func_21 ( variable_4 -> variable_37 ) ; variable_4 -> variable_37 = variable_38 ; if ( variable_18 > variable_34 ) variable_18 = 0 ; variable_17 = 0 ; if ( ( variable_16 != func_22 ( variable_52 ) ) && ( variable_16 != func_23 ( variable_53 ) ) ) func_24 ( variable_36 ) ; func_25 ( variable_4 -> variable_37 ) ; variable_4 -> variable_37 = variable_38 ; if ( variable_18 > variable_34 ) variable_18 = 0 ; variable_17 = 0 ; variable_18 = 0 ; variable_19 [ 0 ] = variable_4 -> variable_47 . variable_54 ; variable_16 = func_26 ( 3 , variable_19 , variable_30 , variable_55 , variable_56 ) ; while ( variable_16 == variable_57 ) if ( variable_16 == variable_58 ) if ( ( variable_4 -> variable_37 != variable_38 ) && ! GetOverlappedResult ( ( variable_59 ) variable_4 -> variable_37 , & variable_4 -> variable_47 , & variable_5 , variable_30 ) ) func_27 ( variable_4 -> variable_37 ) ; variable_4 -> variable_37 = variable_38 ; func_28 ( variable_4 -> variable_37 ) ; func_29 ( variable_36 ) ; if ( variable_4 -> variable_37 == variable_38 ) func_30 ( variable_36 ) ; variable_18 = 0 ; if ( func_31 ( variable_4 -> variable_37 , variable_60 , variable_61 , ( char * ) & variable_6 , sizeof ( variable_6 ) ) ) func_32 ( variable_36 , variable_35 , variable_45 , variable_45 , & variable_4 -> variable_62 , & variable_4 -> variable_63 , & variable_4 -> variable_64 , & variable_4 -> variable_65 ) ; if ( variable_17 == 2 && variable_5 ) variable_66 * variable_67 ; variable_67 = func_33 ( variable_36 , variable_43 , variable_68 , variable_4 -> variable_44 ) ; variable_67 -> variable_69 = variable_5 ; variable_4 -> variable_47 . variable_70 = variable_67 ; func_34 ( variable_36 ) ; variable_4 -> variable_47 . variable_70 = NULL ; if ( variable_4 -> variable_37 != variable_38 ) func_35 ( variable_4 -> variable_37 ) ; variable_16 = func_36 ( 3 , variable_19 , variable_30 , variable_55 , variable_56 ) ; while ( variable_16 == variable_57 ) if ( variable_16 != variable_58 + 2 ) variable_4 -> variable_62 = ( void * ) variable_4 -> variable_46 ; variable_4 -> variable_63 = sizeof ( variable_4 -> variable_46 ) / 2 ; variable_4 -> variable_65 = variable_4 -> variable_63 ; variable_4 -> variable_64 = ( void * ) ( variable_4 -> variable_46 + variable_4 -> variable_63 ) ; variable_4 -> variable_37 = func_37 ( variable_6 , variable_4 -> variable_62 , & variable_4 -> variable_63 ) ; if ( variable_4 -> variable_37 == variable_38 ) variable_16 = func_38 ( ) ; if ( variable_16 == func_39 ( variable_48 ) || variable_16 == func_40 ( variable_71 ) || variable_16 == func_41 ( variable_72 ) ) if ( variable_16 == func_42 ( variable_73 ) || variable_16 == func_43 ( variable_74 ) ) if ( variable_18 > variable_34 ) func_44 ( variable_4 -> variable_37 , 0 , 0 ) ; variable_4 -> variable_47 . variable_70 = NULL ; variable_18 = 0 ; variable_4 -> variable_63 = sizeof ( variable_4 -> variable_46 ) / 2 ; if ( func_45 ( variable_4 -> variable_37 , variable_4 -> variable_62 , & variable_4 -> variable_63 ) == variable_26 ) if ( ( func_46 ( variable_4 -> variable_37 , variable_4 -> variable_64 , & variable_4 -> variable_65 ) ) == variable_26 ) memset ( & variable_4 -> variable_64 , ' \0 ' , sizeof ( variable_4 -> variable_64 ) ) ; variable_75 . variable_76 = & variable_4 -> variable_37 ; variable_75 . variable_77 = variable_4 -> variable_62 ; variable_75 . variable_78 = variable_4 -> variable_64 ; variable_75 . variable_79 = variable_4 -> variable_62 -> variable_80 ; variable_75 . variable_81 = variable_40 ; variable_75 . variable_24 = variable_41 ; func_47 ( variable_4 -> variable_37 , variable_82 , & variable_83 ) ; func_48 ( variable_4 -> variable_37 , variable_60 , variable_84 , ( char * ) & variable_83 , sizeof ( variable_83 ) ) ; func_49 ( variable_4 -> variable_37 , variable_60 , variable_85 , ( char * ) & variable_83 , sizeof ( variable_83 ) ) ; func_50 ( & variable_4 -> variable_86 , & variable_75 , variable_4 -> variable_87 ) ; func_51 ( variable_88 , variable_5 , variable_89 , & variable_4 -> variable_47 ) ; variable_4 = NULL ; CloseHandle ( variable_19 [ 2 ] ) ;
