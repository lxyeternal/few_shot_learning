 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) HMODULE variable_5 ; variable_5 = func_5 ( variable_0 ) ; if ( variable_5 != NULL ) FreeLibrary ( variable_5 ) ;
 long func_0 ( struct variable_0 * variable_0 , unsigned int variable_1 , unsigned long variable_2 ) struct variable_3 * variable_4 ; long variable_5 ; variable_4 = func_1 ( variable_0 ) ; struct variable_3 * func_2 ( struct variable_0 * variable_0 ) return variable_0 -> variable_6 == & variable_7 ? variable_0 -> variable_8 : NULL ; if ( ! variable_4 ) switch ( variable_1 ) unsigned int variable_9 , variable_10 ; variable_9 = func_3 ( variable_2 ) ; static inline unsigned int func_4 ( unsigned int variable_9 ) unsigned long variable_10 ; variable_10 = ( variable_9 + variable_11 - 1 ) >> variable_12 ; return func_5 ( variable_10 ) << variable_12 ; variable_10 = variable_9 >> variable_12 ; if ( ! variable_10 ) if ( ! func_6 ( variable_13 ) && variable_9 > variable_14 ) variable_5 = func_7 ( variable_4 , variable_10 ) ; static long func_8 ( struct variable_3 * variable_4 , unsigned long variable_10 ) struct variable_15 * variable_16 ; if ( variable_10 < variable_4 -> variable_17 ) variable_16 = func_9 ( variable_10 , sizeof ( * variable_16 ) , variable_18 | variable_19 ) ; if ( func_10 ( ! variable_16 ) ) if ( variable_4 -> variable_17 ) unsigned int variable_20 ; unsigned int variable_21 ; variable_20 = variable_4 -> variable_22 + variable_4 -> variable_17 ; if ( variable_20 < variable_4 -> variable_23 ) variable_20 = 0 ; variable_20 &= ( variable_4 -> variable_23 - 1 ) ; variable_21 = variable_4 -> variable_17 - variable_20 ; if ( variable_21 ) memcpy ( variable_16 , variable_4 -> variable_16 + variable_4 -> variable_22 , variable_21 * sizeof ( struct variable_15 ) ) ; if ( variable_20 ) memcpy ( variable_16 + variable_21 , variable_4 -> variable_16 , variable_20 * sizeof ( struct variable_15 ) ) ; variable_4 -> variable_16 = variable_16 ; variable_4 -> variable_23 = variable_10 ;
