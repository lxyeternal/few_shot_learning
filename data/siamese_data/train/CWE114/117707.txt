 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_2 = strlen ( variable_0 ) ; char * variable_3 = func_3 ( variable_4 ) ; if ( variable_3 != NULL ) strncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; HMODULE variable_5 ; variable_5 = func_4 ( variable_0 ) ; if ( variable_5 != NULL ) FreeLibrary ( variable_5 ) ;
 static void func_0 ( void * variable_0 , variable_1 uint64_t variable_2 , unsigned int variable_3 ) variable_4 * variable_5 = variable_0 ; uint32_t variable_6 ; variable_6 = variable_7 >> variable_5 -> variable_8 ; func_1 ( & variable_5 -> variable_9 , variable_6 , variable_2 ) ; void func_2 ( variable_10 * variable_11 , uint32_t variable_6 , uint64_t variable_2 ) switch ( variable_6 ) variable_11 -> variable_12 = true ; variable_11 -> variable_13 [ variable_14 ] &= ~ variable_15 ; if ( variable_11 -> variable_16 ) if ( variable_11 -> variable_17 == variable_18 - 1 ) variable_11 -> variable_17 ++ ; variable_11 -> variable_19 [ variable_11 -> variable_20 ++ ] = variable_2 & 0 variable_21 ; variable_11 -> variable_13 [ variable_6 ] = variable_2 ; if ( variable_2 & variable_22 ) variable_11 -> variable_23 = 1 ; variable_11 -> variable_13 [ variable_24 ] = variable_11 -> variable_25 [ variable_24 ] ; variable_11 -> variable_13 [ variable_26 ] = variable_11 -> variable_25 [ variable_26 ] ; variable_11 -> variable_13 [ variable_27 ] = variable_11 -> variable_25 [ variable_27 ] ; variable_11 -> variable_23 = 0 ; switch ( variable_2 & variable_28 ) variable_11 -> variable_13 [ variable_29 ] = variable_30 ; variable_11 -> variable_13 [ variable_31 ] = 0 ; variable_11 -> variable_13 [ variable_32 ] = 0 ; variable_11 -> variable_13 [ variable_29 ] = variable_33 ; variable_11 -> variable_13 [ variable_29 ] = variable_30 ; variable_11 -> variable_13 [ variable_14 ] |= variable_34 ; variable_11 -> variable_13 [ variable_29 ] = variable_35 ; variable_11 -> variable_13 [ variable_31 ] = 0 ; variable_11 -> variable_13 [ variable_32 ] = 0 ; variable_11 -> variable_13 [ variable_14 ] = variable_15 ; variable_11 -> variable_13 [ variable_29 ] = variable_30 ; variable_11 -> variable_13 [ variable_31 ] = 0 ; func_3 ( variable_11 ) ; static void func_4 ( variable_10 * variable_11 ) uint8_t variable_36 [ 32 ] ; int variable_37 ; if ( variable_11 -> variable_23 && ! variable_11 -> variable_38 ) variable_37 = func_5 ( variable_11 , variable_36 ) ; static uint32_t func_6 ( variable_10 * variable_11 , variable_39 * variable_36 ) uint32_t variable_40 ; if ( variable_11 -> variable_23 ) variable_40 = variable_11 -> variable_17 ; memcpy ( variable_36 , variable_11 -> variable_19 , variable_40 ) ; variable_36 [ 0 ] = variable_36 [ 2 ] >> 5 ;
