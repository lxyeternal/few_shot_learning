 static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) variable_1 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_1 [ 100 - 1 ] = L ' \0 ' func_9 ( variable_1 ) ; void func_10 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )
 variable_1 variable_2 * * variable_3 , const ReadOptions * variable_4 ) if ( variable_5 > 0 ) int64_t variable_6 ; variable_7 :: SeekMode variable_8 ; if ( variable_4 && variable_4 -> func_0 ( & variable_6 , & variable_8 ) ) uint32_t variable_9 = 0 ; switch ( variable_8 ) variable_9 = variable_10 :: variable_11 ; variable_9 = variable_10 :: variable_12 ; variable_9 = variable_10 :: variable_13 ; uint32_t variable_14 ; status_t variable_15 = variable_16 -> func_1 ( variable_6 * variable_17 / 1000000 , & variable_14 , variable_9 ) ; if ( variable_8 == variable_7 :: variable_18 ) variable_9 = variable_10 :: variable_11 ; uint32_t variable_19 ; if ( variable_15 == variable_20 ) variable_15 = variable_16 -> func_2 ( variable_14 , & variable_19 , variable_9 ) ; if ( variable_15 == variable_20 ) variable_15 = variable_16 -> func_3 ( variable_14 , NULL , NULL , & variable_21 ) ; if ( variable_15 != variable_20 ) if ( variable_8 == variable_7 :: variable_18 ) if ( ! variable_17 ) variable_22 = variable_19 ; if ( variable_23 != NULL ) variable_23 = NULL ; off64_t variable_24 = 0 ; size_t variable_25 = 0 ; bool variable_26 = false ; if ( variable_23 == NULL ) variable_26 = true ; status_t variable_15 = variable_16 -> func_4 ( variable_22 , & variable_24 , & variable_25 , & variable_27 , & variable_28 , & variable_29 , & variable_30 ) ; if ( variable_15 != variable_20 ) int32_t variable_31 ; variable_23 = new func_5 ( variable_32 :: min ( variable_31 , 1024 * 1024 ) ) ; if ( ! variable_33 || variable_34 ) if ( variable_26 ) if ( ! func_6 ( variable_25 ) ) ssize_t variable_35 = variable_36 -> func_7 ( variable_24 , ( uint8_t * ) variable_23 -> func_8 ( ) , variable_25 ) ; if ( variable_35 < ( variable_37 ) variable_25 ) if ( ! variable_17 ) if ( variable_16 -> func_9 ( ) ) variable_38 < variable_39 > variable_40 ; variable_38 < variable_41 > variable_42 ; uint8_t variable_43 [ 16 ] ; status_t variable_15 = variable_16 -> func_10 ( variable_22 , variable_40 , variable_42 , variable_43 ) ; if ( variable_15 != variable_20 ) if ( ! variable_33 ) variable_23 = NULL ; if ( variable_23 -> func_11 ( ) < variable_44 ) variable_23 = NULL ; const uint8_t * variable_45 = ( const uint8_t * ) variable_23 -> func_12 ( ) + variable_23 -> func_13 ( ) ; size_t variable_46 = func_14 ( variable_45 ) ; if ( variable_23 -> func_15 ( ) < variable_44 + variable_46 ) variable_23 = NULL ; if ( variable_23 -> func_16 ( ) == 0 ) variable_23 = NULL ; int32_t variable_47 = 0 ; bool variable_48 = ( variable_49 -> func_17 ( variable_50 , & variable_47 ) && variable_47 != 0 ) ; if ( variable_48 ) if ( ! func_18 ( variable_25 ) ) variable_35 = variable_36 -> func_19 ( variable_24 , ( uint8_t * ) variable_23 -> func_20 ( ) , variable_25 ) ; if ( ! func_21 ( variable_25 ) ) variable_35 = variable_36 -> func_22 ( variable_24 , variable_51 , variable_25 ) ; if ( variable_35 < ( variable_37 ) variable_25 ) if ( variable_48 ) size_t variable_52 = 0 ; size_t variable_53 = 0 ; while ( variable_52 < variable_25 ) bool variable_54 = ( variable_52 + variable_44 > variable_25 ) ; size_t variable_55 = 0 ; if ( ! variable_54 ) variable_55 = func_23 ( & variable_51 [ variable_52 ] ) ; variable_52 += variable_44 ; variable_54 = variable_52 + variable_55 > variable_25 ; if ( variable_54 ) if ( variable_55 == 0 ) if ( ! func_24 ( variable_53 + 4 + variable_55 ) ) variable_56 * variable_57 = ( uint8_t * ) variable_23 -> func_25 ( ) ; variable_57 [ variable_53 ++ ] = ( variable_56 ) ( variable_55 >> 24 ) ; variable_57 [ variable_53 ++ ] = ( variable_56 ) ( variable_55 >> 16 ) ; variable_57 [ variable_53 ++ ] = ( variable_56 ) ( variable_55 >> 8 ) ; variable_57 [ variable_53 ++ ] = ( variable_56 ) variable_55 ; memcpy ( & variable_57 [ variable_53 ] , & variable_51 [ variable_52 ] , variable_55 ) ; variable_52 += variable_55 ; variable_53 += variable_55 ;
