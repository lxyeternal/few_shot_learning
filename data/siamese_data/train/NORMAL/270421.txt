 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_2 ) * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;
 void func_0 ( outcheating_bequeathal variable_0 ) unsigned int variable_1 ; FILE * * variable_2 ; int variable_3 ; variable_4 = ( ( char * ) variable_0 ) ; if ( strlen ( variable_4 ) > 0 && variable_4 [ 0 ] == ' - ' ) variable_1 = strtoul ( variable_4 , 0 , 16 ) ; if ( variable_1 > 0 variable_5 ) variable_1 = 0 ; variable_2 = ( ( FILE * * ) ( malloc ( variable_1 * sizeof ( FILE * ) ) ) ) ; variable_6 = strlen ( " / opt / stonesoup / workspace / testData / temp " ) + 10 ; variable_7 = ( char * ) malloc ( variable_6 * sizeof ( char ) ) ; if ( variable_2 != 0 ) for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) variable_2 [ variable_3 ] = 0 ; for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) snprintf ( variable_7 , variable_6 , " %s _ % 08x " , " / opt / stonesoup / workspace / testData / temp " , variable_3 ) ; variable_2 [ variable_3 ] = func_1 ( variable_7 ) ; FILE * func_2 ( char * variable_8 ) FILE * variable_9 ; variable_9 = fopen ( variable_8 , " w " ) ; if ( ! variable_9 ) return 0 ; return variable_9 ; if ( variable_2 [ variable_3 ] == 0 ) for ( variable_3 = 0 ; variable_3 < variable_1 ; ++ variable_3 ) if ( variable_2 [ variable_3 ] != 0 ) fclose ( variable_2 [ variable_3 ] ) ;
