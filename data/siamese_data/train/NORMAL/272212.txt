 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; fclose ( variable_3 ) ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; func_3 ( variable_0 , variable_0 ) ; static void func_4 ( char * variable_0 , . . . ) va_start ( variable_6 , variable_0 ) ; vprintf ( variable_0 , variable_6 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) char * variable_9 ; char variable_10 [ 80 ] ; FILE * variable_11 ; FILE * * variable_12 ; FILE * variable_13 ; int variable_14 ; char * * variable_15 ; int variable_16 = 10 ; int variable_17 ; union laryngitises_mistranslated variable_18 ; if ( variable_8 != 0 ) variable_18 . variable_19 = variable_8 ; variable_20 = & variable_18 ; variable_21 = ( ( char * ) ( * variable_20 ) . variable_19 ) ; variable_15 = malloc ( sizeof ( char * ) * variable_16 ) ; if ( variable_15 != 0 ) for ( variable_14 = 0 ; variable_14 < variable_16 ; ++ variable_14 ) variable_15 [ variable_14 ] = 0 ; variable_13 = fopen ( variable_21 , " rb " ) ; if ( variable_13 != 0 ) variable_12 = malloc ( variable_16 * sizeof ( FILE * ) ) ; for ( variable_22 = 0 ; variable_22 < variable_16 ; ++ variable_22 ) if ( fscanf ( variable_13 , " % 79s " , variable_10 ) == 1 ) variable_12 [ variable_22 ] = fopen ( variable_10 , " rb " ) ; variable_22 = 0 ; while ( variable_22 < variable_16 ) variable_11 = variable_12 [ variable_22 ] ; if ( variable_11 == 0 ) fseek ( variable_11 , 0 , 2 ) ; variable_17 = ftell ( variable_11 ) ; rewind ( variable_11 ) ; variable_9 = malloc ( ( variable_17 + 1 ) * sizeof ( char ) ) ; if ( variable_9 == 0 && variable_23 == 12 ) if ( variable_9 == 0 ) fclose ( variable_11 ) ; memset ( variable_9 , 0 , ( variable_17 + 1 ) * sizeof ( char ) ) ; fread ( variable_9 , 1 , variable_17 , variable_11 ) ; variable_9 = func_5 ( variable_9 , variable_17 ) ; char * func_6 ( char * variable_24 , int variable_25 ) for ( variable_26 = 0 ; variable_26 < variable_25 ; variable_26 ++ ) if ( ! func_7 ( variable_24 [ variable_26 ] ) ) int func_8 ( int variable_27 ) if ( ( variable_27 >= 97 && variable_27 <= 122 ) || ( variable_27 >= 65 && variable_27 <= 90 ) || ( variable_27 >= 48 && variable_27 <= 57 ) ) return variable_24 ; variable_15 [ variable_22 ] = variable_9 ; fclose ( variable_11 ) ; variable_22 ++ ; func_9 ( variable_15 , variable_16 ) ; void func_10 ( char * * variable_28 , int variable_29 ) for ( ; variable_30 < variable_29 ; ++ variable_30 ) if ( variable_28 [ variable_30 ] != 0 ) free ( variable_28 [ variable_30 ] ) ; free ( variable_15 ) ;
