 void func_0 ( ) variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_5 , variable_6 -> variable_7 ) ;
 int func_0 ( variable_0 * variable_1 , void * variable_2 , int variable_3 * variable_4 ) variable_5 * variable_6 = variable_2 ; const uint8_t * variable_7 = variable_4 -> variable_2 ; int variable_8 = variable_4 -> variable_9 ; variable_10 * variable_11 = variable_1 -> variable_12 ; const uint8_t * variable_13 , * variable_14 ; const uint8_t * variable_15 ; int variable_16 ; int variable_17 ; variable_11 -> variable_18 = - 1 ; variable_14 = variable_7 ; variable_13 = variable_7 + variable_8 ; while ( variable_14 < variable_13 ) variable_17 = func_1 ( variable_11 , & variable_14 , variable_13 , & variable_15 , & variable_16 ) ; if ( variable_17 < 0 ) if ( variable_16 > variable_19 / 8 ) variable_20 = func_2 ( & variable_11 -> variable_21 , variable_15 , variable_16 ) ; if ( variable_20 < 0 ) variable_11 -> variable_17 = variable_17 ; if ( ! variable_22 && ( variable_17 == variable_23 || variable_17 == variable_24 ) ) switch ( variable_17 ) variable_11 -> variable_25 = 0 ; variable_11 -> variable_26 = 0 ; if ( ( variable_20 = func_3 ( variable_11 ) ) < 0 ) variable_11 -> variable_27 = 0 ; variable_11 -> variable_28 = 0 ; variable_11 -> variable_29 = 0 ; if ( ( variable_20 = func_4 ( variable_11 ) ) < 0 ) variable_11 -> variable_27 = 0 ; variable_11 -> variable_28 = 0 ; variable_11 -> variable_29 = 1 ; if ( ( variable_20 = func_5 ( variable_11 ) ) < 0 ) variable_11 -> variable_27 = 1 ; variable_11 -> variable_28 = 0 ; variable_11 -> variable_29 = 0 ; if ( ( variable_20 = func_6 ( variable_11 ) ) < 0 ) variable_11 -> variable_27 = 1 ; variable_11 -> variable_28 = 1 ; variable_11 -> variable_29 = 0 ; if ( ( variable_20 = func_7 ( variable_11 ) ) < 0 ) if ( ! variable_22 || ( variable_20 = func_8 ( variable_11 ) ) < 0 ) variable_11 -> variable_30 = 0 ; if ( ! variable_11 -> variable_31 ) if ( variable_11 -> variable_32 ) variable_11 -> variable_33 ^= 1 ; if ( variable_11 -> variable_33 == ! variable_11 -> variable_34 ) if ( ( variable_20 = func_9 ( variable_6 , variable_11 -> variable_35 ) ) < 0 ) variable_11 -> variable_31 = 0 ; variable_11 -> variable_30 ++ ; if ( ( variable_20 = func_10 ( variable_11 , NULL , 0 , NULL ) ) < 0 && ( variable_1 -> variable_36 & variable_37 ) ) variable_14 += ( func_11 ( & variable_11 -> variable_21 ) + 7 ) / 8 ; if ( variable_11 -> variable_31 && variable_11 -> variable_30 ) int func_12 ( variable_10 * variable_11 ) int variable_38 , variable_39 , variable_40 , variable_41 , variable_42 , variable_43 , variable_20 ; int variable_44 [ variable_45 ] ; variable_11 -> variable_30 = 0 ; variable_11 -> variable_46 = variable_11 -> variable_47 = 0 ; variable_11 -> variable_1 -> variable_48 = variable_43 = func_13 ( & variable_11 -> variable_21 , 8 ) ; if ( variable_43 > 16 || variable_43 < 1 ) if ( variable_11 -> variable_49 ) variable_43 = 9 ; if ( variable_43 == 9 && ! variable_11 -> variable_49 ) variable_11 -> variable_50 = 1 ; if ( variable_11 -> variable_27 && variable_11 -> variable_1 -> variable_51 ) variable_42 = func_14 ( & variable_11 -> variable_21 , 16 ) ; variable_41 = func_15 ( & variable_11 -> variable_21 , 16 ) ; if ( variable_11 -> variable_32 && variable_11 -> variable_41 == variable_41 && variable_11 -> variable_42 == variable_42 + 1 ) variable_42 = variable_11 -> variable_42 ; if ( func_16 ( variable_41 , variable_42 , 0 , variable_11 -> variable_1 ) ) variable_39 = func_17 ( & variable_11 -> variable_21 , 8 ) ; if ( variable_39 <= 0 || variable_39 > variable_45 ) if ( variable_11 -> variable_32 && ( variable_11 -> variable_33 == ! variable_11 -> variable_34 ) ) if ( variable_39 != variable_11 -> variable_39 ) if ( variable_11 -> variable_28 && ! ( variable_43 <= 8 || variable_39 == 1 ) ) memset ( variable_44 , 0 , sizeof ( variable_44 ) ) ; variable_11 -> variable_52 [ variable_40 ] = func_18 ( & variable_11 -> variable_21 , 8 ) - 1 ; variable_53 [ variable_40 ] = func_19 ( & variable_11 -> variable_21 , 4 ) ; variable_44 [ variable_40 ] = func_20 ( & variable_11 -> variable_21 , 4 ) ; if ( variable_53 [ variable_40 ] > variable_11 -> variable_54 ) variable_11 -> variable_54 = variable_53 [ variable_40 ] ; if ( variable_44 [ variable_40 ] > variable_11 -> variable_55 ) variable_11 -> variable_55 = variable_44 [ variable_40 ] ; variable_11 -> variable_56 [ variable_40 ] = func_21 ( & variable_11 -> variable_21 , 8 ) ; if ( variable_11 -> variable_56 [ variable_40 ] >= 4 ) func_22 ( variable_11 -> variable_1 , variable_57 , " quant_index is invalid \n " ) ; if ( ! variable_53 [ variable_40 ] || ! variable_44 [ variable_40 ] ) func_23 ( variable_11 -> variable_1 , variable_57 , " Invalid sampling factor in component %d %d : %d \n " , variable_40 , variable_53 [ variable_40 ] , variable_44 [ variable_40 ] ) ; func_24 ( variable_11 -> variable_1 , variable_58 , " component %d %d : %d id : %d quant : %d \n " , variable_40 , variable_53 [ variable_40 ] , variable_44 [ variable_40 ] , variable_11 -> variable_52 [ variable_40 ] , variable_11 -> variable_56 [ variable_40 ] ) ; if ( variable_11 -> variable_28 && ( variable_11 -> variable_54 > 1 || variable_11 -> variable_55 > 1 ) ) func_25 ( variable_11 -> variable_1 , " Subsampling in JPEG - LS " ) ; if ( variable_41 != variable_11 -> variable_41 || variable_42 != variable_11 -> variable_42 || variable_43 != variable_11 -> variable_43 || memcmp ( variable_11 -> variable_53 , variable_53 , sizeof ( variable_53 ) ) || memcmp ( variable_11 -> variable_44 , variable_44 , sizeof ( variable_44 ) ) ) variable_11 -> variable_41 = variable_41 ; variable_11 -> variable_42 = variable_42 ; variable_11 -> variable_43 = variable_43 ; memcpy ( variable_11 -> variable_53 , variable_53 , sizeof ( variable_53 ) ) ; memcpy ( variable_11 -> variable_44 , variable_44 , sizeof ( variable_44 ) ) ; variable_11 -> variable_32 = 0 ; variable_11 -> variable_31 = 0 ; if ( variable_11 -> variable_59 && variable_11 -> variable_60 != 0 && variable_11 -> variable_42 < ( ( variable_11 -> variable_60 * 3 ) / 4 ) ) variable_11 -> variable_32 = 1 ; variable_11 -> variable_33 = variable_11 -> variable_34 ; variable_11 -> variable_35 -> variable_61 = 1 ; variable_11 -> variable_35 -> variable_62 = ! variable_11 -> variable_34 ; variable_20 = func_26 ( variable_11 -> variable_1 , variable_41 , variable_42 ) ; if ( variable_20 < 0 ) return variable_20 ; if ( variable_11 -> variable_31 && variable_11 -> variable_32 && ( variable_11 -> variable_33 == ! variable_11 -> variable_34 ) ) if ( variable_11 -> variable_29 ) func_27 ( variable_11 -> variable_1 , " progressively coded interlaced picture " ) ; if ( variable_11 -> variable_55 == 1 && variable_11 -> variable_54 == 1 && variable_11 -> variable_27 == 1 && ( variable_39 == 3 || variable_39 == 4 ) ) if ( ! variable_11 -> variable_27 ) variable_63 = ( ( unsigned ) variable_11 -> variable_53 [ 0 ] << 28 ) | ( variable_11 -> variable_44 [ 0 ] << 24 ) | ( variable_11 -> variable_53 [ 1 ] << 20 ) | ( variable_11 -> variable_44 [ 1 ] << 16 ) | ( variable_11 -> variable_53 [ 2 ] << 12 ) | ( variable_11 -> variable_44 [ 2 ] << 8 ) | ( variable_11 -> variable_53 [ 3 ] << 4 ) | variable_11 -> variable_44 [ 3 ] ; func_28 ( variable_11 -> variable_1 , variable_58 , " pix fmt id % x \n " , variable_63 ) ; if ( ! ( variable_63 & 0 variable_64 ) ) variable_63 -= ( variable_63 & 0 variable_65 ) >> 1 ; if ( ! ( variable_63 & 0 variable_66 ) ) variable_63 -= ( variable_63 & 0 variable_67 ) >> 1 ; for ( variable_40 = 0 ; variable_40 < 8 ; variable_40 ++ ) int variable_68 = 6 + ( variable_40 & 1 ) - ( variable_40 & 6 ) ; int variable_69 = ( variable_63 >> ( 4 * variable_40 ) ) & 0 variable_70 ; int variable_71 = ( variable_63 >> ( 4 * variable_68 ) ) & 0 variable_70 ; if ( variable_69 == 1 && variable_71 != 2 && ( variable_40 < 2 || variable_40 > 5 ) ) variable_71 = ( variable_63 >> ( 8 + 4 * ( variable_40 & 1 ) ) ) & 0 variable_70 ; if ( variable_69 == 1 && variable_71 != 2 && ( variable_40 < 2 || variable_40 > 5 ) ) variable_71 = ( variable_63 >> ( 16 + 4 * ( variable_40 & 1 ) ) ) & 0 variable_70 ; if ( variable_69 == 1 && variable_71 == 2 ) if ( variable_40 & 1 ) variable_11 -> variable_46 |= 1 << ( variable_68 / 2 ) ; variable_11 -> variable_47 |= 1 << ( variable_68 / 2 ) ; switch ( variable_63 ) if ( variable_11 -> variable_72 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_43 <= 9 ? variable_74 : variable_75 ; if ( variable_11 -> variable_52 [ 0 ] == '  Q ' && variable_11 -> variable_52 [ 1 ] == '  F ' && variable_11 -> variable_52 [ 2 ] == '  A ' ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_43 <= 8 ? variable_76 : variable_77 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_79 : variable_80 ; variable_11 -> variable_1 -> variable_73 = variable_81 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; func_29 ( variable_11 -> variable_39 == 3 ) ; if ( variable_11 -> variable_72 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_43 <= 9 ? variable_85 : variable_86 ; if ( variable_11 -> variable_18 == 0 && variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_87 ; variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_43 <= 8 ? variable_88 : variable_89 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; func_30 ( variable_11 -> variable_39 == 4 ) ; if ( variable_11 -> variable_18 == 0 && variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_87 ; variable_11 -> variable_47 |= 6 ; variable_11 -> variable_46 |= 6 ; if ( variable_11 -> variable_18 == 2 && variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_88 ; variable_11 -> variable_47 |= 6 ; variable_11 -> variable_46 |= 6 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_90 ; variable_11 -> variable_1 -> variable_73 = variable_91 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; func_31 ( variable_11 -> variable_39 == 4 ) ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_79 : variable_80 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_79 : variable_80 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_92 ; variable_11 -> variable_1 -> variable_73 = variable_93 ; if ( variable_11 -> variable_52 [ 0 ] == '  Q ' && variable_11 -> variable_52 [ 1 ] == '  F ' && variable_11 -> variable_52 [ 2 ] == '  A ' ) if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_76 ; variable_11 -> variable_47 |= 3 ; if ( variable_63 == 0 variable_94 ) variable_11 -> variable_47 |= 6 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_95 : variable_96 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_52 [ 0 ] == '  Q ' && variable_11 -> variable_52 [ 1 ] == '  F ' && variable_11 -> variable_52 [ 2 ] == '  A ' ) if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_76 ; variable_11 -> variable_46 |= 3 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_97 : variable_98 ; variable_11 -> variable_1 -> variable_73 = variable_99 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_97 : variable_98 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_100 : variable_101 ; variable_11 -> variable_1 -> variable_73 = variable_102 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; if ( variable_63 == 0 variable_103 ) if ( variable_11 -> variable_43 > 8 ) variable_11 -> variable_46 = 6 ; if ( variable_63 == 0 variable_104 ) if ( variable_11 -> variable_43 > 8 ) if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_11 -> variable_78 ? variable_105 : variable_106 ; variable_11 -> variable_1 -> variable_82 = variable_11 -> variable_78 ? variable_83 : variable_84 ; func_32 ( variable_11 -> variable_1 , variable_57 , " Unhandled pixel format 0 x % x bits : %d \n " , variable_63 , variable_11 -> variable_43 ) ; variable_11 -> variable_46 = variable_11 -> variable_47 = 0 ; if ( ( variable_11 -> variable_46 || variable_11 -> variable_47 ) && variable_11 -> variable_1 -> variable_51 ) func_33 ( variable_11 -> variable_1 , variable_57 , " lowres not supported for weird subsampling \n " ) ; if ( variable_11 -> variable_28 ) variable_11 -> variable_46 = variable_11 -> variable_47 = 0 ; if ( variable_11 -> variable_39 > 1 ) variable_11 -> variable_1 -> variable_73 = variable_107 ; if ( variable_11 -> variable_108 && variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_109 ; if ( variable_11 -> variable_43 <= 8 ) variable_11 -> variable_1 -> variable_73 = variable_92 ; variable_11 -> variable_1 -> variable_73 = variable_93 ; variable_11 -> variable_110 = func_34 ( variable_11 -> variable_1 -> variable_73 ) ; if ( ! variable_11 -> variable_110 ) func_35 ( variable_11 -> variable_1 , variable_57 , " Could not get a pixel format descriptor . \n " ) ; func_36 ( variable_11 -> variable_35 ) ; if ( func_37 ( variable_11 -> variable_1 , variable_11 -> variable_35 , variable_111 ) < 0 ) variable_11 -> variable_35 -> variable_112 = variable_113 ; variable_11 -> variable_35 -> variable_114 = 1 ; variable_11 -> variable_31 = 1 ; variable_11 -> variable_115 [ variable_40 ] = variable_11 -> variable_35 -> variable_115 [ variable_40 ] << variable_11 -> variable_32 ; func_38 ( variable_11 -> variable_1 , " %d %d %d %d %d %d \n " , variable_11 -> variable_41 , variable_11 -> variable_42 , variable_11 -> variable_115 [ 0 ] , variable_11 -> variable_115 [ 1 ] , variable_11 -> variable_32 , variable_11 -> variable_1 -> variable_42 ) ; func_39 ( variable_11 -> variable_1 , variable_58 , " decode_sof0 : error , len ( %d ) mismatch \n " , variable_38 ) ; if ( variable_11 -> variable_72 && ! variable_11 -> variable_27 && ! variable_11 -> variable_28 ) func_40 ( variable_11 -> variable_1 , variable_57 , " Unsupported coding and pixel format combination \n " ) ; if ( variable_11 -> variable_29 ) int variable_116 = ( variable_41 + variable_11 -> variable_54 * 8 - 1 ) / ( variable_11 -> variable_54 * 8 ) ; int variable_117 = ( variable_42 + variable_11 -> variable_55 * 8 - 1 ) / ( variable_11 -> variable_55 * 8 ) ; for ( variable_40 = 0 ; variable_40 < variable_11 -> variable_39 ; variable_40 ++ ) int variable_9 = variable_116 * variable_117 * variable_11 -> variable_53 [ variable_40 ] * variable_11 -> variable_44 [ variable_40 ] ; func_41 ( & variable_11 -> variable_118 [ variable_40 ] ) ; func_42 ( & variable_11 -> variable_119 [ variable_40 ] ) ; variable_11 -> variable_118 [ variable_40 ] = func_43 ( variable_9 , sizeof ( * * variable_11 -> variable_118 ) ) ; variable_11 -> variable_119 [ variable_40 ] = func_44 ( variable_9 , sizeof ( * * variable_11 -> variable_119 ) ) ; if ( ! variable_11 -> variable_118 [ variable_40 ] || ! variable_11 -> variable_119 [ variable_40 ] ) variable_11 -> variable_120 [ variable_40 ] = variable_116 * variable_11 -> variable_53 [ variable_40 ] ; memset ( variable_11 -> variable_121 , 0 , sizeof ( variable_11 -> variable_121 ) ) ;
