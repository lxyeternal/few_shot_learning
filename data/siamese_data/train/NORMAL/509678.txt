 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 250 ] = L " PATH = " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( 250 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 250 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;
 void func_0 ( void ( * variable_0 ) ( geniohyoglossal_hypoptyalism * ) ) int variable_1 = 0 ; FILE * variable_2 [ 1020 ] ; char variable_3 [ 80 ] ; int variable_4 ; geniohyoglossal_hypoptyalism variable_5 [ 10 ] = { 0 } ; geniohyoglossal_hypoptyalism variable_6 = 0 ; if ( variable_6 != 0 ) variable_4 = 5 ; variable_7 = & variable_4 ; variable_8 = & variable_7 ; variable_9 = & variable_8 ; variable_10 = & variable_9 ; variable_11 = & variable_10 ; variable_12 = & variable_11 ; variable_13 = & variable_12 ; variable_14 = & variable_13 ; variable_15 = & variable_14 ; variable_16 = & variable_15 ; variable_17 = & variable_16 ; variable_18 = & variable_17 ; variable_19 = & variable_18 ; variable_20 = & variable_19 ; variable_21 = & variable_20 ; variable_22 = & variable_21 ; variable_23 = & variable_22 ; variable_24 = & variable_23 ; variable_25 = & variable_24 ; variable_26 = & variable_25 ; variable_27 = & variable_26 ; variable_28 = & variable_27 ; variable_29 = & variable_28 ; variable_30 = & variable_29 ; variable_31 = & variable_30 ; variable_32 = & variable_31 ; variable_33 = & variable_32 ; variable_34 = & variable_33 ; variable_35 = & variable_34 ; variable_36 = & variable_35 ; variable_37 = & variable_36 ; variable_38 = & variable_37 ; variable_39 = & variable_38 ; variable_40 = & variable_39 ; variable_41 = & variable_40 ; variable_42 = & variable_41 ; variable_43 = & variable_42 ; variable_44 = & variable_43 ; variable_45 = & variable_44 ; variable_46 = & variable_45 ; variable_47 = & variable_46 ; variable_48 = & variable_47 ; variable_49 = & variable_48 ; variable_50 = & variable_49 ; variable_51 = & variable_50 ; variable_52 = & variable_51 ; variable_53 = & variable_52 ; variable_54 = & variable_53 ; variable_55 = & variable_54 ; variable_56 = & variable_55 ; variable_5 [ * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * variable_56 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ] = variable_6 ; variable_57 = variable_5 [ * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * ( * variable_56 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ] ; variable_58 = ( ( char * ) variable_57 ) ; variable_59 = fopen ( variable_58 , " r " ) ; if ( variable_59 != 0 ) while ( fscanf ( variable_59 , " % 79s " , variable_3 ) == 1 && variable_1 < 1020 ) variable_60 = fopen ( variable_3 , " w " ) ; if ( variable_60 == 0 && variable_61 == 24 ) fputs ( " woohoo ! " , variable_60 ) ; fflush ( variable_60 ) ; variable_2 [ variable_1 ] = variable_60 ; variable_1 ++ ;
