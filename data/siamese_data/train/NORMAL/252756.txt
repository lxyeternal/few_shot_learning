 static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) realloc ( variable_1 , 100 * sizeof ( variable_0 ) ) ; variable_1 [ 0 ] . variable_3 = 0 ; variable_1 [ 0 ] . variable_4 = 0 ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;
 static int func_0 ( variable_0 * variable_1 , const variable_2 int variable_3 [ ] , int variable_4 , int variable_2 * variable_5 [ ] , int variable_6 [ ] ) const AVPixFmtDescriptor * variable_7 = func_1 ( variable_1 -> variable_8 ) ; int variable_9 , variable_10 , variable_11 ; for ( variable_9 = 0 ; variable_9 < 4 ; variable_9 ++ ) int variable_12 = ( variable_9 == 0 || variable_9 == 3 ) ? variable_1 -> variable_13 : func_2 ( variable_1 -> variable_13 , variable_1 -> variable_14 ) ; int variable_15 = ( variable_9 == 0 || variable_9 == 3 ) ? variable_4 : func_3 ( variable_4 , variable_1 -> variable_16 ) ; int variable_17 = ( variable_9 == 0 || variable_9 == 3 ) ? variable_18 : func_4 ( variable_18 , variable_1 -> variable_16 ) ; const uint8_t * variable_19 = variable_20 [ variable_9 ] ; variable_2 * variable_21 = variable_5 [ variable_9 ] + variable_6 [ variable_9 ] * variable_15 ; if ( ! variable_5 [ variable_9 ] ) if ( variable_9 == 1 && ! variable_5 [ 2 ] ) if ( ! variable_20 [ variable_9 ] || ( variable_9 == 1 && ! variable_20 [ 2 ] ) ) if ( func_5 ( variable_1 -> variable_8 ) || func_6 ( variable_1 -> variable_22 ) || ( func_7 ( variable_1 -> variable_8 ) != func_8 ( variable_1 -> variable_22 ) ) ) if ( func_9 ( variable_1 -> variable_8 ) && func_10 ( variable_1 -> variable_22 ) && func_11 ( variable_1 -> variable_8 ) != func_12 ( variable_1 -> variable_22 ) ) if ( variable_6 [ variable_9 ] == variable_3 [ variable_9 ] && variable_3 [ variable_9 ] > 0 && variable_3 [ variable_9 ] == variable_12 ) if ( func_13 ( variable_1 -> variable_8 ) && func_14 ( variable_1 -> variable_22 ) ) variable_12 *= 2 ; if ( ! variable_7 -> variable_23 [ 0 ] . variable_24 ) variable_12 >> = 3 ; for ( variable_10 = 0 ; variable_10 < variable_17 ; variable_10 ++ ) memcpy ( variable_21 , variable_19 , variable_12 ) ; variable_19 += variable_3 [ variable_9 ] ; variable_21 += variable_6 [ variable_9 ] ;
