 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( int * variable_21 ) int variable_20 = * variable_21 ; variable_22 = ( int * ) malloc ( variable_20 * sizeof ( int ) ) ; for ( variable_23 = 0 ; variable_23 < ( size_t ) variable_20 ; variable_23 ++ ) variable_22 [ variable_23 ] = 0 ; func_11 ( variable_22 [ 0 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;
 void func_0 ( ) bool variable_0 ; variable_1 = ( ( PMSignalData * ) ( func_1 ( " PMSignalState " , func_2 ( ) , & variable_0 ) ) ) ; Size func_3 ( ) Size variable_2 ; variable_2 = ( ( size_t ) ( & ( ( PMSignalData * ) 0 ) -> variable_3 ) ) ; variable_2 = func_4 ( variable_2 , func_5 ( ( func_6 ( ) ) , sizeof ( variable_4 ) ) ) ; return variable_2 ; if ( ! variable_0 ) void * variable_5 = ( void * ) variable_1 ; int variable_6 = 0 ; Size variable_7 = func_7 ( ) ; Size func_8 ( ) Size variable_2 ; variable_2 = ( ( size_t ) ( & ( ( PMSignalData * ) 0 ) -> variable_3 ) ) ; variable_2 = func_9 ( variable_2 , func_10 ( ( func_11 ( ) ) , sizeof ( variable_4 ) ) ) ; return variable_2 ; if ( ( ( ( variable_8 ) variable_5 ) & sizeof ( long ) - 1 ) == 0 && ( variable_7 & sizeof ( long ) - 1 ) == 0 && variable_6 == 0 && variable_7 <= 1024 && 1024 != 0 ) memset ( variable_5 , variable_6 , variable_7 ) ; while ( 0 )
