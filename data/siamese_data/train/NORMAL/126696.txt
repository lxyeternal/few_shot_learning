 static void func_0 ( ) int variable_0 , variable_1 ; char * variable_2 ; char variable_3 [ 100 ] = " " ; variable_2 = variable_3 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) FILE * variable_4 ; variable_4 = fopen ( " passwords . txt " , " r " ) ; if ( variable_4 != NULL ) variable_2 [ 0 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) char variable_5 [ 100 ] = variable_6 ; HCRYPTPROV variable_7 = 0 ; HCRYPTHASH variable_8 = 0 ; HCRYPTKEY variable_9 = 0 ; BYTE variable_10 [ ( 100 - 1 ) * sizeof ( char ) ] ; DWORD variable_11 ; variable_11 = func_1 ( variable_10 , sizeof ( variable_10 ) , variable_2 ) ; size_t func_2 ( unsigned char * variable_12 , size_t variable_13 , const char * variable_14 ) size_t variable_15 = 0 ; while ( variable_15 < variable_13 && isxdigit ( variable_14 [ 2 * variable_15 ] ) && isxdigit ( variable_14 [ 2 * variable_15 + 1 ] ) ) int variable_16 ; variable_12 [ variable_15 ] = ( unsigned char ) variable_16 ; return variable_15 ; if ( ! func_3 ( & variable_7 , NULL , variable_17 , variable_18 , 0 ) ) if ( ! func_4 ( variable_7 , variable_19 , 0 , 0 , & variable_8 ) ) if ( ! func_5 ( variable_8 , ( BYTE * ) variable_5 , strlen ( variable_5 ) , 0 ) ) if ( ! func_6 ( variable_7 , variable_20 , variable_8 , 0 , & variable_9 ) ) if ( ! func_7 ( variable_9 , 0 , 1 , 0 , variable_10 , & variable_11 ) ) memcpy ( variable_2 , variable_10 , variable_11 ) ; variable_2 [ variable_11 / sizeof ( char ) ] = ' \0 ' ; while ( 0 ) if ( func_8 ( variable_21 , variable_22 , variable_2 , variable_23 , variable_24 , & variable_25 ) != 0 )
