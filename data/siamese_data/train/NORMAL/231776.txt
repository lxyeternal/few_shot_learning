 static void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = strtoul ( variable_1 , NULL , 0 ) ; variable_4 * variable_5 = new variable_6 variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( size_t variable_0 ) wchar_t * variable_7 ; if ( variable_0 > wcslen ( variable_8 ) && variable_0 < 100 ) variable_7 = ( wchar_t * ) malloc ( variable_0 * sizeof ( wchar_t ) ) ; wcscpy ( variable_7 , variable_8 ) ; func_3 ( variable_7 ) ; void func_4 ( const wchar_t * variable_9 ) if ( variable_9 != NULL ) wprintf ( L " % ls \n " , variable_9 ) free ( variable_7 ) ;
