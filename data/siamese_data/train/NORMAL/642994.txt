 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 . func_3 ( ( char * ) variable_0 ) ;
 static void * func_0 ( void * variable_0 ) char variable_1 [ 4096 ] ; char variable_2 [ 4096 ] ; struct variable_3 * variable_4 = variable_0 ; struct variable_5 * variable_6 = NULL ; struct variable_5 * variable_7 = variable_6 ; char * variable_8 , * variable_9 ; int variable_10 ; if ( func_1 ( & variable_11 , + 1 ) >= variable_12 ) if ( ! fgets ( variable_1 , sizeof ( variable_1 ) , variable_4 -> variable_13 ) ) variable_9 = func_2 ( variable_1 ) ; variable_8 = func_3 ( variable_9 ) ; if ( * variable_8 ) * variable_8 ++ = ' \0 ' ; variable_8 = func_4 ( variable_8 ) ; if ( * variable_8 ) variable_10 = variable_14 ; while ( fgets ( variable_2 , sizeof ( variable_2 ) , variable_4 -> variable_13 ) ) char * variable_15 , * variable_16 ; func_5 ( variable_2 ) ; if ( func_6 ( variable_2 ) ) variable_16 = variable_2 ; variable_15 = func_7 ( & variable_16 , " : " ) ; if ( ! variable_16 ) variable_16 = func_8 ( variable_16 ) ; if ( func_9 ( variable_16 ) || func_10 ( variable_15 ) ) if ( ! variable_10 -- ) if ( ! variable_6 ) variable_6 = func_11 ( variable_15 , variable_16 , variable_17 ) ; variable_7 = variable_6 ; variable_7 -> variable_18 = func_12 ( variable_15 , variable_16 , variable_17 ) ; variable_7 = variable_7 -> variable_18 ; if ( ! variable_7 )
