 static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t variable_3 [ 100 ] = L " " variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , ( 100 - variable_7 - 1 ) * sizeof ( wchar_t ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_7 ( variable_2 ) ; void func_8 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; HCRYPTPROV variable_21 = 0 ; HCRYPTHASH variable_22 = 0 ; HCRYPTKEY variable_23 = 0 ; char variable_24 [ 100 ] = variable_25 ; BYTE variable_26 [ ( 100 - 1 ) * sizeof ( wchar_t ) ] ; DWORD variable_27 ; variable_27 = func_9 ( variable_26 , sizeof ( variable_26 ) , variable_0 ) ; size_t func_10 ( unsigned char * variable_28 , size_t variable_29 , const wchar_t * variable_30 ) size_t variable_31 = 0 ; while ( variable_31 < variable_29 && iswxdigit ( variable_30 [ 2 * variable_31 ] ) && iswxdigit ( variable_30 [ 2 * variable_31 + 1 ] ) ) int variable_32 ; variable_28 [ variable_31 ] = ( unsigned char ) variable_32 ; return variable_31 ; if ( ! func_11 ( & variable_21 , NULL , variable_33 , variable_34 , 0 ) ) if ( ! func_12 ( variable_21 , variable_35 , 0 , 0 , & variable_22 ) ) if ( ! func_13 ( variable_22 , ( BYTE * ) variable_24 , strlen ( variable_24 ) , 0 ) ) if ( ! func_14 ( variable_21 , variable_36 , variable_22 , 0 , & variable_23 ) ) if ( ! func_15 ( variable_23 , 0 , 1 , 0 , variable_26 , & variable_27 ) ) memcpy ( variable_0 , variable_26 , variable_27 ) ; while ( 0 ) if ( func_16 ( variable_37 , variable_38 , variable_0 , variable_39 , variable_40 , & variable_41 ) != 0 )
 static void func_0 ( struct variable_0 * variable_1 ) struct variable_2 * variable_2 = ( struct ra_msg * ) func_1 ( variable_1 ) ; struct variable_3 * variable_4 = NULL ; struct variable_5 * variable_6 ; int variable_7 ; struct ndisc_options variable_8 ; int variable_9 ; variable_10 * variable_11 = ( __u8 * ) ( variable_2 + 1 ) ; variable_9 = ( variable_1 -> variable_12 - variable_1 -> variable_13 ) - sizeof ( struct variable_2 ) ; if ( ! ( func_2 ( & func_3 ( variable_1 ) -> variable_14 ) & variable_15 ) ) if ( variable_9 < 0 ) if ( variable_1 -> variable_16 == variable_17 ) variable_6 = func_4 ( variable_1 -> variable_18 ) ; if ( variable_6 == NULL ) if ( ! func_5 ( variable_11 , variable_9 , & variable_8 ) ) if ( ! func_6 ( variable_6 ) ) if ( variable_1 -> variable_16 == variable_19 ) if ( variable_6 -> variable_20 & variable_21 ) variable_6 -> variable_20 |= variable_22 ; variable_6 -> variable_20 = ( variable_6 -> variable_20 & ~ ( variable_23 | variable_24 ) ) | ( variable_2 -> variable_25 . variable_26 ? variable_23 : 0 ) | ( variable_2 -> variable_25 . variable_27 ? variable_24 : 0 ) ; if ( ! variable_6 -> variable_28 . variable_29 ) if ( func_7 ( func_8 ( variable_6 -> variable_18 ) , & func_9 ( variable_1 ) -> variable_14 , NULL , 0 ) ) variable_7 = func_10 ( variable_2 -> variable_25 . variable_30 ) ; variable_31 = variable_2 -> variable_25 . variable_32 ; if ( variable_31 == variable_33 || ! variable_6 -> variable_28 . variable_34 ) variable_31 = variable_35 ; variable_36 = func_11 ( & func_12 ( variable_1 ) -> variable_14 , variable_1 -> variable_18 ) ; if ( variable_36 ) variable_4 = func_13 ( & variable_36 -> variable_37 , & func_14 ( variable_1 ) -> variable_14 ) ; if ( ! variable_4 ) if ( variable_36 && variable_7 == 0 ) variable_36 = NULL ; if ( variable_36 == NULL && variable_7 ) variable_36 = func_15 ( & func_16 ( variable_1 ) -> variable_14 , variable_1 -> variable_18 , variable_31 ) ; if ( variable_36 == NULL ) variable_4 = func_17 ( & variable_36 -> variable_37 , & func_18 ( variable_1 ) -> variable_14 ) ; if ( variable_4 == NULL ) variable_4 -> variable_38 |= variable_39 ; if ( variable_2 -> variable_25 . variable_40 ) if ( variable_6 -> variable_28 . variable_41 < variable_2 -> variable_25 . variable_40 ) variable_6 -> variable_28 . variable_41 = variable_2 -> variable_25 . variable_40 ; if ( variable_6 -> variable_42 ) unsigned long variable_43 = func_19 ( variable_2 -> variable_44 ) ; if ( variable_43 && variable_43 / 1000 < variable_45 / variable_46 ) variable_43 = ( variable_43 * variable_46 ) / 1000 ; if ( variable_43 < variable_46 / 10 ) variable_43 = variable_46 / 10 ; variable_6 -> variable_42 -> variable_47 = variable_43 ; variable_6 -> variable_48 = variable_49 ; variable_43 = func_20 ( variable_2 -> variable_50 ) ; if ( variable_43 && variable_43 / 1000 < variable_45 / ( 3 * variable_46 ) ) variable_43 = ( variable_43 * variable_46 ) / 1000 ; if ( variable_43 < variable_46 / 10 ) variable_43 = variable_46 / 10 ; if ( variable_43 != variable_6 -> variable_42 -> variable_51 ) variable_6 -> variable_42 -> variable_51 = variable_43 ; variable_6 -> variable_42 -> variable_52 = 3 * variable_43 ; variable_6 -> variable_42 -> variable_50 = func_21 ( variable_43 ) ; variable_6 -> variable_48 = variable_49 ; if ( ! variable_4 ) variable_4 = func_22 ( & variable_53 , & func_23 ( variable_1 ) -> variable_14 , variable_1 -> variable_18 , 1 ) ; if ( variable_4 ) if ( variable_8 . variable_54 ) variable_55 = func_24 ( variable_8 . variable_54 , variable_1 -> variable_18 ) ; if ( ! variable_55 ) if ( ! func_25 ( variable_6 ) ) if ( variable_1 -> variable_16 == variable_19 ) if ( variable_8 . variable_56 ) __be32 variable_57 ; memcpy ( & variable_57 , ( ( u8 * ) ( variable_8 . variable_56 + 1 ) ) + 2 , sizeof ( variable_58 ) ) ; variable_58 = func_26 ( variable_57 ) ; if ( variable_58 < variable_59 || variable_58 > variable_1 -> variable_18 -> variable_58 ) func_27 ( 2 , variable_60 , " RA : invalid mtu : %d \n " , variable_58 ) ; if ( variable_6 -> variable_28 . variable_61 != variable_58 ) variable_6 -> variable_28 . variable_61 = variable_58 ; func_28 ( & variable_36 -> variable_37 , variable_62 , variable_58 ) ; func_29 ( variable_1 -> variable_18 , variable_58 ) ;
