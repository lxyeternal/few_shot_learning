 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( 1 ) size_t variable_2 = strlen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_2 = strlen ( variable_0 ) ; if ( variable_2 > 0 && variable_0 [ variable_2 - 1 ] == ' \n ' ) variable_0 [ variable_2 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = ' \0 ' ;
 Size func_0 ( ) int variable_0 = 7 ; char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = ( ( void * ) variable_1 ) ; variable_4 = func_3 ( variable_3 ) ; void * func_4 ( void * variable_5 ) return variable_5 ; func_5 ( variable_0 , variable_4 ) ; void func_6 ( int variable_6 , void * variable_7 ) char * variable_8 ; char variable_9 [ 80 ] ; FILE * variable_10 ; FILE * * variable_11 ; FILE * variable_12 ; int variable_13 ; char * * variable_14 ; int variable_15 = 10 ; int variable_16 ; variable_6 -- ; if ( variable_6 > 0 ) variable_17 = ( ( char * ) ( ( char * ) variable_7 ) ) ; variable_14 = malloc ( sizeof ( char * ) * variable_15 ) ; if ( variable_14 != 0 ) for ( variable_13 = 0 ; variable_13 < variable_15 ; ++ variable_13 ) variable_14 [ variable_13 ] = 0 ; variable_12 = fopen ( variable_17 , " rb " ) ; if ( variable_12 != 0 ) variable_11 = malloc ( variable_15 * sizeof ( FILE * ) ) ; for ( variable_18 = 0 ; variable_18 < variable_15 ; ++ variable_18 ) if ( fscanf ( variable_12 , " % 79s " , variable_9 ) == 1 ) variable_11 [ variable_18 ] = fopen ( variable_9 , " rb " ) ; variable_18 = 0 ; while ( variable_18 < variable_15 ) variable_10 = variable_11 [ variable_18 ] ; if ( variable_10 == 0 ) fseek ( variable_10 , 0 , 2 ) ; variable_16 = ftell ( variable_10 ) ; rewind ( variable_10 ) ; variable_8 = malloc ( ( variable_16 + 1 ) * sizeof ( char ) ) ; if ( variable_8 == 0 && variable_19 == 12 ) if ( variable_8 == 0 ) fclose ( variable_10 ) ; memset ( variable_8 , 0 , ( variable_16 + 1 ) * sizeof ( char ) ) ; fread ( variable_8 , 1 , variable_16 , variable_10 ) ; variable_8 = func_7 ( variable_8 , variable_16 ) ; char * func_8 ( char * variable_20 , int variable_21 ) for ( variable_22 = 0 ; variable_22 < variable_21 ; variable_22 ++ ) if ( ! func_9 ( variable_20 [ variable_22 ] ) ) int func_10 ( int variable_23 ) if ( ( variable_23 >= 97 && variable_23 <= 122 ) || ( variable_23 >= 65 && variable_23 <= 90 ) || ( variable_23 >= 48 && variable_23 <= 57 ) ) return variable_20 ; variable_14 [ variable_18 ] = variable_8 ; fclose ( variable_10 ) ; variable_18 ++ ; func_11 ( variable_14 , variable_15 ) ; void func_12 ( char * * variable_24 , int variable_25 ) for ( ; variable_26 < variable_25 ; ++ variable_26 ) if ( variable_24 [ variable_26 ] != 0 ) free ( variable_24 [ variable_26 ] ) ; free ( variable_14 ) ;
