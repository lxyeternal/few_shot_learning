 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_2 = wcslen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = L ' \0 ' variable_2 = wcslen ( variable_0 ) ; if ( variable_2 > 0 ) variable_0 [ variable_2 - 1 ] = L ' \0 ' return variable_0 ; HCRYPTHASH variable_4 ; if ( ! func_3 ( variable_4 , ( BYTE * ) variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) , 0 ) )
 static enum AVCodecID func_0 ( const IdStrMap * variable_0 , const char * variable_1 ) char * variable_2 [ 49 ] = { 0 } ; char * variable_3 ; if ( func_1 ( & variable_4 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_3 != 0 ) variable_2 [ 46 ] = variable_3 ; func_3 ( 1 , variable_2 ) ; void func_4 ( int variable_5 , . . . ) char variable_6 [ 1000 ] ; char variable_7 [ 150 ] ; char * * variable_8 = 0 ; if ( variable_5 > 0 ) variable_8 = ( va_arg ( variable_9 , char * * ) ) variable_10 = ( ( char * ) variable_8 [ 46 ] ) ; variable_11 = getenv ( " DBPGHOST " ) ; variable_12 = getenv ( " DBPGUSER " ) ; variable_13 = getenv ( " DBPGPASSWORD " ) ; variable_14 = getenv ( " DBPGPORT " ) ; variable_15 = getenv ( " SS_DBPGDATABASE " ) ; if ( variable_11 != 0 && variable_14 != 0 && variable_12 != 0 && variable_13 != 0 && variable_15 != 0 ) snprintf ( variable_7 , 150 , " dbname = %s host = %s user = %s password = %s port = %s " , variable_15 , variable_11 , variable_12 , variable_13 , variable_14 ) ; variable_16 = func_5 ( variable_7 ) ; snprintf ( variable_6 , 1000 , " SELECT * FROM customers WHERE \ " variable_17 \ " = ' %s ' ; " , variable_10 ) ; variable_18 = func_6 ( variable_16 , variable_6 ) ; if ( func_7 ( variable_18 ) != 2 ) func_8 ( variable_18 ) ; variable_19 = func_9 ( variable_18 ) ; for ( variable_20 = 0 ; variable_20 < variable_19 ; variable_20 ++ ) func_10 ( " % - 15s " , func_11 ( variable_18 , variable_20 ) ) ; void func_12 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; vfprintf ( variable_23 , variable_21 , variable_22 ) ; for ( variable_20 = 0 ; variable_20 < func_13 ( variable_18 ) ; variable_20 ++ ) for ( variable_24 = 0 ; variable_24 < variable_19 ; variable_24 ++ ) func_14 ( " % - 15s " , func_15 ( variable_18 , variable_20 , variable_24 ) ) ; void func_16 ( char * variable_21 , . . . ) va_start ( variable_22 , variable_21 ) ; vfprintf ( variable_23 , variable_21 , variable_22 ) ; func_17 ( variable_18 ) ;
