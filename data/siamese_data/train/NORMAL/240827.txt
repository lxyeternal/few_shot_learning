 static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( void * variable_18 ) wchar_t * * variable_19 = ( wchar_t * * ) variable_18 ; wchar_t * variable_0 = ( * variable_19 ) ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )
 int main ( int variable_0 , char * variable_1 [ ] ) if ( ! ( variable_2 = ( short * ) calloc ( 3 , sizeof ( short ) ) ) ) func_0 ( variable_2 ) ; void func_1 ( short * variable_2 ) variable_2 [ variable_3 ] = ( short ) ( func_2 ( ) % 256 ) ; unsigned int func_3 ( ) unsigned int func_4 ( ) unsigned int variable_4 ; FILE * variable_5 ; variable_5 = fopen ( " / dev / urandom " , " rb " ) ; if ( variable_5 == NULL ) fprintf ( variable_6 , " Error opening file \n " ) ; exit ( - 1 ) ; if ( fread ( & variable_4 , sizeof variable_4 , 1 , variable_5 ) != 1 ) fprintf ( variable_6 , " Error reading file \n " ) ; fclose ( variable_5 ) ; exit ( - 1 ) ; if ( fclose ( variable_5 ) != 0 ) fprintf ( variable_6 , " Error closing file \n " ) ; return variable_4 ; switch ( variable_3 ) if ( variable_2 ) free ( variable_2 ) ; variable_2 = NULL ; printf ( " %d " , variable_2 [ variable_3 ] ) ; if ( variable_2 ) free ( variable_2 ) ;
