 static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; variable_2 * variable_3 = new func_1 ( variable_0 ) ; variable_2 :: func_2 ( wchar_t * variable_4 ) variable_0 = variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( 100 - variable_5 > 1 ) if ( fgetws ( variable_0 + variable_5 , ( int ) ( 100 - variable_5 ) , variable_6 ) == NULL ) func_3 ( " fgetws ( ) failed " ) ; variable_0 [ variable_5 ] = L ' \0 ' variable_5 = wcslen ( variable_0 ) ; if ( variable_5 > 0 ) variable_0 [ variable_5 - 1 ] = L ' \0 ' delete variable_3 variable_2 :: ~ func_4 ( ) wchar_t variable_7 [ ] = L " String to be encrypted " DWORD variable_8 = wcslen ( variable_7 ) * sizeof ( wchar_t ) ; BYTE variable_9 [ 200 ] ; memcpy ( variable_9 , variable_7 , variable_8 ) ; if ( ! func_5 ( variable_10 , ( variable_11 ) NULL , 1 , 0 , variable_9 , & variable_8 , sizeof ( variable_9 ) ) ) func_6 ( variable_9 , variable_8 ) ; void func_7 ( const unsigned char * variable_12 , size_t variable_13 ) for ( variable_14 = 0 ; variable_14 < variable_13 ; ++ variable_14 ) printf ( " % 02x " , variable_12 [ variable_14 ] ) ;
