 static void func_0 ( ) int variable_0 , variable_1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( abs ( ( long ) variable_20 ) <= ( long ) sqrt ( ( variable_21 ) variable_22 ) ) int variable_23 = variable_20 * variable_20 ; func_8 ( variable_23 ) ; void func_9 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;
 static void func_0 ( variable_0 * variable_1 , variable_2 * variable_3 , variable_2 * variable_4 , int variable_5 , int variable_6 ) variable_7 * variable_8 = ( vwr_t * ) variable_1 -> variable_9 ; int variable_10 = 0 ; register int variable_11 register variable_2 * variable_12 , * variable_13 ; guint16 variable_14 , variable_15 ; variable_13 = & ( variable_4 [ 0 ] ) ; variable_12 = & ( variable_4 [ variable_5 - variable_8 -> variable_16 ] ) ; variable_14 = func_1 ( & variable_12 [ variable_8 -> variable_17 ] ) ; variable_15 = variable_14 ; if ( variable_14 > ( variable_5 - ( int ) variable_8 -> variable_16 ) ) variable_14 = ( variable_5 - ( int ) variable_8 -> variable_16 ) ; variable_10 += 2 ; variable_10 += 2 ; variable_10 += 2 ; memset ( & variable_3 [ variable_10 ] , 0 , 2 ) ; variable_10 += 2 ; variable_10 += 4 ; variable_10 += 2 ; variable_10 += 2 ; variable_10 += 4 ; variable_10 += 4 ; variable_10 += 8 ; variable_10 += 8 ; variable_10 += 4 ; memset ( & variable_3 [ variable_10 ] , 0 , 4 ) ; variable_10 += 4 ; variable_10 += 2 ; variable_10 += 2 ; variable_10 += 2 ; memset ( & variable_3 [ variable_10 ] , 0 , 2 ) ; variable_10 += 2 ; variable_10 += 4 ; variable_10 += 4 ; memset ( & variable_3 [ variable_10 ] , 0 , 4 ) ; variable_10 += 4 ; if ( variable_5 < ( ( int ) variable_15 + ( int ) variable_8 -> variable_16 ) ) memcpy ( & variable_3 [ variable_10 ] , variable_13 , variable_14 ) ; if ( variable_14 >= 4 ) memcpy ( & variable_3 [ variable_10 ] , variable_13 , variable_14 - 4 ) ;
