 void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;
 void func_0 ( int variable_0 ) char variable_1 [ 100 ] ; int variable_2 = 1 ; int variable_3 = 0 ; char variable_4 [ 1000 ] = { 0 } ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_5 != 0 ) variable_7 = ( ( char * ) variable_5 ) ; snprintf ( variable_4 , 1000 , " vim - s " " / opt / stonesoup / workspace / testData / " " vim_scripts / hello . vim %s " , variable_7 ) for ( ; variable_3 < strlen ( variable_7 ) ; ++ variable_3 ) if ( variable_7 [ variable_3 ] == ' ; ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' \ \ ' ) variable_2 = 0 ; if ( variable_7 [ variable_3 ] == ' | ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' \ \ ' ) variable_2 = 0 ; if ( variable_7 [ variable_3 ] == ' | ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' | ' ) variable_2 = 0 ; if ( variable_7 [ variable_3 ] == ' & ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' \ \ ' ) variable_2 = 0 ; if ( variable_7 [ variable_3 ] == ' & ' ) if ( variable_3 == 0 || variable_7 [ variable_3 - 1 ] != ' & ' ) variable_2 = 0 ; if ( variable_2 == 1 ) variable_8 = func_3 ( variable_4 , " r " ) ; if ( variable_8 != 0 ) while ( fgets ( variable_1 , 100 , variable_8 ) != 0 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_9 , . . . ) va_start ( variable_10 , variable_9 ) ; vfprintf ( variable_11 , variable_9 , variable_10 ) ;
