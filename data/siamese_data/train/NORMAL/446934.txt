 static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;
 void func_0 ( ) bool variable_0 ; variable_1 = ( ( PMSignalData * ) ( func_1 ( " PMSignalState " , func_2 ( ) , & variable_0 ) ) ) ; Size func_3 ( ) Size variable_2 ; variable_2 = ( ( size_t ) ( & ( ( PMSignalData * ) 0 ) -> variable_3 ) ) ; variable_2 = func_4 ( variable_2 , func_5 ( ( func_6 ( ) ) , sizeof ( variable_4 ) ) ) ; return variable_2 ; if ( ! variable_0 ) void * variable_5 = ( void * ) variable_1 ; int variable_6 = 0 ; Size variable_7 = func_7 ( ) ; Size func_8 ( ) Size variable_2 ; variable_2 = ( ( size_t ) ( & ( ( PMSignalData * ) 0 ) -> variable_3 ) ) ; variable_2 = func_9 ( variable_2 , func_10 ( ( func_11 ( ) ) , sizeof ( variable_4 ) ) ) ; return variable_2 ; if ( ( ( ( variable_8 ) variable_5 ) & sizeof ( long ) - 1 ) == 0 && ( variable_7 & sizeof ( long ) - 1 ) == 0 && variable_6 == 0 && variable_7 <= 1024 && 1024 != 0 ) memset ( variable_5 , variable_6 , variable_7 ) ; while ( 0 )
