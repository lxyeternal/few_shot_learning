 void func_0 ( ) char variable_0 [ 2 ] ; variable_0 [ 0 ] = ( char ) getc ( variable_1 ) ; variable_0 [ 1 ] = ' \0 ' ; variable_2 = ( char ) atoi ( variable_0 ) ; variable_3 [ 0 ] = variable_2 ; variable_3 [ 1 ] = variable_2 ; variable_3 [ 2 ] = variable_2 ; func_1 ( variable_3 ) ; void func_2 ( variable_4 < int , char > variable_3 ) char variable_2 = variable_3 [ 2 ] ; variable_5 [ 1 ] = variable_2 ; variable_5 [ 2 ] = '  z ' ; variable_5 [ 3 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;
 func_0 ( ) :  func_1 ( variable_0 ) const wchar_t * variable_1 [ ] = L " xinput1_4 . dll " L " xinput9_1_0 . dll " L " xinput1_3 . dll " const size_t variable_2 = func_2 ( variable_1 ) ; for ( size_t variable_3 = 0 ; variable_3 < variable_2 ; ++ variable_3 ) variable_4 = func_3 ( variable_1 [ variable_3 ] ) ; if ( variable_4 ) variable_5 = variable_6 < variable_7 > ( func_4 ( variable_4 , " XInputEnable " ) ) ; variable_8 = variable_6 < func_5 ( variable_9 ) * > func_6 ( variable_4 , " XInputGetState " ) if ( variable_5 )
 main ( int variable_0 , char * * variable_1 ) char * variable_2 ; if ( variable_0 > 1 ) variable_2 = variable_1 [ 1 ] ; if ( strlen ( variable_2 ) < variable_3 - 3 ) func_0 ( variable_2 ) ;  func_1 ( char * variable_4 ) char variable_5 [ variable_3 ] ; snprintf ( variable_5 , 1024 , " < %s > " , variable_4 ) ; printf ( " result : %s \n " , variable_5 ) ;
