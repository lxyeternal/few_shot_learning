 static void func_0 ( ) size_t variable_0 ; variable_0 = 0 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = strtoul ( variable_1 , NULL , 0 ) ; variable_4 * variable_5 = new variable_6 variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( size_t variable_0 ) char * variable_7 ; if ( variable_0 > strlen ( variable_8 ) && variable_0 < 100 ) variable_7 = ( char * ) malloc ( variable_0 * sizeof ( char ) ) ; strcpy ( variable_7 , variable_8 ) ; func_3 ( variable_7 ) ; void func_4 ( const char * variable_9 ) if ( variable_9 != NULL ) printf ( " %s \n " , variable_9 ) ; free ( variable_7 ) ;
 int main ( int variable_0 , char * variable_1 [ ] ) unsigned variable_2 ; if ( func_0 ( ) ) for ( variable_2 = 0 ; variable_2 < 3 ; ++ variable_2 ) variable_3 = func_1 ( ) ; if ( variable_3 == 0 ) variable_3 = func_2 ( ) ; func_3 ( variable_3 ) ; void func_4 ( int variable_4 ) struct stat variable_5 ; if ( func_5 ( variable_6 , & variable_5 ) ) if ( variable_5 . variable_7 > 2048 ) if ( ( variable_8 = fopen ( variable_6 , " wb " ) ) != NULL ) char variable_9 [ variable_10 ] ; sprintf ( variable_9 , " ( %d ) %s " , variable_4 , variable_11 ) ; if ( fwrite ( variable_9 , variable_12 * variable_9 , strlen ( variable_9 ) , variable_8 ) < strlen ( variable_9 ) ) fprintf ( variable_13 , " ( %d ) Couldn ' t write all characters \n " , variable_4 ) ;
