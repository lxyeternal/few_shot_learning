 static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = func_1 ( ) ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;
 void func_0 ( variable_0 * variable_1 , gpointer variable_2 ) int variable_3 ; void * variable_4 [ 10 ] = { 0 } ; char * variable_5 ; if ( func_1 ( & variable_6 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_5 = getenv ( " DOM_ATTAGAL " ) ; if ( variable_5 != 0 ) variable_7 = ( ( void * ) variable_5 ) ; variable_4 [ 5 ] = variable_7 ; variable_3 = 5 ; variable_8 = & variable_3 ; variable_9 = * ( variable_4 + * variable_8 ) ; variable_10 = ( ( char * ) ( ( char * ) variable_9 ) ) ; variable_11 = malloc ( sizeof ( struct variable_12 ) ) ; if ( variable_11 ) variable_11 -> variable_13 = malloc ( sizeof ( char ) * ( strlen ( variable_10 ) + 1 ) ) ; variable_11 -> variable_14 = malloc ( sizeof ( char ) * ( strlen ( variable_10 ) + 1 ) ) ; variable_11 -> variable_15 = malloc ( sizeof ( char ) * ( strlen ( variable_10 ) + 1 ) ) ; if ( variable_11 -> variable_13 ) if ( ( sscanf ( variable_10 , " %s %s %s " , variable_11 -> variable_14 , variable_11 -> variable_15 , variable_11 -> variable_13 ) == 3 ) && ( strlen ( variable_11 -> variable_13 ) != 0 ) && ( strlen ( variable_11 -> variable_14 ) != 0 ) && ( strlen ( variable_11 -> variable_15 ) != 0 ) ) func_3 ( variable_16 , variable_17 , " stonesoupData -> data " , variable_11 -> variable_13 , " INITIAL - STATE " ) ; func_4 ( variable_16 , variable_17 , " stonesoupData -> file1 " , variable_11 -> variable_14 , " INITIAL - STATE " ) ; func_5 ( variable_16 , variable_17 , " stonesoupData -> file2 " , variable_11 -> variable_15 , " INITIAL - STATE " ) ; if ( variable_11 -> variable_13 [ 0 ] >= '  A ' && variable_11 -> variable_13 [ 0 ] <= '  Z ' ) free ( variable_11 -> variable_13 ) ; free ( variable_11 ) ;
