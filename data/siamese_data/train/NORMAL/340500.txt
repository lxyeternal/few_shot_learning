 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;
 static ssize_t func_0 ( variable_0 * variable_1 , const uint8_t * variable_2 , size_t variable_3 ) variable_4 * variable_5 = func_1 ( variable_1 ) ; if ( ! func_2 ( variable_1 ) ) static int func_3 ( variable_0 * variable_1 ) variable_4 * variable_5 = func_4 ( variable_1 ) ; if ( variable_5 -> variable_6 ) return 0 ; return ! func_5 ( variable_5 ) ; static int func_6 ( variable_4 * variable_5 ) if ( variable_5 -> variable_7 >= variable_8 ) return 1 ; return 0 ; variable_5 -> variable_6 = 1 ; memcpy ( variable_5 -> variable_9 , variable_2 , variable_3 ) ; variable_5 -> variable_7 = variable_3 ; variable_5 -> variable_10 = 0 ; variable_5 -> variable_11 |= variable_12 ; func_7 ( variable_5 ) ; static void func_8 ( variable_4 * variable_5 ) int variable_13 = ! ! variable_5 -> variable_11 ; func_9 ( variable_13 , variable_5 -> variable_11 ) ; func_10 ( variable_5 -> variable_14 , variable_13 ) ;
