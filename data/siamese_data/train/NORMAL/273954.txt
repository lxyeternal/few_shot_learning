 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 . func_9 ( variable_23 ) ; variable_24 . func_10 ( variable_23 ) ; variable_24 . func_11 ( variable_23 ) ;
 static func_0 ( variable_0 * variable_1 , gint64 variable_2 , struct variable_3 variable_4 * variable_5 , int * variable_6 , variable_7 * * variable_8 ) if ( func_1 ( variable_1 -> variable_9 , variable_2 - 1 , variable_10 , variable_6 ) == - 1 ) return func_2 ( variable_1 , variable_1 -> variable_9 , variable_11 , variable_5 , variable_6 , variable_8 ) ; static func_3 ( variable_0 * variable_1 , FILE_T variable_12 , struct variable_3 variable_4 * variable_5 , int * variable_6 , variable_7 * * variable_8 ) variable_13 * variable_14 = ( iseries_t * ) variable_1 -> variable_15 ; gint64 variable_16 ; gboolean variable_17 , variable_18 ; int variable_19 , variable_20 , variable_21 , variable_22 ; int variable_23 , variable_24 , variable_25 , variable_26 , variable_27 ; char variable_28 [ 2 ] , variable_29 [ 13 ] , variable_30 [ 13 ] , variable_31 [ 5 ] , variable_32 [ 9 + 1 ] ; char variable_33 [ variable_34 * 2 ] ; int variable_35 ; char * variable_36 ; int variable_37 ; struct tm variable_38 ; variable_17 = variable_39 ; for ( variable_20 = 1 ; variable_20 < variable_40 ; variable_20 ++ ) if ( func_4 ( variable_33 , variable_34 , variable_12 ) == NULL ) variable_19 sscanf ( variable_33  " % 12s % * [ \n \t ] % 12s % * [ \n \t ] ETHV2 % * [ \n \t ] TYPE : % * [ \n \t ] % 4 s " & variable_24 , variable_28 , & variable_23 , & variable_25 , & variable_26 , & variable_27 , variable_32 , variable_29 variable_30 , variable_31 ) if ( variable_19 == 10 ) variable_17 = variable_41 ; variable_23 += 14 ; if ( ! variable_17 ) variable_11 -> variable_42 = variable_43 ; variable_11 -> variable_44 = variable_45 ; if ( variable_14 -> variable_46 ) variable_11 -> variable_44 |= variable_47 ; variable_38 . variable_48 = 100 + variable_14 -> variable_49 ; variable_38 . variable_50 = variable_14 -> variable_51 - 1 ; variable_38 . variable_52 = variable_14 -> variable_53 ; variable_38 . variable_54 = variable_25 ; variable_38 . variable_55 = variable_26 ; variable_38 . variable_56 = variable_27 ; variable_38 . variable_57 = - 1 ; variable_11 -> variable_58 . variable_59 = mktime ( & variable_38 ) ; variable_32 [ sizeof ( variable_32 ) - 1 ] = ' \0 ' ; switch ( strlen ( variable_32 ) ) variable_11 -> variable_58 . variable_60 = atoi ( variable_32 ) ; variable_11 -> variable_61 = variable_23 ; variable_11 -> variable_62 = variable_63 ; variable_11 -> variable_64 . variable_65 . variable_66 = - 1 ; variable_36 = ( char * ) func_5 ( variable_67 ) ; variable_37 = 14 * 2 ; variable_18 = variable_41 ; variable_21 = 0 ; while ( variable_18 ) variable_21 ++ ; if ( func_6 ( variable_33 , variable_34 , variable_12 ) == NULL ) * variable_6 = func_7 ( variable_12 , variable_8 ) ; if ( * variable_6 == 0 ) if ( variable_14 -> variable_68 == variable_69 ) variable_22 = func_8 ( ( guint8 * ) variable_33 , variable_34 ) ; static func_9 ( variable_70 * variable_5 , guint variable_71 ) guint variable_72 ; for ( variable_72 = 0 ; variable_72 < variable_71 ; variable_72 ++ ) if ( variable_5 [ variable_72 ] == 0 variable_73 ) return variable_72 ; return variable_72 ; variable_22 = ( int ) strlen ( variable_33 ) ; for ( variable_35 = 0 ; func_10 ( variable_33 [ variable_35 ] ) ; variable_35 ++ ) if ( variable_35 == 22 ) if ( strncmp ( variable_33 + 22 , " IP Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " IPv6 Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " ARP Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " TCP Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " UDP Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " ICMP Header : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " ICMPv6 Hdr : " , 14 ) == 0 || strncmp ( variable_33 + 22 , " Option Hdr : " , 14 ) == 0 ) variable_37 = func_11 ( variable_36 , variable_37 , variable_67 - 1 , variable_33 + 22 + 14 , variable_6 , variable_8 ) ; static func_12 ( char * variable_36 , int variable_37 , int char * variable_33 , int * variable_6 , variable_7 * * variable_8 ) int variable_74 , variable_75 ; int variable_76 ; unsigned int variable_72 ; gboolean variable_77 = variable_39 ; variable_74 = 0 ; variable_75 = variable_37 ; for ( variable_72 = 0 ; variable_72 < 16 ; variable_72 ++ , variable_74 ++ ) variable_76 = variable_33 [ variable_74 ] & 0 variable_78 ; if ( variable_76 == ' \0 ' || variable_76 == ' ' || variable_76 == ' * ' || variable_76 == ' \r ' || variable_76 == ' \n ' ) if ( ! func_13 ( variable_76 ) || func_14 ( variable_76 ) ) return variable_37 ; if ( variable_75 >= variable_79 ) variable_77 = variable_41 ; variable_36 [ variable_75 ] = variable_76 ; variable_75 ++ ; for ( ; ( variable_33 [ variable_74 ] & 0 variable_78 ) == ' ' ; variable_74 ++ ) if ( ( variable_72 % 2 ) != 0 ) return - 1 ; if ( variable_77 ) return - 1 ; return variable_75 ; if ( variable_37 == - 1 ) if ( variable_35 == 9 ) if ( strncmp ( variable_33 + 9 , "  Data . . . . . : " , 18 ) == 0 ) variable_37 = func_15 ( variable_36 , variable_37 , variable_67 - 1 , variable_33 + 9 + 18 , variable_6 , variable_8 ) ; static func_16 ( char * variable_36 , int variable_37 , int char * variable_33 , int * variable_6 , variable_7 * * variable_8 ) int variable_74 , variable_75 ; int variable_76 ; unsigned int variable_72 ; gboolean variable_77 = variable_39 ; variable_74 = 0 ; variable_75 = variable_37 ; variable_76 = variable_33 [ variable_74 ] & 0 variable_78 ; if ( variable_76 == ' \0 ' || variable_76 == ' ' || variable_76 == ' * ' || variable_76 == ' \r ' || variable_76 == ' \n ' ) if ( ! func_17 ( variable_76 ) || func_18 ( variable_76 ) ) return variable_37 ; if ( variable_75 >= variable_79 ) variable_77 = variable_41 ; variable_36 [ variable_75 ] = variable_76 ; variable_75 ++ ; if ( ( variable_72 % 2 ) != 0 ) return - 1 ; if ( variable_77 ) return - 1 ; return variable_75 ; if ( variable_37 == - 1 ) if ( variable_35 == 36 || variable_35 == 27 ) variable_37 = func_19 ( variable_36 , variable_37 , variable_67 - 1 , variable_33 + variable_35 , variable_6 , variable_8 ) ; static func_20 ( char * variable_36 , int variable_37 , int char * variable_33 , int * variable_6 , variable_7 * * variable_8 ) int variable_74 , variable_75 ; int variable_76 ; unsigned int variable_72 ; gboolean variable_77 = variable_39 ; variable_74 = 0 ; variable_75 = variable_37 ; variable_76 = variable_33 [ variable_74 ] & 0 variable_78 ; if ( variable_76 == ' \0 ' || variable_76 == ' ' || variable_76 == ' * ' || variable_76 == ' \r ' || variable_76 == ' \n ' ) if ( ! func_21 ( variable_76 ) || func_22 ( variable_76 ) ) return variable_37 ; if ( variable_75 >= variable_79 ) variable_77 = variable_41 ; variable_36 [ variable_75 ] = variable_76 ; variable_75 ++ ; if ( ( variable_72 % 2 ) != 0 ) return - 1 ; if ( variable_77 ) return - 1 ; return variable_75 ; if ( variable_37 == - 1 ) variable_19 = sscanf ( variable_33 + 78 , " % * [ \n \t ] ETHV2 % * [ . : \n \t ] TYPE % * [ . : \n \t ] % 4 s " , variable_31 ) ; if ( ( variable_19 == 1 ) && variable_21 > 1 ) variable_18 = variable_39 ; variable_16 = func_23 ( variable_12 ) ; if ( variable_16 == - 1 ) if ( func_24 ( variable_12 , variable_16 - variable_22 , variable_10 , variable_6 ) == - 1 ) variable_36 [ variable_37 ] = ' \0 ' ; variable_11 -> variable_80 = ( ( variable_81 ) strlen ( variable_36 ) ) / 2 ;
