 void func_0 ( ) char * variable_0 ; char variable_1 [ 250 ] = " PATH = " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_2 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( 250 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;
 int func_0 ( variable_0 * variable_1 , void * variable_2 , int variable_3 * variable_4 ) const uint8_t * variable_5 = variable_4 -> variable_2 ; variable_6 * variable_7 = variable_1 -> variable_8 ; AVFrame * const variable_9 = variable_7 -> variable_10 [ variable_11 ] int variable_12 = variable_4 -> variable_13 ; int variable_14 , func_1 ( variable_15 ) ; if ( variable_7 -> variable_16 ) if ( variable_12 < 3 ) variable_15 = func_2 ( & variable_5 ) ; variable_12 -= 3 ; if ( variable_12 < variable_15 ) for ( variable_14 = 0 ; variable_14 < 1 + variable_7 -> variable_16 ; variable_14 ++ ) int variable_17 , variable_18 , variable_19 , variable_20 = 0 ; int variable_21 , variable_22 , variable_23 , variable_24 , variable_25 ; int variable_26 = 0 ; int variable_27 ; variable_7 -> variable_28 = & variable_7 -> variable_29 [ variable_14 ] ; variable_27 = variable_7 -> func_3 ( variable_7 , variable_5 , variable_12 , & variable_26 ) ; if ( ! variable_27 ) if ( variable_27 == 2 ) if ( variable_7 -> variable_30 [ variable_31 ] . variable_2 [ 0 ] ) if ( variable_14 ) if ( ! variable_14 ) variable_9 -> variable_32 = 1 ; if ( variable_1 -> func_4 ( variable_1 , variable_9 ) < 0 ) if ( variable_27 == 2 ) if ( func_5 ( variable_1 ) ) if ( variable_9 -> variable_33 ) variable_9 -> variable_34 = variable_35 ; for ( variable_21 = 0 ; variable_21 < variable_7 -> variable_36 * variable_7 -> variable_37 ; variable_21 ++ ) variable_7 -> variable_38 [ variable_21 ] . variable_39 = variable_40 ; variable_9 -> variable_34 = variable_41 ; variable_7 -> variable_42 = variable_43 ; if ( variable_7 -> func_6 ( variable_7 ) ) memset ( variable_7 -> variable_44 , 0 , sizeof ( variable_7 -> variable_44 ) ) ; variable_7 -> variable_44 [ 1 ] [ variable_11 ] = 128 ; variable_7 -> variable_44 [ 2 ] [ variable_11 ] = 128 ; for ( variable_21 = 0 ; variable_21 < 4 * variable_7 -> variable_37 + 6 ; variable_21 ++ ) variable_7 -> variable_45 [ variable_21 ] . variable_46 = variable_47 ; variable_7 -> variable_45 [ variable_21 ] . variable_48 = 0 ; variable_7 -> variable_45 [ variable_21 ] . variable_49 = 0 ; variable_7 -> variable_45 [ 2 * variable_7 -> variable_37 + 2 ] . variable_46 = variable_11 ; variable_7 -> variable_45 [ 3 * variable_7 -> variable_37 + 4 ] . variable_46 = variable_11 ; variable_24 = variable_9 -> variable_50 [ 0 ] ; variable_25 = variable_9 -> variable_50 [ 1 ] ; if ( variable_7 -> variable_51 < 0 ) variable_20 = 7 ; for ( variable_17 = 0 ; variable_17 < variable_7 -> variable_36 ; variable_17 ++ ) if ( variable_7 -> variable_51 < 0 ) variable_19 = variable_7 -> variable_36 - variable_17 - 1 ; variable_19 = variable_17 ; for ( variable_21 = 0 ; variable_21 < 4 ; variable_21 ++ ) variable_7 -> variable_52 [ variable_21 ] . variable_46 = variable_47 ; variable_7 -> variable_52 [ variable_21 ] . variable_48 = 0 ; variable_7 -> variable_52 [ variable_21 ] . variable_49 = 0 ; memset ( variable_7 -> variable_53 , 0 , sizeof ( variable_7 -> variable_53 ) ) ; memset ( variable_7 -> variable_54 , 24 , sizeof ( variable_7 -> variable_54 ) ) ; variable_7 -> variable_55 [ 0 ] = 1 ; variable_7 -> variable_55 [ 1 ] = 2 ; variable_7 -> variable_55 [ 2 ] = 1 ; variable_7 -> variable_55 [ 3 ] = 2 ; variable_7 -> variable_55 [ 4 ] = 2 * variable_7 -> variable_37 + 2 + 1 ; variable_7 -> variable_55 [ 5 ] = 3 * variable_7 -> variable_37 + 4 + 1 ; variable_7 -> variable_56 [ variable_7 -> variable_57 ] = ( variable_19 * 16 + variable_20 ) * variable_24 ; variable_7 -> variable_56 [ variable_7 -> variable_58 ] = variable_7 -> variable_56 [ variable_7 -> variable_57 ] + 8 * variable_24 ; variable_7 -> variable_56 [ 1 ] = variable_7 -> variable_56 [ 0 ] + 8 ; variable_7 -> variable_56 [ 3 ] = variable_7 -> variable_56 [ 2 ] + 8 ; variable_7 -> variable_56 [ 4 ] = ( variable_19 * 8 + variable_20 ) * variable_25 ; variable_7 -> variable_56 [ 5 ] = variable_7 -> variable_56 [ 4 ] ; for ( variable_18 = 0 ; variable_18 < variable_7 -> variable_37 ; variable_18 ++ ) func_7 ( variable_7 , variable_17 , variable_18 , variable_14 ) ; for ( variable_22 = 0 ; variable_22 < 4 ; variable_22 ++ ) variable_7 -> variable_55 [ variable_22 ] += 2 ; variable_7 -> variable_56 [ variable_22 ] += 16 ; for ( variable_23 = 4 ; variable_23 < 6 ; variable_23 ++ ) variable_7 -> variable_55 [ variable_23 ] += 1 ; variable_7 -> variable_56 [ variable_23 ] += 8 ; if ( variable_9 -> variable_33 || variable_26 ) if ( variable_7 -> variable_10 [ variable_59 ] -> variable_2 [ 0 ] && variable_7 -> variable_10 [ variable_59 ] != variable_7 -> variable_10 [ variable_60 ] ) variable_1 -> func_8 ( variable_1 , variable_7 -> variable_10 [ variable_59 ] ) ; variable_7 -> variable_10 [ variable_59 ] = variable_9 ; if ( variable_7 -> variable_16 ) func_9 ( variable_61 * , variable_7 -> variable_10 [ variable_59 ] variable_7 -> variable_10 [ variable_60 ] ) variable_5 += variable_15 ; variable_12 -= variable_15 ; if ( variable_7 -> variable_10 [ variable_62 ] == variable_7 -> variable_10 [ variable_59 ] || variable_7 -> variable_10 [ variable_62 ] == variable_7 -> variable_10 [ variable_60 ] ) if ( variable_7 -> variable_10 [ variable_63 ] != variable_7 -> variable_10 [ variable_59 ] && variable_7 -> variable_10 [ variable_63 ] != variable_7 -> variable_10 [ variable_60 ] ) func_10 ( variable_61 * , variable_7 -> variable_10 [ variable_62 ] variable_7 -> variable_10 [ variable_63 ] ) func_11 ( variable_61 * , variable_7 -> variable_10 [ variable_62 ] variable_7 -> variable_10 [ variable_64 ] ) if ( variable_7 -> variable_10 [ variable_62 ] -> variable_2 [ 0 ] ) variable_1 -> func_12 ( variable_1 , variable_7 -> variable_10 [ variable_62 ] ) ; func_13 ( variable_61 * , variable_7 -> variable_10 [ variable_11 ] variable_7 -> variable_10 [ variable_62 ] ) variable_9 -> variable_65 = variable_7 -> variable_65 ; variable_9 -> variable_66 = variable_67 ; * ( AVFrame * ) variable_2 = * variable_9 ;
