 variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;
 variable_0 * func_0 ( variable_1 * variable_2 ) int variable_3 ; char * variable_4 ; if ( func_1 ( & variable_5 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_4 != 0 ) variable_6 = variable_4 ; variable_7 = & variable_6 ; variable_8 = variable_7 + 5 ; variable_9 = ( ( char * ) ( * ( variable_8 - 5 ) ) ) ; variable_10 = ( struct stonesoup_struct * ) malloc ( sizeof ( struct variable_11 ) ) ; if ( variable_10 != NULL ) variable_3 = ( ( int ) ( strlen ( variable_9 ) ) ) ; for ( ; variable_3 >= 0 ; ( -- variable_12 , -- variable_3 ) ) variable_10 -> variable_13 [ variable_12 ] = variable_9 [ variable_3 ] ; func_3 ( variable_14 , variable_15 , " stonesoup_data -> buffer " , variable_10 -> variable_13 , " CROSSOVER - STATE " ) ; variable_10 -> variable_13 [ variable_16 ] = func_4 ( variable_10 -> variable_13 [ variable_16 ] ) ; int func_5 ( int variable_17 ) if ( variable_17 >= 97 && variable_17 <= 122 ) return variable_17 - 32 ; return variable_17 ; func_6 ( " %c " , variable_10 -> func_7 ( variable_10 -> variable_13 [ variable_16 ] ) ) ; void func_8 ( char * variable_18 , . . . ) va_start ( variable_19 , variable_18 ) ; vfprintf ( variable_20 , variable_18 , variable_19 ) ; free ( variable_10 ) ; func_9 ( variable_14 , variable_21 , " stonesoup_i " , variable_16 , & variable_16 , " FINAL - STATE " ) ; func_10 ( variable_14 , variable_15 , " stonesoup_data -> buffer " , variable_10 -> variable_13 , " FINAL - STATE " ) ;
