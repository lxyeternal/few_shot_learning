 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = strtoul ( variable_3 , NULL , 0 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;
 qcms_bool func_0 ( struct variable_0 * variable_1 , variable_2 * variable_3 ) if ( variable_1 -> variable_4 == variable_5 ) float variable_6 [ 256 ] ; uint16_t variable_7 [ 256 ] ; uint16_t variable_8 ; variable_9 * variable_10 ; int variable_11 = 256 ; for ( variable_8 = 0 ; variable_8 < 256 ; variable_8 ++ ) variable_7 [ variable_8 ] = ( variable_9 ) ( variable_6 [ variable_8 ] * 65535 ) ; if ( variable_11 < 256 ) variable_11 = 256 ; variable_10 = func_1 ( variable_7 , 256 , variable_11 ) ; static variable_9 * func_2 ( variable_9 * variable_12 , int variable_13 , int variable_14 ) int variable_8 ; variable_9 * variable_3 = malloc ( sizeof ( variable_9 ) * variable_14 ) ; if ( ! variable_3 ) return NULL ; for ( variable_8 = 0 ; variable_8 < variable_14 ; variable_8 ++ ) double variable_15 = ( ( variable_16 ) variable_8 * 65535 . ) / ( variable_16 ) ( variable_14 - 1 ) ; uint16_fract_t variable_17 = floor ( variable_15 + . 5 ) ; variable_3 [ variable_8 ] = func_3 ( variable_17 , variable_12 , variable_13 ) ; uint16_fract_t func_4 ( uint16_t variable_18 , uint16_t variable_19 [ ] , int variable_13 ) int variable_20 = 1 ; int variable_21 = 0 variable_22 ; int variable_15 = 0 , variable_23 ; int variable_24 , variable_25 ; int variable_26 , variable_27 ; double variable_28 ; double variable_29 , variable_30 , variable_31 , variable_32 ; double variable_33 , variable_34 , variable_35 ; variable_24 = 0 ; while ( variable_19 [ variable_24 ] == 0 && variable_24 < variable_13 - 1 ) variable_24 ++ ; if ( variable_24 == 0 && variable_18 == 0 ) return 0 ; variable_25 = 0 ; while ( variable_19 [ variable_13 - 1 - variable_25 ] == 0 variable_36 && variable_25 < variable_13 - 1 ) variable_25 ++ ; if ( variable_24 > 1 || variable_25 > 1 ) int variable_33 , variable_34 ; if ( variable_18 == 0 ) return 0 ; variable_33 = ( ( variable_24 - 1 ) * 0 variable_36 ) / ( variable_13 - 1 ) ; variable_34 = ( ( variable_13 - 1 - variable_25 ) * 0 variable_36 ) / ( variable_13 - 1 ) ; variable_20 = variable_33 - 1 ; variable_21 = variable_34 + 1 ; while ( variable_21 > variable_20 ) variable_15 = ( variable_20 + variable_21 ) / 2 ; variable_23 = ( int ) func_5 ( ( variable_37 ) ( variable_15 - 1 ) , variable_19 , variable_13 ) ; uint16_t func_6 ( uint16_t variable_38 , variable_9 * variable_12 , int variable_13 ) uint32_t variable_39 = ( variable_38 * ( variable_13 - 1 ) ) ; uint32_t variable_40 = ( variable_39 + 65534 ) / 65535 ; uint32_t variable_41 = variable_39 / 65535 ; uint32_t variable_42 = variable_39 % 65535 ; variable_39 = ( variable_12 [ variable_40 ] * ( variable_42 ) + variable_12 [ variable_41 ] * ( 65535 - variable_42 ) ) / 65535 ; return variable_39 ; if ( variable_23 == variable_18 ) return ( variable_37 ) ( variable_15 - 1 ) ; if ( variable_23 > variable_18 ) variable_21 = variable_15 - 1 ; variable_20 = variable_15 + 1 ; variable_28 = ( variable_13 - 1 ) * ( ( variable_16 ) ( variable_15 - 1 ) / 65535 . 0 ) ; variable_26 = ( int ) floor ( variable_28 ) ; variable_27 = ( int ) ceil ( variable_28 ) ; if ( variable_26 == variable_27 ) return ( variable_37 ) variable_15 ; variable_29 = variable_19 [ variable_26 ] ; variable_31 = ( 65535 . 0 * variable_26 ) / ( variable_13 - 1 ) ; variable_30 = variable_19 [ variable_27 ] ; variable_32 = ( 65535 . 0 * variable_27 ) / ( variable_13 - 1 ) ; variable_33 = ( variable_30 - variable_29 ) / ( variable_32 - variable_31 ) ; variable_34 = variable_29 - variable_33 * variable_31 ; if ( fabs ( variable_33 ) < 0 . 01 ) return ( variable_37 ) variable_15 ; variable_35 = ( ( variable_18 - variable_34 ) / variable_33 ) ; if ( variable_35 < 0 . 0 ) return ( variable_37 ) 0 ; if ( variable_35 >= 65535 . 0 ) return ( variable_37 ) 0 variable_36 ; return ( variable_37 ) floor ( variable_35 + 0 . 5 ) ; return variable_3 ; if ( ! variable_10 ) free ( variable_10 ) ;
