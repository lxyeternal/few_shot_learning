 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;
 static void func_0 ( ) stdThread variable_0 = NULL ; if ( ! func_1 ( & variable_1 ) ) int func_2 ( variable_2 * variable_3 ) stdThreadLock variable_4 = NULL ; variable_4 = ( variable_2 ) malloc ( sizeof ( * variable_4 ) ) ; if ( variable_4 == NULL ) return 0 ; return 1 ; if ( ! func_3 ( variable_5 , NULL , & variable_0 ) ) int func_4 ( stdThreadRoutine variable_6 , void * variable_7 , variable_8 * variable_9 ) uintptr_t variable_10 ; stdThread variable_11 ; variable_11 = ( variable_8 ) malloc ( sizeof ( * variable_11 ) ) ; if ( variable_11 == NULL ) return 0 ; variable_11 -> variable_6 = variable_6 ; variable_11 -> variable_7 = variable_7 ; variable_10 = func_5 ( NULL , 0 , variable_12 , variable_11 , 0 , NULL ) ; if ( variable_10 == 0 ) return 0 ; return 1 ; variable_0 = NULL ; if ( variable_0 && func_6 ( variable_0 ) ) int func_7 ( stdThread variable_9 ) DWORD variable_13 ; variable_13 = WaitForSingleObject ( ( variable_14 ) variable_9 -> variable_10 , variable_15 ) ; if ( variable_13 != variable_16 ) return 0 ; return 1 ; func_8 ( variable_0 ) ; int func_9 ( stdThread variable_9 ) free ( variable_9 ) ;
