 static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char * variable_1 = NULL ; variable_1 = ( char * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = ' G ' ; func_1 ( * variable_1 ) ; void func_2 ( char variable_2 ) printf ( " % 02x \n " , variable_2 ) ; free ( variable_1 ) ;
 void func_0 ( void ( * variable_0 ) ( union thorough_cavit * ) ) struct variable_1 * variable_2 ; int variable_3 ; union thorough_cavit variable_4 [ 10 ] = { 0 } ; union thorough_cavit variable_5 = { 0 } ; if ( variable_5 . variable_6 != 0 ) variable_4 [ 5 ] = variable_5 ; variable_3 = 5 ; variable_7 = & variable_3 ; variable_8 = * ( variable_4 + * variable_7 ) ; variable_9 = ( ( char * ) variable_8 . variable_6 ) ; variable_2 = malloc ( sizeof ( struct variable_1 ) ) ; if ( variable_2 ) variable_2 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_9 ) + 1 ) ) ; variable_2 -> variable_11 = malloc ( sizeof ( char ) * ( strlen ( variable_9 ) + 1 ) ) ; variable_2 -> variable_12 = malloc ( sizeof ( char ) * ( strlen ( variable_9 ) + 1 ) ) ; if ( variable_2 -> variable_10 ) if ( ( sscanf ( variable_9 , " %d %s %s %s " , & ( variable_2 -> variable_13 ) , variable_2 -> variable_11 , variable_2 -> variable_12 , variable_2 -> variable_10 ) == 4 ) && ( strlen ( variable_2 -> variable_10 ) != 0 ) && ( strlen ( variable_2 -> variable_11 ) != 0 ) && ( strlen ( variable_2 -> variable_12 ) != 0 ) ) func_1 ( variable_14 , variable_15 , " stonesoupData -> qsize " , variable_2 -> variable_13 , & ( variable_2 -> variable_13 ) , " INITIAL - STATE " ) ; func_2 ( variable_14 , variable_16 , " stonesoupData -> data " , variable_2 -> variable_10 , " INITIAL - STATE " ) ; func_3 ( variable_14 , variable_16 , " stonesoupData -> file1 " , variable_2 -> variable_11 , " INITIAL - STATE " ) ; func_4 ( variable_14 , variable_16 , " stonesoupData -> file2 " , variable_2 -> variable_12 , " INITIAL - STATE " ) ; if ( strlen ( variable_2 -> variable_10 ) > 50 ) if ( func_5 ( & variable_17 , NULL , variable_18 , variable_2 ) != 0 ) if ( func_6 ( & variable_19 , NULL , variable_20 , variable_2 ) != 0 ) if ( strlen ( variable_2 -> variable_10 ) > 50 ) free ( variable_2 -> variable_10 ) ; free ( variable_2 ) ;
