 static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( 100 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; func_3 ( " fgets ( ) failed " ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; variable_0 [ variable_4 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_5 ( ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < strlen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 ) func_6 ( " We have a match ! " ) ; void func_7 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; break ; free ( variable_0 ) ;
