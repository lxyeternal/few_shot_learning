 static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;
 void func_0 ( char * variable_0 ) char variable_1 [ 150 ] ; variable_2 = getenv ( " DBPGHOST " ) ; variable_3 = getenv ( " DBPGUSER " ) ; variable_4 = getenv ( " DBPGPASSWORD " ) ; variable_5 = getenv ( " DBPGPORT " ) ; variable_6 = getenv ( " SS_DBPGDATABASE " ) ; if ( variable_2 != 0 && variable_5 != 0 && variable_3 != 0 && variable_4 != 0 && variable_6 != 0 ) snprintf ( variable_1 , 150 , " dbname = %s host = %s user = %s password = %s port = %s " , variable_6 , variable_2 , variable_3 , variable_4 , variable_5 ) ; variable_7 = func_1 ( variable_1 ) ; if ( func_2 ( variable_7 ) != 0 ) func_3 ( " %s : %s \n " , " Connection to database failed " , func_4 ( variable_7 ) ) ; void func_5 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_6 ( variable_7 ) ; variable_11 = func_7 ( variable_7 , variable_12 ) ; if ( func_8 ( variable_11 ) != 2 ) func_9 ( " %s : %s \n " , " SELECT failed " , func_10 ( variable_7 ) ) ; void func_11 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_12 ( variable_11 ) ; func_13 ( variable_7 ) ; variable_13 = func_14 ( variable_11 ) ; for ( variable_14 = 0 ; variable_14 < variable_13 ; variable_14 ++ ) func_15 ( " % - 15s " , func_16 ( variable_11 , variable_14 ) ) ; void func_17 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; for ( variable_14 = 0 ; variable_14 < func_18 ( variable_11 ) ; variable_14 ++ ) for ( variable_15 = 0 ; variable_15 < variable_13 ; variable_15 ++ ) func_19 ( " % - 15s " , func_20 ( variable_11 , variable_14 , variable_15 ) ) ; void func_21 ( char * variable_8 , . . . ) va_start ( variable_9 , variable_8 ) ; vfprintf ( variable_10 , variable_8 , variable_9 ) ; func_22 ( variable_11 ) ; func_23 ( variable_7 ) ;
