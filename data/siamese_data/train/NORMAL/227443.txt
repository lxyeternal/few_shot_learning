 static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; strcpy ( variable_0 , " a string " ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_1 ) if ( variable_1 != NULL ) printf ( " %s \n " , variable_1 ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_4 ( variable_2 ) ; void func_5 ( variable_3 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ;
 static int func_0 ( variable_0 * variable_1 , variable_2 const AVFrame * variable_3 , int * variable_4 ) variable_5 * variable_6 = variable_1 -> variable_7 ; variable_8 * variable_9 , * variable_10 ; const uint32_t * variable_11 = NULL ; int variable_12 ; if ( ( variable_12 = func_1 ( variable_1 , variable_13 , variable_1 -> variable_14 * variable_1 -> variable_15 * 7 / 5 + variable_16 , 0 ) ) < 0 ) variable_9 = variable_13 -> variable_17 ; variable_10 = variable_13 -> variable_17 + variable_13 -> variable_18 ; if ( variable_1 -> variable_19 == variable_20 ) variable_8 * variable_21 = func_2 ( variable_13 , variable_22 , variable_23 ) ; if ( ! variable_21 ) memcpy ( variable_21 , variable_3 -> variable_17 [ 1 ] , variable_23 ) ; variable_11 = ( uint32_t * ) variable_3 -> variable_17 [ 1 ] ; variable_6 -> variable_21 = variable_21 ; if ( ! variable_6 -> variable_24 ) variable_11 = NULL ; if ( ! memcmp ( variable_6 -> variable_11 , variable_11 , variable_23 ) ) variable_11 = NULL ; func_3 ( variable_1 , & variable_9 , variable_10 , variable_11 , variable_3 -> variable_17 [ 0 ] , variable_3 -> variable_25 [ 0 ] , variable_13 ) ; static int func_4 ( variable_0 variable_8 * * variable_26 , variable_8 const variable_27 const uint8_t * variable_28 , const int variable_2 * variable_13 ) variable_5 * variable_6 = variable_1 -> variable_7 ; int variable_29 = 0 , variable_15 = variable_1 -> variable_15 , variable_14 = variable_1 -> variable_14 , variable_30 , variable_31 ; int variable_32 = 0 , variable_33 = 0 , variable_34 = variable_6 -> variable_35 ; int variable_36 = ( variable_6 -> variable_37 & variable_38 ) && variable_6 -> variable_39 ; const uint8_t * variable_40 ; if ( ( variable_6 -> variable_37 & variable_41 ) && variable_6 -> variable_39 && ! variable_11 ) const uint8_t * variable_42 = variable_6 -> variable_39 -> variable_17 [ 0 ] ; const int variable_43 = variable_6 -> variable_39 -> variable_25 [ 0 ] ; int variable_44 = variable_1 -> variable_14 - 1 , variable_45 = variable_1 -> variable_15 - 1 ; while ( variable_33 < variable_45 ) if ( memcmp ( variable_42 + variable_33 * variable_43 , variable_28 + variable_33 * variable_25 , variable_14 ) ) variable_33 ++ ; while ( variable_45 > variable_33 ) if ( memcmp ( variable_42 + variable_45 * variable_43 , variable_28 + variable_45 * variable_25 , variable_14 ) ) variable_45 -- ; variable_15 = variable_45 + 1 - variable_33 ; while ( variable_32 < variable_44 ) int variable_46 = 1 ; for ( variable_31 = variable_33 ; variable_31 <= variable_45 ; variable_31 ++ ) if ( variable_42 [ variable_31 * variable_43 + variable_32 ] != variable_28 [ variable_31 * variable_25 + variable_32 ] ) variable_46 = 0 ; if ( ! variable_46 ) variable_32 ++ ; while ( variable_44 > variable_32 ) int variable_46 = 1 ; for ( variable_31 = variable_33 ; variable_31 <= variable_45 ; variable_31 ++ ) if ( variable_42 [ variable_31 * variable_43 + variable_44 ] != variable_28 [ variable_31 * variable_25 + variable_44 ] ) variable_46 = 0 ; if ( ! variable_46 ) variable_44 -- ; variable_14 = variable_44 + 1 - variable_32 ; if ( variable_36 && variable_34 < 0 ) variable_34 = func_5 ( variable_28 + variable_33 * variable_25 + variable_32 , variable_25 , variable_14 , variable_15 ) ; static int func_6 ( const uint8_t * variable_28 , int variable_25 , int variable_47 , int variable_48 ) int variable_49 [ variable_50 ] = { 0 } ; int variable_30 , variable_31 , variable_51 ; for ( variable_31 = 0 ; variable_31 < variable_48 ; variable_31 ++ ) for ( variable_30 = 0 ; variable_30 < variable_47 ; variable_30 ++ ) variable_49 [ variable_28 [ variable_30 ] ] ++ ; variable_28 += variable_25 ; for ( variable_51 = 0 ; variable_51 < func_7 ( variable_49 ) ; variable_51 ++ ) if ( ! variable_49 [ variable_51 ] ) return variable_51 ; return - 1 ; if ( variable_34 < 0 ) variable_8 * variable_21 = variable_6 -> variable_21 ; if ( ! variable_21 ) variable_21 = func_8 ( variable_13 , variable_22 , variable_23 ) ; if ( ! variable_21 ) memcpy ( variable_21 , variable_6 -> variable_11 , variable_23 ) ; variable_21 [ variable_34 * 4 + 3 * ! variable_52 ] = 0 variable_53 ; if ( variable_34 < 0 ) variable_36 = 0 ; variable_40 = variable_28 + variable_33 * variable_25 + variable_32 ; if ( variable_36 ) for ( variable_31 = 0 ; variable_31 < variable_15 ; variable_31 ++ ) memcpy ( variable_6 -> variable_54 , variable_40 , variable_14 ) ; if ( variable_42 [ variable_30 ] == variable_40 [ variable_30 ] ) variable_6 -> variable_54 [ variable_30 ] = variable_34 ; variable_29 += func_9 ( variable_6 -> variable_55 , variable_6 -> variable_54 , variable_14 ) ; variable_40 += variable_25 ; variable_29 += func_10 ( variable_6 -> variable_55 , variable_56 ) ; variable_40 = variable_6 -> variable_28 ; while ( variable_29 > 0 ) int variable_18 = func_11 ( 255 , variable_29 ) ; func_12 ( variable_26 , variable_18 ) ; if ( variable_10 - * variable_26 < variable_18 ) func_13 ( variable_26 , variable_40 , variable_18 ) ; variable_40 += variable_18 ; variable_29 -= variable_18 ;
