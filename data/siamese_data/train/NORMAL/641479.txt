 static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 20 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * variable_2 = ( int * ) variable_1 ; int variable_0 = ( * variable_2 ) ; int * variable_3 ; variable_3 = ( int * ) malloc ( variable_0 * sizeof ( int ) ) ; variable_3 [ variable_4 ] = 0 ; func_3 ( variable_3 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_3 ) ;
 variable_0 :: func_0 ( variable_1 * variable_2 ) variable_3 * variable_4 = variable_5 :: func_1 ( ) -> func_2 ( ) ; variable_6 < variable_7 > variable_8 ; HANDLE variable_9 = 0 ; if ( ! func_3 ( variable_4 , variable_8 , variable_9 , variable_10 . variable_11 , variable_10 . variable_12 , variable_10 . variable_13 ) ) variable_6 < variable_7 > variable_14 ; HANDLE variable_15 = 0 ; if ( ! func_4 ( variable_4 , variable_14 , variable_15 , variable_10 . variable_16 , variable_10 . variable_17 , variable_10 . variable_18 ) ) static bool func_5 ( variable_3 * variable_6 < variable_7 > & variable_19 & variable_20 * const variable_21 :: variable_22 & int32_t variable_23 ) variable_6 < variable_24 > variable_25 ; D3DLOCKED_RECT variable_26 ; variable_27 = func_6 ( variable_28 , variable_29 , variable_30 , variable_25 , variable_31 , variable_26 ) ; static func_7 ( variable_3 * const variable_22 variable_32 variable_6 < variable_24 > & variable_19 & variable_33 & variable_34 ) if ( ! variable_28 ) return variable_35 ; variable_6 < variable_7 > variable_36 ; if ( func_8 ( variable_28 -> func_9 ( variable_37 . variable_38 , variable_37 . variable_39 , 1 , 0 , variable_40 , variable_41 , func_10 ( variable_36 ) , & variable_31 ) ) ) return variable_35 ; if ( ! variable_36 ) return variable_35 ; variable_6 < variable_7 > variable_42 ; if ( func_11 ( variable_28 -> func_12 ( variable_37 . variable_38 , variable_37 . variable_39 , 1 , 0 , variable_40 , variable_43 , func_13 ( variable_42 ) , variable_35 ) ) ) return variable_35 ; if ( ! variable_42 ) return variable_35 ; if ( ! variable_34 . variable_44 ) return variable_35 ; return variable_36 . func_14 ( ) ; if ( ! variable_27 ) if ( variable_23 == variable_26 . variable_45 ) for ( int variable_46 = 0 ; variable_46 < variable_29 . variable_39 ; variable_46 ++ ) memcpy ( ( uint8_t * ) variable_26 . variable_44 + variable_46 * variable_26 . variable_45 , variable_47 + variable_46 * variable_23 , variable_29 . variable_38 ) ;
