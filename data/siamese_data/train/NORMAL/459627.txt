 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;
 static ssize_t func_0 ( struct variable_0 * variable_1 , const char variable_2 size_t variable_3 , variable_4 * variable_5 ) int variable_6 , variable_7 ; char * variable_8 ; char * variable_9 ; char * variable_10 ; char * variable_11 ; char * variable_12 ; struct variable_13 * variable_14 = variable_1 -> variable_15 ; if ( variable_3 == 0 ) variable_8 = kmalloc ( variable_3 + 1 , variable_16 ) ; if ( variable_8 == NULL ) if ( func_1 ( variable_8 , variable_17 , variable_3 ) ) variable_8 [ variable_3 ] = ' \0 ' ; variable_10 = variable_8 ; for ( variable_7 = 0 ; variable_7 < variable_18 ; variable_7 ++ ) variable_9 = strstr ( variable_10 , variable_14 [ variable_7 ] . variable_19 ) ; if ( variable_9 == NULL ) variable_11 = strchr ( variable_9 , ' \n ' ) ; if ( variable_11 == NULL ) variable_10 = variable_11 ++ ; variable_12 = strchr ( variable_9 , ' = ' ) ; if ( ! variable_12 ) variable_12 ++ ; variable_6 = func_2 ( variable_12 , NULL , 0 ) ; * ( ( u8 * ) variable_14 [ variable_7 ] . variable_20 ) = ( variable_21 ) variable_6 ; * ( ( u16 * ) variable_14 [ variable_7 ] . variable_20 ) = ( variable_22 ) variable_6 ; * ( ( u32 * ) variable_14 [ variable_7 ] . variable_20 ) = ( variable_23 ) variable_6 ; * ( ( u64 * ) variable_14 [ variable_7 ] . variable_20 ) = ( variable_24 ) variable_6 ; while ( 1 )
