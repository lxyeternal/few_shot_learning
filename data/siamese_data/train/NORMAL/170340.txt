 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = variable_3 ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;
 static gint func_0 ( variable_0 * variable_1 , int * variable_2 , variable_3 * * variable_4 ) gint variable_5 ; guint16 variable_6 ; guint16 variable_7 ; variable_8 * variable_9 ; guint32 variable_10 ; guint32 variable_11 ; variable_5 = func_1 ( & variable_12 , 2 , variable_1 -> variable_13 ) ; if ( variable_5 != 2 ) variable_6 = func_2 ( & variable_12 ) ; variable_5 = func_3 ( & variable_12 , 2 , variable_1 -> variable_13 ) ; if ( variable_5 != 2 ) variable_7 = func_4 ( & variable_12 ) ; variable_9 = ( guint8 * ) func_5 ( 5 * 4 + variable_6 ) ; variable_5 = func_6 ( variable_9 , 5 * 4 + variable_6 , variable_1 -> variable_13 ) ; if ( variable_5 != 5 * 4 + variable_6 ) if ( variable_5 != 4 * 4 + variable_6 ) if ( variable_7 == 24 ) variable_11 = ( variable_14 ) strlen ( variable_9 + 5 * 4 + 1 ) + 1 ; variable_10 = ( variable_14 ) strlen ( variable_9 + 5 * 4 + 1 + variable_11 ) + 1 ; if ( variable_6 == 1 + variable_11 + variable_10 ) if ( variable_6 == 1 + variable_11 + variable_10 ) if ( func_7 ( variable_1 -> variable_13 , variable_15 + 4 * 4 + 1 + variable_11 + variable_10 , variable_16 , variable_2 ) == - 1 )
