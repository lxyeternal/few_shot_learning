 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;
 variable_0 * func_0 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) variable_0 * variable_5 = func_1 ( ! 0 , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_2 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) if ( variable_4 ) return func_3 ( variable_6 , ( ( void * ) 0 ) , ( func_4 ( " subversion " , " In file ' %s ' line %d : assertion failed ( %s ) " ) ) , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_5 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_6 ( variable_7 , variable_8 ) ; static variable_0 * func_7 ( apr_status_t variable_7 , variable_0 * variable_8 ) variable_11 * variable_12 ; variable_0 * variable_13 ; if ( variable_8 ) variable_12 = variable_8 -> variable_12 ; variable_13 = ( memset ( func_8 ( variable_12 , sizeof ( ( * variable_13 ) ) ) , 0 , sizeof ( ( * variable_13 ) ) ) ) ; variable_13 -> variable_7 = variable_7 ; variable_13 -> variable_8 = variable_8 ; variable_13 -> variable_12 = variable_12 ; return variable_13 ; variable_5 -> variable_14 = ( func_9 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; return func_10 ( variable_6 , ( ( void * ) 0 ) , ( func_11 ( " subversion " , " In file ' %s ' line %d : internal malfunction " ) ) , variable_2 , variable_3 ) ; variable_0 * func_12 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_13 ( variable_7 , variable_8 ) ; variable_5 -> variable_14 = ( func_14 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; func_15 ( variable_5 , variable_15 , 0 , "  svn : " ) ; void func_16 ( variable_0 * variable_5 , FILE * variable_16 , svn_boolean_t variable_17 , const char * variable_18 ) variable_11 * variable_19 ; variable_20 * variable_21 ; variable_0 * variable_22 ; variable_21 = func_17 ( variable_19 , 0 , ( sizeof ( variable_23 ) ) ) ; variable_22 = variable_5 ; while ( variable_22 ) svn_boolean_t variable_24 = 0 ; if ( ! variable_22 -> variable_14 ) int variable_25 ; for ( variable_25 = 0 ; variable_25 < variable_21 -> variable_26 ; variable_25 ++ ) if ( variable_22 -> variable_7 == ( ( apr_status_t * ) ( variable_21 -> variable_27 ) ) [ variable_25 ] ) variable_24 = ! 0 ; if ( ! variable_24 ) func_18 ( variable_22 , variable_16 , variable_18 ) ; variable_22 = variable_22 -> variable_8 ; static void func_19 ( variable_0 * variable_5 , FILE * variable_16 , const char * variable_18 ) if ( func_20 ( variable_5 ) ) svn_boolean_t func_21 ( variable_0 * variable_5 ) return variable_5 && variable_5 -> variable_14 && ! strcmp ( variable_5 -> variable_14 , variable_28 ) ;
 static void func_0 ( void * variable_0 ) struct variable_1 * variable_2 = variable_0 ; if ( ! variable_2 -> variable_3 ) func_1 ( variable_2 ) ; static void func_2 ( struct variable_1 * variable_2 ) uint32_t variable_4 , variable_5 ; int variable_6 , variable_7 ; int variable_8 , variable_9 , variable_10 , variable_11 , variable_12 , variable_13 ; struct vmsvga_cursor_definition_s variable_14 ; variable_7 = func_3 ( variable_2 ) ; static inline int func_4 ( struct variable_1 * variable_2 ) int variable_15 ; if ( ! variable_2 -> variable_16 || ! variable_2 -> variable_3 ) return 0 ; variable_15 = func_5 ( variable_17 ) - func_6 ( variable_18 ) ; if ( variable_15 < 0 ) variable_15 += func_7 ( variable_19 ) - func_8 ( variable_20 ) ; return variable_15 >> 2 ; while ( variable_7 > 0 ) switch ( variable_4 = func_9 ( variable_2 ) ) static inline uint32_t func_10 ( struct variable_1 * variable_2 ) return func_11 ( func_12 ( variable_2 ) ) ; static inline uint32_t func_13 ( struct variable_1 * variable_2 ) uint32_t variable_4 = variable_2 -> variable_21 [ func_14 ( variable_18 ) >> 2 ] ; return variable_4 ; variable_7 -= 5 ; variable_7 -= 6 ; if ( variable_7 < 0 ) variable_5 = func_15 ( variable_2 ) ; static inline uint32_t func_16 ( struct variable_1 * variable_2 ) return func_17 ( func_18 ( variable_2 ) ) ; variable_8 = func_19 ( variable_2 ) ; static inline uint32_t func_20 ( struct variable_1 * variable_2 ) return func_21 ( func_22 ( variable_2 ) ) ; variable_9 = func_23 ( variable_2 ) ; static inline uint32_t func_24 ( struct variable_1 * variable_2 ) return func_25 ( func_26 ( variable_2 ) ) ; variable_12 = func_27 ( variable_2 ) ; static inline uint32_t func_28 ( struct variable_1 * variable_2 ) return func_29 ( func_30 ( variable_2 ) ) ; variable_13 = func_31 ( variable_2 ) ; static inline uint32_t func_32 ( struct variable_1 * variable_2 ) return func_33 ( func_34 ( variable_2 ) ) ; if ( func_35 ( variable_2 , variable_5 , variable_8 , variable_9 , variable_12 , variable_13 ) == 0 ) variable_6 = 0 ; variable_7 -= 7 ; if ( variable_7 < 0 ) variable_8 = func_36 ( variable_2 ) ; static inline uint32_t func_37 ( struct variable_1 * variable_2 ) return func_38 ( func_39 ( variable_2 ) ) ; variable_9 = func_40 ( variable_2 ) ; static inline uint32_t func_41 ( struct variable_1 * variable_2 ) return func_42 ( func_43 ( variable_2 ) ) ; variable_10 = func_44 ( variable_2 ) ; static inline uint32_t func_45 ( struct variable_1 * variable_2 ) return func_46 ( func_47 ( variable_2 ) ) ; variable_11 = func_48 ( variable_2 ) ; static inline uint32_t func_49 ( struct variable_1 * variable_2 ) return func_50 ( func_51 ( variable_2 ) ) ; variable_12 = func_52 ( variable_2 ) ; static inline uint32_t func_53 ( struct variable_1 * variable_2 ) return func_54 ( func_55 ( variable_2 ) ) ; variable_13 = func_56 ( variable_2 ) ; static inline uint32_t func_57 ( struct variable_1 * variable_2 ) return func_58 ( func_59 ( variable_2 ) ) ; if ( func_60 ( variable_2 , variable_8 , variable_9 , variable_10 , variable_11 , variable_12 , variable_13 ) == 0 ) static inline int func_61 ( struct variable_1 int variable_22 , int variable_23 , int variable_24 , int variable_25 , int variable_26 , int variable_27 ) variable_28 * variable_29 = func_62 ( variable_2 -> variable_30 . variable_31 ) ; if ( ! func_63 ( variable_29 , " vmsvga_copy_rect / src " , variable_22 , variable_23 , variable_26 , variable_27 ) ) static inline bool func_64 ( variable_28 const char int variable_8 , int variable_9 , int variable_26 , int variable_27 ) if ( variable_8 < 0 ) return false ; if ( variable_8 > variable_32 ) return false ; if ( variable_26 < 0 ) return false ; if ( variable_26 > variable_32 ) return false ; if ( variable_8 + variable_26 > func_65 ( variable_29 ) ) return false ; if ( variable_9 < 0 ) return false ; if ( variable_9 > variable_33 ) return false ; if ( variable_27 < 0 ) return false ; if ( variable_27 > variable_33 ) return false ; if ( variable_9 + variable_27 > func_66 ( variable_29 ) ) return false ; return true ; return - 1 ; if ( ! func_67 ( variable_29 , " vmsvga_copy_rect / dst " , variable_24 , variable_25 , variable_26 , variable_27 ) ) static inline bool func_68 ( variable_28 const char int variable_8 , int variable_9 , int variable_26 , int variable_27 ) if ( variable_8 < 0 ) return false ; if ( variable_8 > variable_32 ) return false ; if ( variable_26 < 0 ) return false ; if ( variable_26 > variable_32 ) return false ; if ( variable_8 + variable_26 > func_69 ( variable_29 ) ) return false ; if ( variable_9 < 0 ) return false ; if ( variable_9 > variable_33 ) return false ; if ( variable_27 < 0 ) return false ; if ( variable_27 > variable_33 ) return false ; if ( variable_9 + variable_27 > func_70 ( variable_29 ) ) return false ; return true ; return - 1 ; return 0 ; variable_6 = 0 ; variable_7 -= 8 ; if ( variable_7 < 0 ) variable_14 . variable_34 = func_71 ( variable_2 ) ; static inline uint32_t func_72 ( struct variable_1 * variable_2 ) return func_73 ( func_74 ( variable_2 ) ) ; variable_14 . variable_35 = func_75 ( variable_2 ) ; static inline uint32_t func_76 ( struct variable_1 * variable_2 ) return func_77 ( func_78 ( variable_2 ) ) ; variable_14 . variable_36 = func_79 ( variable_2 ) ; static inline uint32_t func_80 ( struct variable_1 * variable_2 ) return func_81 ( func_82 ( variable_2 ) ) ; variable_14 . variable_12 = variable_8 = func_83 ( variable_2 ) ; static inline uint32_t func_84 ( struct variable_1 * variable_2 ) return func_85 ( func_86 ( variable_2 ) ) ; variable_14 . variable_13 = variable_9 = func_87 ( variable_2 ) ; static inline uint32_t func_88 ( struct variable_1 * variable_2 ) return func_89 ( func_90 ( variable_2 ) ) ; variable_14 . variable_37 = func_91 ( variable_2 ) ; static inline uint32_t func_92 ( struct variable_1 * variable_2 ) return func_93 ( func_94 ( variable_2 ) ) ; variable_6 = func_95 ( variable_8 , variable_9 ) + func_96 ( variable_8 , variable_9 , variable_14 . variable_37 ) ; if ( func_97 ( variable_8 , variable_9 ) > sizeof variable_14 . variable_38 || func_98 ( variable_8 , variable_9 , variable_14 . variable_37 ) > sizeof variable_14 . variable_39 ) variable_7 -= variable_6 ; if ( variable_7 < 0 ) for ( variable_6 = 0 ; variable_6 < func_99 ( variable_8 , variable_9 ) ; variable_6 ++ ) variable_14 . variable_38 [ variable_6 ] = func_100 ( variable_2 ) ; static inline uint32_t func_101 ( struct variable_1 * variable_2 ) uint32_t variable_4 = variable_2 -> variable_21 [ func_102 ( variable_18 ) >> 2 ] ; return variable_4 ; for ( variable_6 = 0 ; variable_6 < func_103 ( variable_8 , variable_9 , variable_14 . variable_37 ) ; variable_6 ++ ) variable_7 -= 6 ; if ( variable_7 < 0 ) variable_8 = func_104 ( variable_2 ) ; static inline uint32_t func_105 ( struct variable_1 * variable_2 ) return func_106 ( func_107 ( variable_2 ) ) ; variable_9 = func_108 ( variable_2 ) ; static inline uint32_t func_109 ( struct variable_1 * variable_2 ) return func_110 ( func_111 ( variable_2 ) ) ; variable_6 = variable_8 * variable_9 ; variable_6 = 6 ; variable_6 = 7 ; variable_7 -= 4 ; if ( variable_7 < 0 ) variable_6 = 7 + ( func_112 ( variable_2 ) >> 2 ) ; static inline uint32_t func_113 ( struct variable_1 * variable_2 ) return func_114 ( func_115 ( variable_2 ) ) ; variable_6 = 12 ; variable_6 = 0 ; variable_7 -= variable_6 ; if ( variable_7 < 0 ) while ( variable_6 -- ) static inline int func_116 ( struct variable_1 uint32_t variable_40 , int variable_8 , int variable_9 , int variable_26 , int variable_27 ) variable_28 * variable_29 = func_117 ( variable_2 -> variable_30 . variable_31 ) ; int variable_41 = func_118 ( variable_29 ) ; int variable_12 = func_119 ( variable_29 ) * variable_26 ; int variable_42 = variable_27 ; int variable_43 ; variable_44 * variable_45 ; variable_44 * variable_46 ; variable_44 * variable_47 ; uint8_t variable_48 [ 4 ] ; if ( ! func_120 ( variable_29 , variable_49 , variable_8 , variable_9 , variable_26 , variable_27 ) ) static inline bool func_121 ( variable_28 const char int variable_8 , int variable_9 , int variable_26 , int variable_27 ) if ( variable_8 < 0 ) return false ; if ( variable_8 > variable_32 ) return false ; if ( variable_26 < 0 ) return false ; if ( variable_26 > variable_32 ) return false ; if ( variable_8 + variable_26 > func_122 ( variable_29 ) ) return false ; if ( variable_9 < 0 ) return false ; if ( variable_9 > variable_33 ) return false ; if ( variable_27 < 0 ) return false ; if ( variable_27 > variable_33 ) return false ; if ( variable_9 + variable_27 > func_123 ( variable_29 ) ) return false ; return true ; variable_48 [ 0 ] = variable_40 ; variable_48 [ 1 ] = variable_40 >> 8 ; variable_48 [ 2 ] = variable_40 >> 16 ; variable_48 [ 3 ] = variable_40 >> 24 ; variable_45 = variable_2 -> variable_30 . variable_50 + func_124 ( variable_29 ) * variable_8 + variable_41 * variable_9 ; if ( variable_42 -- ) variable_46 = variable_45 ; variable_47 = variable_48 ; for ( variable_43 = variable_12 ; variable_43 > 0 ; variable_43 -- ) * ( variable_46 ++ ) = * ( variable_47 ++ ) ; if ( variable_47 - variable_48 == func_125 ( variable_29 ) ) variable_47 = variable_48 ; variable_46 = variable_45 ; for ( ; variable_42 > 0 ; variable_42 -- ) variable_46 += variable_41 ; memcpy ( variable_46 , variable_45 , variable_12 ) ;
