 void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;
 variable_0 * func_0 ( ) char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_1 != 0 ) variable_3 = ( ( int ) ( strlen ( variable_1 ) ) ) ; variable_4 = ( ( char * ) ( malloc ( variable_3 + 1 ) ) ) ; memset ( variable_4 , 0 , variable_3 + 1 ) ; memcpy ( variable_4 , variable_1 , variable_3 ) ; func_3 ( 1 , variable_4 ) ; void func_4 ( int variable_5 , . . . ) char * variable_6 = 0 ; char * variable_7 = " aba " ; int variable_8 = 0 ; char * variable_9 = 0 ; if ( variable_5 > 0 ) variable_9 = ( va_arg ( variable_10 , char * ) ) variable_11 = ( ( char * ) variable_9 ) ; for ( variable_12 = 0 ; ( ( int ) variable_12 ) <= ( ( int ) ( strlen ( variable_11 ) - strlen ( variable_7 ) ) ) ; ++ variable_12 ) for ( variable_13 = 0 ; variable_13 < strlen ( variable_7 ) ; ++ variable_13 ) if ( variable_11 [ variable_12 + variable_13 ] != variable_7 [ variable_13 ] ) variable_8 = 0 ; variable_8 = 1 ; if ( variable_8 == 1 && variable_13 == strlen ( variable_7 ) ) variable_6 = & variable_11 [ variable_12 ] ; func_5 ( " String length is % i \n " , strlen ( variable_6 ) ) ;
