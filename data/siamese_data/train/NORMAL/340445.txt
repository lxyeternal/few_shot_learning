 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; fclose ( variable_3 ) ; func_1 ( variable_0 , variable_0 ) ;
 void func_0 ( void ( * variable_0 ) ( struct commodiously_telesteria * ) ) struct commodiously_telesteria variable_1 = { 0 } ; if ( variable_1 . variable_2 != 0 ) func_1 ( 1 , variable_1 ) ; void func_2 ( int variable_3 , . . . ) struct commodiously_telesteria variable_4 = { 0 } ; if ( variable_3 > 0 ) variable_4 = ( va_arg ( variable_5 , struct variable_6 ) ) variable_7 = ( ( char * ) variable_4 . variable_2 ) ; variable_8 = malloc ( sizeof ( struct variable_9 ) ) ; if ( variable_8 ) variable_8 -> variable_10 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; variable_8 -> variable_11 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; variable_8 -> variable_12 = malloc ( sizeof ( char ) * ( strlen ( variable_7 ) + 1 ) ) ; if ( variable_8 -> variable_10 ) if ( ( sscanf ( variable_7 , " %s %s %s " , variable_8 -> variable_11 , variable_8 -> variable_12 , variable_8 -> variable_10 ) == 3 ) && ( strlen ( variable_8 -> variable_10 ) != 0 ) && ( strlen ( variable_8 -> variable_11 ) != 0 ) && ( strlen ( variable_8 -> variable_12 ) != 0 ) ) func_3 ( variable_13 , variable_14 , " stonesoupData -> data " , variable_8 -> variable_10 , " INITIAL - STATE " ) ; func_4 ( variable_13 , variable_14 , " stonesoupData -> file1 " , variable_8 -> variable_11 , " INITIAL - STATE " ) ; func_5 ( variable_13 , variable_14 , " stonesoupData -> file2 " , variable_8 -> variable_12 , " INITIAL - STATE " ) ; if ( variable_8 -> variable_10 [ 0 ] >= '  A ' && variable_8 -> variable_10 [ 0 ] <= '  Z ' ) free ( variable_8 -> variable_10 ) ; free ( variable_8 ) ;
