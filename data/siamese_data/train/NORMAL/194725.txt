 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( char ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;
 static int func_0 ( variable_0 * variable_1 , int variable_2 , int const uint8_t * variable_3 , int variable_4 ) int variable_5 , variable_6 ; int variable_7 , variable_8 ; const uint8_t * variable_9 = variable_3 + variable_4 ; uint8_t variable_10 [ 768 ] , variable_11 [ 3 ] ; int variable_12 ; int variable_13 , variable_14 , variable_15 ; int variable_16 , variable_17 , variable_18 ; if ( variable_4 < 2 ) variable_5 = func_1 ( variable_1 -> variable_5 - variable_2 * variable_1 -> variable_19 , variable_1 -> variable_19 ) ; variable_6 = func_2 ( variable_1 -> variable_6 - variable_20 * variable_1 -> variable_21 , variable_1 -> variable_21 ) ; variable_22 = * variable_3 ++ ; variable_12 = variable_22 >> 5 ; if ( variable_12 == 0 ) int variable_8 ; if ( variable_12 == 1 ) if ( variable_12 != 2 ) memcpy ( variable_11 , variable_3 , 3 ) ; variable_3 += 3 ; variable_23 = * variable_3 ++ + 1 ; memcpy ( variable_10 , variable_3 , variable_23 * 3 ) ; variable_3 += variable_23 * 3 ; if ( variable_12 != 2 ) for ( variable_7 = 0 ; variable_7 < variable_23 ; variable_7 ++ ) if ( ! memcmp ( variable_10 + variable_7 * 3 , variable_11 , 3 ) ) if ( variable_9 - variable_3 < 2 ) variable_24 = ( variable_3 [ 0 ] << 8 ) | variable_3 [ 1 ] ; variable_3 += 2 ; if ( variable_9 - variable_3 < variable_24 ) variable_25 = func_3 ( variable_1 -> variable_26 , & variable_27 , variable_3 , variable_24 ) ; if ( variable_25 ) variable_3 += variable_24 ; if ( variable_12 == 2 ) variable_13 = * variable_3 ++ + 1 ; variable_14 = 0 ; variable_15 = func_4 ( variable_5 , 16 ) >> 4 ; variable_16 = 0 ; for ( variable_7 = 0 ; variable_7 < ( func_5 ( variable_6 , 16 ) >> 4 ) ; variable_7 ++ ) for ( variable_8 = 0 ; variable_8 < ( func_6 ( variable_5 , 16 ) >> 4 ) ; variable_8 ++ ) if ( ! variable_16 ) variable_17 = * variable_3 ++ ; variable_16 = 8 ; variable_18 = variable_17 & 1 ; variable_16 -- ; variable_17 >> = 1 ; variable_14 += variable_18 ; if ( variable_14 > variable_13 ) variable_1 -> variable_28 [ variable_8 + variable_7 * variable_15 ] = variable_18 ; memset ( variable_1 -> variable_29 , 0 , variable_1 -> variable_30 * variable_6 ) ; func_7 ( & variable_1 -> variable_31 , variable_5 , variable_6 , variable_3 , variable_9 - variable_3 , variable_1 -> variable_29 , variable_1 -> variable_30 , variable_1 -> variable_28 , variable_15 , variable_13 , 0 ) ; func_8 ( variable_1 -> variable_26 , variable_27 , variable_32 , variable_1 -> variable_33 , variable_1 -> variable_29 , variable_1 -> variable_30 , variable_5 , variable_6 , variable_10 , variable_23 , variable_34 ) ;
