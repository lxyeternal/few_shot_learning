 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; variable_2 * variable_3 = new func_1 ( variable_0 ) ; variable_2 :: func_2 ( char * variable_4 ) variable_0 = variable_4 ; WSADATA variable_5 ; int variable_6 = 0 ; int variable_7 ; struct sockaddr_in variable_8 ; char * variable_9 ; SOCKET variable_10 = variable_11 ; SOCKET variable_12 = variable_11 ; size_t variable_13 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_5 ) != variable_14 ) break ; variable_6 = 1 ; variable_10 = func_5 ( variable_15 , variable_16 , variable_17 ) ; if ( variable_10 == variable_11 ) break ; memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_18 = variable_15 ; variable_8 . variable_19 . variable_20 = variable_21 ; variable_8 . variable_22 = func_6 ( variable_23 ) ; if ( bind ( variable_10 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_24 ) break ; if ( func_7 ( variable_10 , variable_25 ) == variable_24 ) break ; variable_12 = func_8 ( variable_10 , NULL , NULL ) ; if ( variable_12 == variable_24 ) break ; variable_7 = recv ( variable_12 , ( char * ) ( variable_0 + variable_13 ) , sizeof ( char ) * ( 100 - variable_13 - 1 ) , 0 ) ; if ( variable_7 == variable_24 || variable_7 == 0 ) break ; variable_0 [ variable_13 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_9 = strchr ( variable_0 , ' \r ' ) ; if ( variable_9 ) * variable_9 = ' \0 ' ; variable_9 = strchr ( variable_0 , ' \n ' ) ; if ( variable_9 ) * variable_9 = ' \0 ' ; while ( 0 ) if ( variable_10 != variable_11 ) func_9 ( variable_10 ) ; if ( variable_12 != variable_11 ) func_10 ( variable_12 ) ; if ( variable_6 ) func_11 ( ) ; delete variable_3 variable_2 :: ~ func_12 ( ) if ( sscanf ( variable_0 , " %d " , & variable_26 ) == 1 )
