 void func_0 ( ) if ( variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; if ( fgets ( variable_1 , 100 , variable_2 ) == NULL ) variable_1 [ 0 ] = ' \0 ' ; variable_3 = strlen ( variable_1 ) ; if ( variable_3 > 0 ) variable_1 [ variable_3 - 1 ] = ' \0 ' ; if ( func_1 ( variable_4 , variable_5 , variable_1 , variable_6 , variable_7 , & variable_8 ) != 0 ) variable_1 = realloc ( variable_1 , 200 * sizeof ( char ) ) ; func_2 ( variable_1 , 200 * sizeof ( char ) ) ; strcpy ( variable_1 , " Nothing to see here " ) ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_9 ) if ( variable_9 != NULL ) printf ( " %s \n " , variable_9 ) ; free ( variable_1 ) ;
 static int func_0 ( variable_1 void * variable_2 , int * variable_3 , variable_4 * variable_5 ) TiffContext * const variable_6 = variable_7 -> AVFrame * const variable_8 = ThreadFrame variable_9 = . variable_10 = variable_2 unsigned variable_11 ; int variable_12 , variable_13 , variable_14 , variable_15 ; int variable_16 , variable_17 , variable_18 , variable_19 ; unsigned variable_20 , variable_21 ; variable_22 * variable_23 ; if ( variable_13 = func_1 ( & variable_6 -> variable_24 , & variable_12 , & variable_11 ) ) if ( variable_11 >= variable_25 - 14 || variable_5 -> variable_26 < variable_11 + 14 ) variable_6 -> variable_12 = variable_12 ; variable_6 -> variable_27 = variable_6 -> variable_28 = 1 ; variable_6 -> variable_29 = variable_30 ; variable_6 -> variable_31 = variable_32 ; variable_6 -> variable_33 = 0 ; variable_6 -> variable_34 = variable_6 -> variable_35 = 0 ; variable_18 = func_2 ( & variable_6 -> variable_24 , variable_12 ) ; if ( func_3 ( & variable_6 -> variable_24 ) < variable_18 * 12 ) for ( variable_16 = 0 ; variable_16 < variable_18 ; variable_16 ++ ) if ( ( variable_13 = func_4 ( variable_6 , variable_8 ) ) < 0 ) static int func_5 ( variable_36 * variable_6 , variable_37 * variable_9 ) unsigned variable_38 , variable_39 , variable_40 , variable_11 , variable_41 = 0 , variable_42 = 0 ; int variable_16 , variable_43 ; int variable_13 ; variable_44 * variable_45 ; variable_13 = func_6 ( & variable_6 -> variable_24 , variable_6 -> variable_12 , & variable_38 , & variable_39 , & variable_40 , & variable_43 ) ; if ( variable_13 < 0 ) variable_11 = func_7 ( & variable_6 -> variable_24 ) ; if ( variable_40 == 1 ) switch ( variable_39 ) variable_41 = func_8 ( & variable_6 -> variable_24 , variable_39 , variable_6 -> variable_12 ) ; variable_41 = func_9 ( & variable_6 -> variable_24 , variable_46 , variable_6 -> variable_12 ) ; if ( variable_40 <= 4 ) variable_41 = variable_25 ; switch ( variable_38 ) variable_6 -> variable_47 = variable_41 ; variable_6 -> variable_48 = variable_41 ; if ( variable_40 > 4 variable_49 ) return variable_50 ; variable_6 -> variable_27 = variable_40 ; if ( variable_40 == 1 ) variable_6 -> variable_28 = variable_41 ; switch ( variable_39 ) variable_6 -> variable_28 = 0 ; if ( func_10 ( & variable_6 -> variable_24 ) < variable_51 [ variable_39 ] * variable_40 ) return variable_50 ; for ( variable_16 = 0 ; variable_16 < variable_40 ; variable_16 ++ ) variable_6 -> variable_28 += func_11 ( & variable_6 -> variable_24 , variable_39 , variable_6 -> variable_12 ) ; variable_6 -> variable_28 = - 1 ; if ( variable_40 != 1 ) return variable_50 ; if ( variable_41 > 4 variable_49 ) return variable_50 ; if ( variable_6 -> variable_27 == 1 ) variable_6 -> variable_28 *= variable_41 ; variable_6 -> variable_27 = variable_41 ; variable_6 -> variable_31 = variable_41 ; variable_6 -> variable_52 = 0 ; switch ( variable_6 -> variable_31 ) variable_6 -> variable_53 = 0 ; return variable_54 ; return variable_50 ; if ( ! variable_41 || ( variable_39 == variable_46 && variable_41 == variable_25 ) ) variable_41 = variable_6 -> variable_48 ; variable_6 -> variable_55 = func_12 ( variable_41 , variable_6 -> variable_48 ) ; if ( variable_40 == 1 ) variable_6 -> variable_35 = variable_11 ; variable_6 -> variable_56 = variable_40 ; if ( variable_6 -> variable_56 == 1 ) variable_6 -> variable_55 = variable_6 -> variable_48 ; variable_6 -> variable_57 = variable_39 ; if ( variable_40 == 1 ) variable_6 -> variable_34 = variable_11 ; variable_6 -> variable_56 = variable_40 ; variable_6 -> variable_58 = variable_39 ; return variable_54 ; variable_6 -> variable_52 = variable_41 ; switch ( variable_41 ) variable_6 -> variable_29 = variable_41 ; return variable_54 ; return variable_50 ; if ( variable_41 < 1 || variable_41 > 2 ) variable_41 = 1 ; variable_6 -> variable_33 = variable_41 - 1 ; GetByteContext variable_59 [ 3 ] ; variable_11 = variable_51 [ variable_39 ] ; if ( variable_40 / 3 > 256 || func_13 ( & variable_6 -> variable_24 ) < variable_40 / 3 * variable_11 * 3 ) return variable_50 ; variable_59 [ 0 ] = variable_59 [ 1 ] = variable_59 [ 2 ] = variable_6 -> variable_24 ; variable_11 = ( variable_51 [ variable_39 ] - 1 ) << 3 ; for ( variable_16 = 0 ; variable_16 < variable_40 / 3 ; variable_16 ++ ) uint32_t variable_8 = 0 variable_60 ; variable_8 |= ( func_14 ( & variable_59 [ 0 ] , variable_39 , variable_6 -> variable_12 ) >> variable_11 ) << 16 ; variable_8 |= ( func_15 ( & variable_59 [ 1 ] , variable_39 , variable_6 -> variable_12 ) >> variable_11 ) << 8 ; variable_8 |= func_16 ( & variable_59 [ 2 ] , variable_39 , variable_6 -> variable_12 ) >> variable_11 ; variable_6 -> variable_61 [ variable_16 ] = variable_8 ; variable_6 -> variable_62 = 1 ; variable_6 -> variable_63 = variable_41 == 2 ; if ( variable_40 != 2 ) return variable_50 ; for ( variable_16 = 0 ; variable_16 < variable_40 ; variable_16 ++ ) variable_6 -> variable_64 [ variable_16 ] = func_17 ( & variable_6 -> variable_24 , variable_39 , variable_6 -> variable_12 ) ; if ( variable_6 -> variable_31 == variable_65 ) variable_6 -> variable_53 = variable_41 ; if ( variable_6 -> variable_31 == variable_66 ) variable_6 -> variable_53 = variable_41 ; variable_6 -> variable_67 = func_18 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; if ( variable_6 -> variable_67 > variable_40 / 4 - 1 ) variable_6 -> variable_67 = variable_40 / 4 - 1 ; if ( func_19 ( & variable_6 -> variable_24 ) < variable_6 -> variable_67 * sizeof ( variable_68 ) * 4 ) variable_6 -> variable_67 = 0 ; return - 1 ; variable_6 -> variable_69 = func_20 ( variable_6 -> variable_67 , sizeof ( variable_70 ) ) ; if ( ! variable_6 -> variable_69 ) variable_6 -> variable_67 = 0 ; for ( variable_16 = 0 ; variable_16 < variable_6 -> variable_67 ; variable_16 ++ ) variable_6 -> variable_69 [ variable_16 ] . variable_71 = func_21 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; variable_6 -> variable_69 [ variable_16 ] . variable_39 = func_22 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; variable_6 -> variable_69 [ variable_16 ] . variable_40 = func_23 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; if ( ! variable_6 -> variable_69 [ variable_16 ] . variable_39 ) variable_6 -> variable_69 [ variable_16 ] . variable_72 = func_24 ( variable_6 -> variable_69 [ variable_16 ] . variable_71 , func_25 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ) ; static char * func_26 ( int variable_71 , int variable_72 ) char * variable_73 ; if ( variable_72 == variable_74 ) return func_27 ( " undefined " ) ; if ( variable_72 == variable_75 ) return func_28 ( " User - Defined " ) ; switch ( variable_71 ) variable_73 = func_29 ( func_30 ( variable_76 , func_31 ( variable_76 ) , variable_72 ) ) ; static const char * func_32 ( const TiffGeoTagKeyName * variable_77 , int variable_78 , int variable_79 ) variable_80 * variable_81 = bsearch ( & variable_79 , variable_77 , variable_78 , sizeof ( variable_77 [ 0 ] ) , variable_82 ) ; if ( variable_81 ) return variable_81 -> variable_83 ; return NULL ; if ( variable_73 ) return variable_73 ; variable_73 = func_33 ( func_34 ( variable_84 , func_35 ( variable_84 ) , variable_72 ) ) ; static const char * func_36 ( const TiffGeoTagKeyName * variable_77 , int variable_78 , int variable_79 ) variable_80 * variable_81 = bsearch ( & variable_79 , variable_77 , variable_78 , sizeof ( variable_77 [ 0 ] ) , variable_82 ) ; if ( variable_81 ) return variable_81 -> variable_83 ; return NULL ; if ( variable_73 ) return variable_73 ; variable_73 = func_37 ( 14 ) ; if ( variable_73 ) snprintf ( variable_73 , 14 , " Unknown - %d " , variable_72 ) ; return variable_73 ; variable_6 -> variable_69 [ variable_16 ] . variable_85 = func_38 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; if ( variable_40 >= variable_86 / sizeof ( variable_87 ) ) return variable_50 ; if ( func_39 ( & variable_6 -> variable_24 ) < variable_40 * sizeof ( variable_87 ) ) return variable_50 ; variable_45 = func_40 ( variable_40 , sizeof ( variable_44 ) ) ; if ( ! variable_45 ) for ( variable_16 = 0 ; variable_16 < variable_40 ; variable_16 ++ ) variable_45 [ variable_16 ] = func_41 ( & variable_6 -> variable_24 , variable_6 -> variable_12 ) ; for ( variable_16 = 0 ; variable_16 < variable_6 -> variable_67 ; variable_16 ++ ) if ( variable_6 -> variable_69 [ variable_16 ] . variable_39 == variable_88 ) if ( variable_6 -> variable_69 [ variable_16 ] . variable_40 == 0 || variable_6 -> variable_69 [ variable_16 ] . variable_85 + variable_6 -> variable_69 [ variable_16 ] . variable_40 > variable_40 ) char * variable_73 = func_42 ( & variable_45 [ variable_6 -> variable_69 [ variable_16 ] . variable_85 ] , variable_6 -> variable_69 [ variable_16 ] . variable_40 , " , " ) ; static char * func_43 ( variable_44 * variable_45 , int variable_40 , const char * variable_89 ) int variable_16 ; char * variable_73 , * variable_90 ; uint64_t variable_91 ; if ( ! variable_89 ) variable_89 = " , " ; variable_91 = 24L L + strlen ( variable_89 ) if ( variable_40 >= ( variable_86 - 1 ) / variable_91 ) return NULL ; variable_73 = func_44 ( variable_91 * variable_40 + 1 ) ; if ( ! variable_73 ) return NULL ; variable_90 = variable_73 ; variable_73 [ 0 ] = ' \0 ' ; for ( variable_16 = 0 ; variable_16 < variable_40 ; variable_16 ++ ) unsigned variable_92 = snprintf ( variable_73 , variable_91 , " % . 15g %s " , variable_45 [ variable_16 ] , variable_89 ) ; if ( variable_92 >= variable_91 ) return NULL ; variable_73 += variable_92 ; variable_90 [ strlen ( variable_90 ) - strlen ( variable_89 ) ] = ' \0 ' ; return variable_90 ; if ( ! variable_73 ) return func_45 ( variable_93 ) ; variable_6 -> variable_69 [ variable_16 ] . variable_72 = variable_73 ; for ( variable_16 = 0 ; variable_16 < variable_6 -> variable_67 ; variable_16 ++ ) if ( variable_6 -> variable_69 [ variable_16 ] . variable_39 == variable_94 ) if ( variable_6 -> variable_69 [ variable_16 ] . variable_40 == 0 || variable_6 -> variable_69 [ variable_16 ] . variable_85 + variable_6 -> variable_69 [ variable_16 ] . variable_40 > variable_40 ) char * variable_73 ; if ( func_46 ( & variable_6 -> variable_24 ) < variable_6 -> variable_69 [ variable_16 ] . variable_40 ) return variable_50 ; variable_73 = func_47 ( variable_6 -> variable_69 [ variable_16 ] . variable_40 ) ; if ( ! variable_73 ) return func_48 ( variable_93 ) ; variable_73 [ variable_6 -> variable_69 [ variable_16 ] . variable_40 - 1 ] = ' \0 ' ; variable_6 -> variable_69 [ variable_16 ] . variable_72 = variable_73 ; if ( variable_6 -> variable_7 -> variable_95 & variable_96 ) return variable_50 ; if ( variable_6 -> variable_28 > 64U ) return variable_50 ; return 0 ; for ( variable_16 = 0 ; variable_16 < variable_6 -> variable_67 ; variable_16 ++ ) const char * variable_97 = func_49 ( variable_6 -> variable_69 [ variable_16 ] . variable_71 ) ; static const char * func_50 ( int variable_71 ) return NULL ; if ( ! variable_97 ) if ( func_51 ( variable_6 -> variable_69 [ variable_16 ] . variable_71 ) != variable_6 -> variable_69 [ variable_16 ] . variable_39 ) static int func_52 ( int variable_71 ) return variable_50 ; variable_13 = func_53 ( func_54 ( variable_8 ) , variable_97 , variable_6 -> variable_69 [ variable_16 ] . variable_72 , 0 ) ; if ( variable_13 < 0 ) if ( ! variable_6 -> variable_35 && ! variable_6 -> variable_98 ) if ( ( variable_13 = func_55 ( variable_6 , & variable_9 ) ) < 0 ) static int func_56 ( variable_36 * variable_6 , variable_99 * variable_9 ) int variable_13 ; if ( variable_6 -> variable_28 >= 100 || variable_6 -> variable_27 >= 10 ) return variable_50 ; switch ( variable_6 -> variable_63 * 1000 + variable_6 -> variable_28 * 10 + variable_6 -> variable_27 ) if ( ! variable_6 -> variable_62 ) variable_6 -> variable_7 -> variable_100 = variable_101 ; variable_6 -> variable_7 -> variable_100 = variable_102 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_62 ? variable_102 : variable_103 ; if ( variable_6 -> variable_29 == variable_104 ) if ( variable_6 -> variable_64 [ 0 ] == 1 && variable_6 -> variable_64 [ 1 ] == 1 ) variable_6 -> variable_7 -> variable_100 = variable_105 ; if ( variable_6 -> variable_64 [ 0 ] == 2 && variable_6 -> variable_64 [ 1 ] == 1 ) variable_6 -> variable_7 -> variable_100 = variable_106 ; if ( variable_6 -> variable_64 [ 0 ] == 4 && variable_6 -> variable_64 [ 1 ] == 1 ) variable_6 -> variable_7 -> variable_100 = variable_107 ; if ( variable_6 -> variable_64 [ 0 ] == 1 && variable_6 -> variable_64 [ 1 ] == 2 ) variable_6 -> variable_7 -> variable_100 = variable_108 ; if ( variable_6 -> variable_64 [ 0 ] == 2 && variable_6 -> variable_64 [ 1 ] == 2 ) variable_6 -> variable_7 -> variable_100 = variable_109 ; if ( variable_6 -> variable_64 [ 0 ] == 4 && variable_6 -> variable_64 [ 1 ] == 4 ) variable_6 -> variable_7 -> variable_100 = variable_110 ; return variable_54 ; variable_6 -> variable_7 -> variable_100 = variable_111 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_112 : variable_113 ; variable_6 -> variable_7 -> variable_100 = variable_114 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_115 : variable_116 ; variable_6 -> variable_7 -> variable_100 = variable_117 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_118 : variable_119 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_120 : variable_121 ; variable_6 -> variable_7 -> variable_100 = variable_122 ; variable_6 -> variable_7 -> variable_100 = variable_123 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_124 : variable_125 ; variable_6 -> variable_7 -> variable_100 = variable_6 -> variable_12 ? variable_126 : variable_127 ; return variable_50 ; if ( variable_6 -> variable_29 == variable_104 ) const AVPixFmtDescriptor * variable_128 = func_57 ( variable_6 -> variable_7 -> variable_100 ) ; if ( ( variable_128 -> variable_129 & variable_130 ) || ! ( variable_128 -> variable_129 & variable_131 ) || variable_128 -> variable_132 < 3 ) return variable_50 ; if ( variable_6 -> variable_47 != variable_6 -> variable_7 -> variable_47 || variable_6 -> variable_48 != variable_6 -> variable_7 -> variable_48 ) variable_13 = func_58 ( variable_6 -> variable_7 , variable_6 -> variable_47 , variable_6 -> variable_48 ) ; if ( variable_13 < 0 ) return variable_13 ; if ( ( variable_13 = func_59 ( variable_6 -> variable_7 , variable_9 , 0 ) ) < 0 ) return variable_13 ; return 0 ; if ( variable_6 -> variable_56 == 1 && ! variable_6 -> variable_133 ) variable_6 -> variable_133 = variable_5 -> variable_26 - variable_6 -> variable_98 ; if ( variable_6 -> variable_34 ) if ( variable_6 -> variable_34 >= ( unsigned ) variable_5 -> variable_26 ) if ( variable_6 -> variable_35 ) if ( variable_6 -> variable_35 >= ( unsigned ) variable_5 -> variable_26 ) if ( variable_6 -> variable_55 <= 0 ) variable_15 = variable_6 -> variable_63 ? variable_6 -> variable_27 : 1 ; for ( variable_14 = 0 ; variable_14 < variable_15 ; variable_14 ++ ) variable_19 = variable_8 -> variable_134 [ variable_14 ] ; variable_23 = variable_8 -> variable_2 [ variable_14 ] ; for ( variable_16 = 0 ; variable_16 < variable_6 -> variable_48 ; variable_16 += variable_6 -> variable_55 ) if ( variable_6 -> variable_34 ) variable_21 = func_60 ( & variable_135 , variable_6 -> variable_58 , variable_12 ) ; variable_21 = variable_6 -> variable_133 ; if ( variable_6 -> variable_35 ) variable_20 = func_61 ( & variable_136 , variable_6 -> variable_57 , variable_12 ) ; variable_20 = variable_6 -> variable_98 ; if ( variable_20 > variable_5 -> variable_26 || variable_21 > variable_5 -> variable_26 - variable_20 ) if ( ( variable_13 = func_62 ( variable_6 , variable_8 , variable_23 , variable_19 , variable_5 -> variable_2 + variable_20 , variable_21 , variable_16 , func_63 ( variable_6 -> variable_55 , variable_6 -> variable_48 - variable_16 ) ) ) < 0 ) if ( variable_7 -> variable_95 & variable_96 ) variable_23 += variable_6 -> variable_55 * variable_19 ; if ( variable_6 -> variable_52 == 2 ) if ( variable_6 -> variable_29 == variable_104 ) static int func_64 ( variable_36 * variable_6 , variable_37 * variable_8 , variable_22 * variable_23 , int const uint8_t * variable_137 , int variable_26 , int variable_138 , int variable_139 ) PutByteContext variable_140 ; int variable_141 , variable_142 , variable_143 , variable_144 , variable_13 ; const uint8_t * variable_145 = variable_137 ; int variable_47 = ( ( variable_6 -> variable_47 * variable_6 -> variable_28 ) + 7 ) >> 3 ; const AVPixFmtDescriptor * variable_128 = func_65 ( variable_8 -> variable_146 ) ; int variable_147 = ! ( variable_128 -> variable_129 & variable_130 ) && ( variable_128 -> variable_129 & variable_131 ) && variable_128 -> variable_132 >= 3 ; if ( variable_6 -> variable_63 ) variable_47 /= variable_6 -> variable_27 ; if ( variable_26 <= 0 ) if ( variable_147 ) if ( variable_6 -> variable_148 == NULL ) variable_23 = variable_6 -> variable_148 ; variable_19 = 0 ; variable_47 = ( variable_6 -> variable_47 - 1 ) / variable_6 -> variable_64 [ 0 ] + 1 ; variable_47 = variable_47 * variable_6 -> variable_64 [ 0 ] * variable_6 -> variable_64 [ 1 ] + 2 * variable_47 ; if ( variable_6 -> variable_31 == variable_149 || variable_6 -> variable_31 == variable_150 ) if ( variable_6 -> variable_31 == variable_151 ) if ( variable_6 -> variable_31 == variable_152 ) if ( variable_6 -> variable_33 ) if ( ( variable_13 = func_66 ( variable_6 , variable_137 , variable_26 ) ) < 0 ) static int func_67 ( variable_36 * variable_6 , const uint8_t * variable_137 , int variable_26 ) if ( ! variable_6 -> variable_153 ) return func_68 ( variable_93 ) ; return 0 ; variable_145 = variable_137 = variable_6 -> variable_153 ; if ( ( variable_13 = func_69 ( variable_6 -> variable_154 , 8 , variable_137 , variable_26 , variable_155 ) ) < 0 ) for ( variable_142 = 0 ; variable_142 < variable_139 ; variable_142 ++ ) variable_143 = func_70 ( variable_6 -> variable_154 , variable_23 , variable_47 ) ; if ( variable_143 < variable_47 ) if ( variable_147 ) variable_142 += variable_6 -> variable_64 [ 1 ] - 1 ; variable_23 += variable_19 ; if ( variable_6 -> variable_31 == variable_156 || variable_6 -> variable_31 == variable_65 || variable_6 -> variable_31 == variable_66 ) for ( variable_142 = 0 ; variable_142 < variable_139 ; variable_142 ++ ) if ( variable_137 - variable_145 > variable_26 ) if ( func_71 ( & variable_6 -> variable_24 ) == 0 || func_72 ( & variable_140 ) ) switch ( variable_6 -> variable_31 ) if ( variable_145 + variable_26 - variable_137 < variable_47 ) if ( ! variable_6 -> variable_33 ) func_73 ( variable_6 -> variable_28 * ( variable_6 -> variable_7 -> variable_100 == variable_102 ) , variable_23 , 1 , variable_137 , 0 , variable_47 , 0 ) ; int variable_16 ; for ( variable_16 = 0 ; variable_16 < variable_47 ; variable_16 ++ ) variable_23 [ variable_16 ] = variable_157 [ variable_137 [ variable_16 ] ] ; variable_137 += variable_47 ; for ( variable_143 = 0 ; variable_143 < variable_47 ; ) if ( variable_145 + variable_26 - variable_137 < 2 ) variable_144 = variable_6 -> variable_33 ? ( variable_158 ) variable_157 [ * variable_137 ++ ] : ( variable_158 ) * variable_137 ++ ; if ( variable_144 >= 0 ) variable_144 ++ ; if ( variable_143 + variable_144 > variable_47 || variable_145 + variable_26 - variable_137 < variable_144 ) variable_137 += variable_144 ; variable_143 += variable_144 ; if ( variable_144 != - 128 ) variable_144 = ( - variable_144 ) + 1 ; if ( variable_143 + variable_144 > variable_47 ) variable_141 = * variable_137 ++ ; variable_143 += variable_144 ; if ( variable_6 -> variable_33 ) int variable_16 ; for ( variable_16 = 0 ; variable_16 < variable_47 ; variable_16 ++ ) variable_23 [ variable_16 ] = variable_157 [ variable_23 [ variable_16 ] ] ; if ( variable_147 ) variable_142 += variable_6 -> variable_64 [ 1 ] - 1 ; variable_23 += variable_19 ; static void av_always_inline func_74 ( unsigned int variable_28 , variable_22 * int variable_159 , const variable_22 uint8_t variable_141 , int variable_47 , int variable_85 ) switch ( variable_28 ) while ( -- variable_47 >= 0 ) variable_23 [ ( variable_47 + variable_85 ) * 8 + 7 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 6 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 1 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 5 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 2 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 4 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 3 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 3 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 4 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 2 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 5 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 1 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 6 & 0 variable_160 ; variable_23 [ ( variable_47 + variable_85 ) * 8 + 0 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 7 ; while ( -- variable_47 >= 0 ) variable_23 [ ( variable_47 + variable_85 ) * 4 + 3 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) & 0 variable_161 ; variable_23 [ ( variable_47 + variable_85 ) * 4 + 2 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 2 & 0 variable_161 ; variable_23 [ ( variable_47 + variable_85 ) * 4 + 1 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 4 & 0 variable_161 ; variable_23 [ ( variable_47 + variable_85 ) * 4 + 0 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 6 ; while ( -- variable_47 >= 0 ) variable_23 [ ( variable_47 + variable_85 ) * 2 + 1 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) & 0 variable_162 ; variable_23 [ ( variable_47 + variable_85 ) * 2 + 0 ] = ( variable_159 ? variable_137 [ variable_47 ] : variable_141 ) >> 4 ; if ( variable_159 ) memcpy ( variable_23 + variable_85 , variable_137 , variable_47 ) ; memset ( variable_23 + variable_85 , variable_141 , variable_47 ) ;
