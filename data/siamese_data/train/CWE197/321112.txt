 void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = ( short ) atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ; char variable_21 = ( char ) variable_20 ; func_11 ( variable_21 ) ; void func_12 ( char variable_22 ) printf ( " % 02x \n " , variable_22 ) ;
 void func_0 ( void ( * variable_0 ) ( char * * ) ) char * variable_1 = 0 ; if ( variable_1 != 0 ) variable_2 = & variable_1 ; variable_3 = variable_2 + 5 ; variable_4 = ( ( char * ) ( * ( variable_3 - 5 ) ) ) ; variable_5 = malloc ( sizeof ( char ) * ( strlen ( variable_4 ) + 1 ) ) ; if ( variable_5 != NULL && variable_6 != NULL && ( sscanf ( variable_4 , " %s %s " , variable_6 , variable_5 ) == 2 ) && ( strlen ( variable_5 ) != 0 ) && ( strlen ( variable_6 ) != 0 ) ) func_1 ( variable_7 , variable_8 , " stonesoup_str " , variable_5 , " INITIAL - STATE " ) ; if ( func_2 ( variable_5 ) ) int func_3 ( char * variable_9 ) variable_10 = strchr ( variable_9 , ' / ' ) ; if ( variable_10 == 0 ) variable_11 = func_4 ( variable_5 ) ; char * func_5 ( char * variable_9 ) char * variable_12 = malloc ( sizeof ( char ) * ( strlen ( " / opt / stonesoup / workspace / testData / " ) * strlen ( variable_9 ) + 1 ) ) ; if ( variable_12 == NULL ) strcpy ( variable_12 , " / opt / stonesoup / workspace / testData / " ) ; strcat ( variable_12 , variable_9 ) ; return variable_12 ; if ( variable_11 != NULL ) if ( func_6 ( variable_11 ) ) int func_7 ( char * variable_12 ) return ( func_8 ( variable_12 ) == 0 ) ; int func_9 ( char * variable_13 ) if ( func_10 ( variable_13 , & variable_14 ) < 0 ) func_11 ( variable_11 , variable_6 ) ; void func_12 ( char * variable_13 , char * variable_15 ) strcat ( variable_16 , variable_13 ) ; strcat ( variable_16 , " . pid " ) ; if ( ( variable_17 = func_13 ( variable_16 , variable_18 | variable_19 , 0666 ) ) == - 1 ) if ( func_14 ( variable_17 , " q " , sizeof ( char ) ) == - 1 ) if ( func_15 ( variable_17 ) == - 1 ) func_16 ( variable_15 ) ; void func_17 ( char * variable_16 ) variable_20 = fopen ( variable_16 , " r " ) ; if ( variable_20 != NULL ) while ( ( variable_21 = fgetc ( variable_20 ) ) != variable_22 ) func_18 ( " %c " , variable_21 ) ; void func_19 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; vfprintf ( variable_25 , variable_23 , variable_24 ) ; fclose ( variable_20 ) ; variable_26 = fopen ( variable_11 , " rb " ) ; if ( variable_26 != 0 ) fseek ( variable_26 , 0 , 2 ) ; variable_27 = ftell ( variable_26 ) ; rewind ( variable_26 ) ; variable_28 = ( ( char * ) ( malloc ( sizeof ( char ) * ( variable_27 + 1 ) ) ) ) ; if ( variable_28 ) fread ( variable_28 , sizeof ( char ) , variable_27 , variable_26 ) ; variable_28 [ variable_27 ] = ' \0 ' ; func_20 ( variable_28 ) ; void func_21 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; vfprintf ( variable_25 , variable_23 , variable_24 ) ; fclose ( variable_26 ) ; free ( variable_28 ) ; free ( variable_11 ) ; free ( variable_5 ) ;
