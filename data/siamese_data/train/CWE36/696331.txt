 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; char * variable_6 = variable_0 ; char * variable_0 = variable_6 ; variable_7 = func_2 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_3 ( variable_7 ) ;
 static int func_0 ( int variable_0 , struct variable_1 * variable_2 ) char variable_3 [ 16 ] ; sprintf ( variable_3 , " / lib / lib %d . so " , variable_0 ) ; variable_4 . variable_5 = variable_3 ; variable_4 . variable_6 = func_1 ( variable_4 . variable_5 ) ; variable_7 = func_2 ( variable_4 . variable_6 ) ; if ( func_3 ( variable_4 . variable_6 ) ) return variable_7 ; variable_4 . variable_8 = func_4 ( ) ; if ( ! variable_4 . variable_8 ) variable_7 = func_5 ( & variable_4 ) ; if ( variable_7 <= ( unsigned long ) - 4096 ) variable_7 = func_6 ( & variable_4 , variable_2 , variable_0 , NULL ) ; func_7 ( variable_4 . variable_8 ) ; func_8 ( variable_4 . variable_6 ) ; func_9 ( variable_4 . variable_6 ) ; return ( variable_7 ) ;
 const EVP_CIPHER * func_0 ( ) union perula_ecclesiasticus variable_0 ; char * variable_1 ; if ( func_1 ( & variable_2 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) variable_1 = getenv ( " HEROLA_PLACODONT " ) ; if ( variable_1 != 0 ) variable_0 . variable_3 = variable_1 ; func_3 ( 1 , variable_0 ) ; void func_4 ( int variable_4 , . . . ) char variable_5 [ 200 ] = { 0 } ; union perula_ecclesiasticus variable_6 = { 0 } ; if ( variable_4 > 0 ) variable_6 = ( va_arg ( variable_7 , union variable_8 ) ) variable_9 = ( ( char * ) variable_6 . variable_3 ) ; if ( strlen ( variable_9 ) > 0 && variable_9 [ 0 ] == ' - ' ) variable_10 = getenv ( " SS_BUFF " ) ; if ( variable_10 != 0 ) strncpy ( variable_5 , variable_10 , ( sizeof ( variable_5 ) - 1 ) / ( sizeof ( char ) ) ) ; variable_11 = ( ( int ) ( strlen ( variable_5 ) ) ) ; while ( variable_12 < variable_11 )
