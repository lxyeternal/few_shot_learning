 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; char * variable_21 = variable_0 ; char * variable_0 = variable_21 ; variable_22 . func_8 ( ( char * ) variable_0 ) ;
 static void func_0 ( variable_0 * variable_1 , uint32_t variable_2 , uint32_t variable_3 ) uint16_t variable_4 = variable_3 ; switch ( variable_2 ) variable_1 -> variable_5 [ 0 ] &= ~ ( variable_4 & 0 variable_6 ) ; variable_1 -> variable_5 [ 0 ] = ( variable_1 -> variable_5 [ 0 ] & ~ 0 variable_7 ) | ( variable_4 & 0 variable_8 ) ; variable_4 = ( variable_4 & 0 variable_9 ) | ( variable_1 -> variable_5 [ 0 ] & 0 variable_6 ) ; if ( ( variable_4 & 7 ) == 7 ) variable_4 &= ~ 3 ; variable_1 -> variable_5 [ 4 ] &= ~ ( variable_4 & 0 variable_10 ) ; variable_4 &= ~ 0 variable_10 ; variable_4 |= variable_1 -> variable_5 [ 4 ] & 0 variable_10 ; variable_1 -> variable_5 [ 5 ] &= ~ ( variable_4 & 0 variable_11 ) ; variable_4 &= ~ 0 variable_11 ; variable_4 |= variable_1 -> variable_5 [ 5 ] & 0 variable_11 ; func_1 ( variable_1 , 2 , variable_4 ) ; static void func_2 ( variable_0 * variable_1 , uint32_t variable_2 , uint32_t variable_3 ) uint16_t variable_4 = variable_3 ; switch ( variable_2 ) variable_1 -> variable_5 [ 0 ] &= ~ ( variable_4 & 0 variable_6 ) ; variable_1 -> variable_5 [ 0 ] = ( variable_1 -> variable_5 [ 0 ] & ~ 0 variable_7 ) | ( variable_4 & 0 variable_8 ) ; if ( func_3 ( variable_1 ) ) func_4 ( variable_1 ) ; static void func_5 ( variable_0 * variable_1 ) int variable_12 = func_6 ( variable_1 ) - 1 ; int variable_13 = 0 ; variable_1 -> variable_14 = - 1 ; if ( ! func_7 ( variable_1 ) ) variable_1 -> variable_15 = 1 ; if ( func_8 ( variable_1 ) ) static int func_9 ( variable_0 * variable_1 ) variable_1 -> variable_5 [ 34 ] = variable_1 -> variable_5 [ 35 ] = 0 ; if ( variable_1 -> variable_16 ) target_phys_addr_t variable_17 = variable_1 -> variable_16 + ( func_10 ( variable_1 ) - func_11 ( variable_1 ) ) * ( func_12 ( variable_1 ) ? 16 : 8 ) ; int variable_18 = 0 ; if ( ! variable_18 ) if ( func_13 ( variable_1 ) != variable_17 ) variable_1 -> variable_5 [ 60 ] = variable_1 -> variable_5 [ 34 ] ; variable_1 -> variable_5 [ 61 ] = variable_1 -> variable_5 [ 35 ] ; variable_1 -> variable_5 [ 62 ] = func_14 ( variable_1 ) ; variable_1 -> variable_5 [ 63 ] = func_15 ( variable_1 ) ; variable_1 -> variable_5 [ 34 ] = variable_17 & 0 variable_19 ; variable_1 -> variable_5 [ 35 ] = variable_17 >> 16 ; if ( func_16 ( variable_1 ) ) struct pcnet_TMD variable_20 ; func_17 ( variable_1 ) = variable_20 . variable_21 ; func_18 ( variable_1 ) = func_19 ( variable_1 ) = 0 ; return ! ! ( func_20 ( variable_1 ) & 0 variable_22 ) ; struct pcnet_TMD variable_20 ; if ( func_21 ( variable_20 . variable_21 , variable_23 , variable_24 ) ) variable_1 -> variable_14 = 0 ; if ( func_22 ( variable_1 ) != 1 ) variable_13 = func_23 ( variable_20 . variable_21 , variable_23 , variable_25 ) ; if ( ! func_24 ( variable_20 . variable_21 , variable_23 , variable_26 ) ) int variable_27 = 4096 - func_25 ( variable_20 . variable_28 , variable_29 , variable_30 ) ; variable_1 -> variable_14 += variable_27 ; if ( variable_1 -> variable_14 >= 0 ) int variable_27 = 4096 - func_26 ( variable_20 . variable_28 , variable_29 , variable_30 ) ; variable_1 -> variable_14 += variable_27 ; if ( func_27 ( variable_1 ) ) if ( func_28 ( variable_1 ) == 1 ) variable_13 = ! func_29 ( variable_20 . variable_21 , variable_23 , variable_31 ) ; variable_1 -> variable_32 = variable_13 ? variable_33 : variable_34 ; func_30 ( variable_1 , variable_1 -> variable_35 , variable_1 -> variable_14 ) ; variable_1 -> variable_32 = 0 ; variable_1 -> variable_5 [ 0 ] &= ~ 0 variable_36 ; variable_1 -> variable_5 [ 4 ] |= 0 variable_37 ; variable_1 -> variable_14 = - 1 ; if ( ! func_31 ( variable_1 ) || ( func_32 ( variable_1 ) && func_33 ( variable_20 . variable_21 , variable_23 , variable_38 ) ) ) variable_1 -> variable_5 [ 0 ] |= 0 variable_39 ; if ( variable_12 -- ) if ( variable_1 -> variable_14 >= 0 ) variable_1 -> variable_5 [ 0 ] |= 0 variable_39 ; if ( ! func_34 ( variable_1 ) ) if ( variable_12 -- ) static void func_35 ( void * variable_40 , const uint8_t * variable_41 , int variable_42 ) variable_0 * variable_1 = variable_40 ; uint8_t variable_43 [ 60 ] ; if ( func_36 ( variable_1 ) || func_37 ( variable_1 ) || func_38 ( variable_1 ) || ! variable_42 ) if ( variable_42 < variable_44 ) memcpy ( variable_43 , variable_41 , variable_42 ) ; memset ( variable_43 + variable_42 , 0 , variable_44 - variable_42 ) ; variable_41 = variable_43 ; variable_42 = variable_44 ; if ( func_39 ( variable_1 ) || ( variable_45 = func_40 ( variable_1 , variable_41 , variable_42 ) ) || ( variable_46 = func_41 ( variable_1 , variable_41 , variable_42 ) ) || ( variable_47 = func_42 ( variable_1 , variable_41 , variable_42 ) ) ) static inline int func_43 ( variable_0 * variable_1 , const uint8_t * variable_41 , int variable_42 ) struct variable_48 * variable_49 = ( void * ) variable_41 ; uint8_t variable_50 [ 8 ] = { variable_1 -> variable_5 [ 8 ] & 0 variable_51 , variable_1 -> variable_5 [ 8 ] >> 8 , variable_1 -> variable_5 [ 9 ] & 0 variable_51 , variable_1 -> variable_5 [ 9 ] >> 8 , variable_1 -> variable_5 [ 10 ] & 0 variable_51 , variable_1 -> variable_5 [ 10 ] >> 8 , variable_1 -> variable_5 [ 11 ] & 0 variable_51 , variable_1 -> variable_5 [ 11 ] >> 8 } ; int variable_52 = func_44 ( variable_49 -> variable_53 ) >> 26 ; static inline uint32_t func_45 ( const uint8_t * variable_54 ) uint32_t variable_55 = 0 variable_56 ; int variable_57 , variable_58 ; uint8_t variable_59 ; for ( variable_57 = 0 ; variable_57 < 6 ; variable_57 ++ ) for ( variable_59 = * variable_54 ++ , variable_58 = 0 ; variable_58 < variable_60 ; variable_58 ++ ) variable_55 = ( variable_55 >> 1 ) ^ ( ( ( variable_55 ^ variable_59 ) & 1 ) ? variable_61 : 0 ) ; variable_59 >> = 1 ; return variable_55 ; return ! ! ( variable_50 [ variable_52 >> 3 ] & ( 1 << ( variable_52 & 7 ) ) ) ; static inline int func_46 ( variable_0 * variable_1 , const uint8_t * variable_41 , int variable_42 ) static const uint8_t variable_62 [ 6 ] = { 0 variable_51 , 0 variable_51 , 0 variable_51 , 0 variable_51 , 0 variable_51 , 0 variable_51 } ; struct variable_48 * variable_49 = ( void * ) variable_41 ; int variable_63 = ! func_47 ( variable_1 ) && ! memcmp ( variable_49 -> variable_53 , variable_62 , 6 ) ; return variable_63 ; static inline int func_48 ( variable_0 * variable_1 , const uint8_t * variable_41 , int variable_42 ) struct variable_48 * variable_49 = ( void * ) variable_41 ; uint8_t variable_64 [ 6 ] = { variable_1 -> variable_5 [ 12 ] & 0 variable_51 , variable_1 -> variable_5 [ 12 ] >> 8 , variable_1 -> variable_5 [ 13 ] & 0 variable_51 , variable_1 -> variable_5 [ 13 ] >> 8 , variable_1 -> variable_5 [ 14 ] & 0 variable_51 , variable_1 -> variable_5 [ 14 ] >> 8 } ; int variable_63 = ( ! func_49 ( variable_1 ) ) && ! memcmp ( variable_49 -> variable_53 , variable_64 , 6 ) ; return variable_63 ; if ( ! ( func_50 ( variable_1 ) & 0 variable_22 ) ) variable_65 * variable_66 = variable_1 -> variable_35 ; if ( ! variable_1 -> variable_32 ) memcpy ( variable_66 , variable_41 , variable_42 ) ; variable_66 [ variable_42 ] = 0 ; variable_66 [ variable_42 + 1 ] = 0 ; variable_66 [ variable_42 + 2 ] = 0 ; variable_66 [ variable_42 + 3 ] = 0 ; variable_42 += 4 ; variable_1 -> func_51 ( variable_1 -> variable_67 , variable_68 , variable_66 , variable_12 , func_52 ( variable_1 ) ) ; variable_66 += variable_12 ; func_53 ( & variable_69 . variable_70 , variable_71 , variable_72 , variable_42 ) ;
