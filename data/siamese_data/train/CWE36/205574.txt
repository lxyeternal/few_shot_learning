 void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; variable_23 = func_11 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;
 int attribute_align_arg func_0 ( variable_0 * variable_1 , variable_2 int variable_3 * variable_4 ) variable_5 * variable_6 = func_1 ( ) ; int variable_7 , variable_8 = 0 ; if ( ! variable_6 ) if ( variable_1 -> variable_9 != variable_10 ) variable_1 -> variable_9 = variable_10 ; variable_1 -> variable_11 = variable_12 ; variable_7 = func_2 ( variable_1 , variable_6 , & variable_8 , variable_4 ) ; int attribute_align_arg func_3 ( variable_0 variable_5 int const AVPacket * variable_4 ) variable_13 * variable_14 = variable_1 -> variable_15 ; int variable_7 = 0 ; * variable_16 = 0 ; if ( ! variable_4 -> variable_17 && variable_4 -> variable_18 ) return func_4 ( variable_19 ) ; if ( ! variable_1 -> variable_20 ) return func_5 ( variable_19 ) ; if ( variable_1 -> variable_20 -> variable_21 != variable_22 ) return func_6 ( variable_19 ) ; if ( ( variable_1 -> variable_20 -> variable_23 & variable_24 ) || variable_4 -> variable_18 || ( variable_1 -> variable_25 & variable_26 ) ) variable_27 * variable_28 ; int variable_29 ; uint32_t variable_30 = 0 ; AVPacket variable_31 = * variable_4 ; int variable_32 = func_7 ( & variable_31 ) ; variable_7 = func_8 ( variable_1 , & variable_31 ) ; static int func_9 ( variable_0 * variable_1 , variable_3 * variable_4 ) int variable_18 = 0 , variable_7 ; const uint8_t * variable_17 ; uint32_t variable_33 ; int64_t variable_34 ; variable_17 = func_10 ( variable_4 , variable_35 , & variable_18 ) ; if ( ! variable_17 ) return 0 ; if ( ! ( variable_1 -> variable_20 -> variable_23 & variable_36 ) ) return func_11 ( variable_19 ) ; if ( variable_18 < 4 ) variable_33 = func_12 ( & variable_17 ) ; variable_18 -= 4 ; if ( variable_33 & variable_37 ) if ( variable_18 < 4 ) variable_34 = func_13 ( & variable_17 ) ; if ( variable_34 <= 0 || variable_34 > variable_38 ) return variable_39 ; variable_1 -> variable_40 = variable_34 ; variable_18 -= 4 ; if ( variable_33 & variable_41 ) if ( variable_18 < 8 ) variable_1 -> variable_42 = func_14 ( & variable_17 ) ; variable_18 -= 8 ; if ( variable_33 & variable_43 ) if ( variable_18 < 4 ) variable_34 = func_15 ( & variable_17 ) ; if ( variable_34 <= 0 || variable_34 > variable_38 ) return variable_39 ; variable_1 -> variable_44 = variable_34 ; variable_18 -= 4 ; if ( variable_33 & variable_45 ) if ( variable_18 < 8 ) variable_1 -> variable_46 = func_16 ( & variable_17 ) ; variable_1 -> variable_47 = func_17 ( & variable_17 ) ; variable_7 = func_18 ( variable_1 , variable_1 -> variable_46 , variable_1 -> variable_47 ) ; int func_19 ( variable_0 * variable_48 , int variable_46 , int variable_47 ) int variable_7 = func_20 ( variable_46 , variable_47 , 0 , variable_48 ) ; return variable_7 ; if ( variable_7 < 0 ) return variable_7 ; return 0 ; return variable_39 ; if ( variable_7 < 0 ) if ( variable_1 -> variable_49 & variable_50 ) variable_1 -> variable_15 -> variable_51 = & variable_31 ; if ( variable_52 && variable_1 -> variable_25 & variable_26 ) variable_7 = func_21 ( variable_1 , variable_6 , variable_16 , & variable_31 ) ; variable_7 = variable_1 -> variable_20 -> func_22 ( variable_1 , variable_6 , variable_16 , & variable_31 ) ; variable_6 -> variable_53 = variable_4 -> variable_54 ; if ( variable_7 >= 0 && * variable_16 ) variable_1 -> variable_55 ++ ; if ( variable_6 -> variable_56 == variable_57 ) variable_6 -> variable_56 = variable_1 -> variable_58 ; if ( ! variable_6 -> variable_42 ) variable_6 -> variable_42 = variable_1 -> variable_42 ; if ( ! variable_6 -> variable_44 ) variable_6 -> variable_44 = variable_1 -> variable_44 ; variable_28 = func_23 ( variable_1 -> variable_15 -> variable_51 , variable_59 , & variable_29 ) ; if ( variable_28 && variable_29 >= 10 ) variable_1 -> variable_15 -> variable_60 = func_24 ( variable_28 ) ; variable_30 = func_25 ( variable_28 + 4 ) ; if ( variable_1 -> variable_15 -> variable_60 && * variable_16 && ! ( variable_1 -> variable_61 & variable_62 ) ) if ( variable_6 -> variable_63 <= variable_1 -> variable_15 -> variable_60 ) * variable_16 = 0 ; if ( variable_1 -> variable_64 . variable_65 && variable_1 -> variable_44 ) int64_t variable_66 = func_26 ( variable_1 -> variable_15 -> variable_60 ( variable_67 ) 1 , variable_1 -> variable_44 variable_1 -> variable_64 ) if ( variable_6 -> variable_68 != variable_69 ) variable_6 -> variable_68 += variable_66 ; if ( variable_6 -> variable_53 != variable_69 ) variable_6 -> variable_53 += variable_66 ; variable_6 -> variable_63 -= variable_1 -> variable_15 -> variable_60 ; variable_1 -> variable_15 -> variable_60 = 0 ; if ( variable_30 > 0 && variable_30 <= variable_6 -> variable_63 && * variable_16 && ! ( variable_1 -> variable_61 & variable_62 ) ) if ( variable_30 == variable_6 -> variable_63 ) * variable_16 = 0 ; variable_6 -> variable_63 -= variable_30 ; if ( ( variable_1 -> variable_61 & variable_62 ) && * variable_16 ) variable_70 * variable_71 = func_27 ( variable_6 , variable_72 , 10 ) ; if ( variable_71 ) variable_1 -> variable_15 -> variable_60 = 0 ; variable_1 -> variable_15 -> variable_51 = NULL ; if ( variable_32 ) if ( variable_7 == variable_31 . variable_18 ) variable_7 = variable_4 -> variable_18 ; if ( variable_7 >= 0 && * variable_16 ) if ( ! variable_1 -> variable_73 ) int variable_74 = func_28 ( variable_14 , variable_6 ) ; static int func_29 ( variable_13 * variable_14 , variable_5 * variable_6 ) int variable_7 ; variable_7 = func_30 ( variable_6 , variable_14 -> variable_75 ) ; if ( variable_7 < 0 ) return variable_7 ; memcpy ( variable_6 -> variable_17 , variable_14 -> variable_75 -> variable_17 , sizeof ( variable_6 -> variable_17 ) ) ; memcpy ( variable_6 -> variable_76 , variable_14 -> variable_75 -> variable_76 , sizeof ( variable_6 -> variable_76 ) ) ; if ( variable_14 -> variable_75 -> variable_77 != variable_14 -> variable_75 -> variable_17 ) int variable_78 = func_31 ( variable_14 -> variable_75 ) ; int variable_18 = variable_78 * sizeof ( * variable_6 -> variable_77 ) ; if ( ! variable_18 ) return variable_79 ; variable_6 -> variable_77 = func_32 ( variable_18 ) ; if ( ! variable_6 -> variable_77 ) return func_33 ( variable_80 ) ; return 0 ; if ( variable_74 < 0 ) return variable_74 ; return variable_7 ; if ( variable_7 >= 0 && variable_8 ) int variable_81 , variable_82 ; int variable_83 = func_34 ( variable_1 -> variable_58 ) ; int variable_84 = func_35 ( & variable_82 , variable_1 -> variable_40 , variable_6 -> variable_63 , variable_1 -> variable_58 , 1 ) ; if ( * variable_85 < variable_84 ) memcpy ( variable_86 , variable_6 -> variable_77 [ 0 ] , variable_82 ) ; if ( variable_83 && variable_1 -> variable_40 > 1 ) variable_27 * variable_87 = ( ( uint8_t * ) variable_86 ) + variable_82 ; for ( variable_81 = 1 ; variable_81 < variable_1 -> variable_40 ; variable_81 ++ ) memcpy ( variable_87 , variable_6 -> variable_77 [ variable_81 ] , variable_82 ) ; variable_87 += variable_82 ;
