 void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_9 ( ) ) int func_10 ( ) return 1 ; func_11 ( variable_0 , variable_0 ) ; static void func_12 ( wchar_t * variable_0 , . . . ) wchar_t variable_21 [ 100 ] = L " " va_list variable_22 ; func_13 ( variable_21 , 100 - 1 , variable_0 , variable_22 ) ;
 variable_0 * func_0 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) variable_0 * variable_5 = func_1 ( ! 0 , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_2 ( svn_boolean_t variable_1 , const char * variable_2 , int variable_3 , const char * variable_4 ) if ( variable_4 ) return func_3 ( variable_6 , ( ( void * ) 0 ) , ( func_4 ( " subversion " , " In file ' %s ' line %d : assertion failed ( %s ) " ) ) , variable_2 , variable_3 , variable_4 ) ; variable_0 * func_5 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_6 ( variable_7 , variable_8 ) ; static variable_0 * func_7 ( apr_status_t variable_7 , variable_0 * variable_8 ) variable_11 * variable_12 ; variable_0 * variable_13 ; if ( variable_8 ) variable_12 = variable_8 -> variable_12 ; variable_13 = ( memset ( func_8 ( variable_12 , sizeof ( ( * variable_13 ) ) ) , 0 , sizeof ( ( * variable_13 ) ) ) ) ; variable_13 -> variable_7 = variable_7 ; variable_13 -> variable_8 = variable_8 ; variable_13 -> variable_12 = variable_12 ; return variable_13 ; variable_5 -> variable_14 = ( func_9 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; return func_10 ( variable_6 , ( ( void * ) 0 ) , ( func_11 ( " subversion " , " In file ' %s ' line %d : internal malfunction " ) ) , variable_2 , variable_3 ) ; variable_0 * func_12 ( apr_status_t variable_7 , variable_0 * variable_8 , const char * variable_9 , . . . ) variable_0 * variable_5 ; va_list variable_10 ; variable_5 = func_13 ( variable_7 , variable_8 ) ; variable_5 -> variable_14 = ( func_14 ( variable_5 -> variable_12 , variable_9 , variable_10 ) ) ; return variable_5 ; func_15 ( variable_5 , variable_15 , 0 , "  svn : " ) ; void func_16 ( variable_0 * variable_5 , FILE * variable_16 , svn_boolean_t variable_17 , const char * variable_18 ) variable_11 * variable_19 ; variable_20 * variable_21 ; variable_0 * variable_22 ; variable_21 = func_17 ( variable_19 , 0 , ( sizeof ( variable_23 ) ) ) ; variable_22 = variable_5 ; while ( variable_22 ) svn_boolean_t variable_24 = 0 ; if ( ! variable_22 -> variable_14 ) int variable_25 ; for ( variable_25 = 0 ; variable_25 < variable_21 -> variable_26 ; variable_25 ++ ) if ( variable_22 -> variable_7 == ( ( apr_status_t * ) ( variable_21 -> variable_27 ) ) [ variable_25 ] ) variable_24 = ! 0 ; if ( ! variable_24 ) func_18 ( variable_22 , variable_16 , variable_18 ) ; variable_22 = variable_22 -> variable_8 ; static void func_19 ( variable_0 * variable_5 , FILE * variable_16 , const char * variable_18 ) if ( func_20 ( variable_5 ) ) svn_boolean_t func_21 ( variable_0 * variable_5 ) return variable_5 && variable_5 -> variable_14 && ! strcmp ( variable_5 -> variable_14 , variable_28 ) ;
