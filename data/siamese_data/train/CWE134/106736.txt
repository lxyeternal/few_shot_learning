 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; if ( variable_2 == 5 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , 100 - variable_3 - 1 ) ; if ( variable_2 == 5 ) func_2 ( variable_0 , variable_0 ) ; static void func_3 ( char * variable_0 , . . . ) char variable_6 [ 100 ] = " " ; va_list variable_7 ; vsnprintf ( variable_6 , 100 - 1 , variable_0 , variable_7 ) ; func_4 ( variable_6 ) ; void func_5 ( const char * variable_8 ) if ( variable_8 != NULL ) printf ( " %s \n " , variable_8 ) ;
 const EVP_CIPHER * func_0 ( ) int variable_0 = 21 ; pid_t variable_1 [ 21 ] ; int variable_2 = 7 ; const char * variable_3 [ 7 ] ; struct pid_fd variable_4 [ 21 ] ; int variable_5 = 0 ; char * variable_6 ; if ( func_1 ( & variable_7 , 0 , 1 ) ) if ( func_2 ( " / opt / stonesoup / workspace / lockDir " , 509U ) == 0 ) if ( variable_6 != 0 ) variable_8 = ( ( void * ) variable_6 ) ; variable_9 = func_3 ( variable_8 ) ; void * func_4 ( void * variable_10 ) return variable_10 ; variable_11 = ( ( char * ) ( ( char * ) variable_9 ) ) ; variable_3 [ 0 ] = "  MD5 " ; variable_3 [ 1 ] = "  SHA1 " ; variable_3 [ 2 ] = "  SHA224 " ; variable_3 [ 3 ] = "  SHA256 " ; variable_3 [ 4 ] = "  SHA384 " ; variable_3 [ 5 ] = "  SHA512 " ; variable_3 [ 6 ] = "  RIPEMD160 " ; for ( variable_12 = 0 ; variable_12 < variable_0 ; ++ variable_12 ) variable_1 [ variable_12 ] = - 1 ; if ( ! variable_5 ) for ( variable_12 = 0 ; variable_12 < 3 ; ++ variable_12 ) for ( variable_13 = 0 ; variable_13 < variable_2 ; ++ variable_13 ) variable_14 = variable_13 + variable_12 * variable_2 ; if ( func_5 ( variable_4 [ variable_14 ] . variable_15 ) == - 1 ) variable_16 = func_6 ( ) ; if ( variable_16 >= 0 ) if ( variable_16 == 0 ) func_7 ( variable_3 [ variable_13 ] , variable_11 ) ; variable_4 [ variable_14 ] . variable_17 = variable_16 ; void func_8 ( const char * variable_18 , char * variable_19 ) char variable_20 [ 129 ] = { 0 } ; unsigned char variable_21 [ 1024 ] ; size_t variable_22 = 1024 ; unsigned char variable_23 [ 64 ] ; unsigned int variable_24 = 0 ; int variable_25 = 0 ; memset ( variable_23 , 0 , 64 ) ; variable_26 = fopen ( variable_19 , " rb " ) ; if ( variable_26 != 0 ) variable_27 = func_9 ( variable_18 ) ; if ( variable_27 != 0 ) variable_28 = func_10 ( ) ; if ( variable_28 != 0 ) if ( func_11 ( variable_28 , variable_27 , 0 ) ) while ( ! feof ( variable_26 ) ) memset ( variable_21 , 0 , variable_22 ) ; variable_29 = fread ( variable_21 , sizeof ( unsigned char ) , variable_22 , variable_26 ) ; variable_25 = func_12 ( variable_28 , variable_21 , variable_29 ) ; if ( 1 != variable_25 ) if ( 1 == variable_25 ) if ( func_13 ( variable_28 , variable_23 , & variable_24 ) ) for ( variable_30 = 0 ; variable_30 < variable_24 ; ++ variable_30 ) sprintf ( & variable_20 [ variable_30 * 2 ] , " % 02x " , variable_23 [ variable_30 ] ) ;
