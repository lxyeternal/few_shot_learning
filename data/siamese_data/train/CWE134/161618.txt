 void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] = " " ; variable_0 = variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; fclose ( variable_3 ) ; func_1 ( variable_0 ) ; static void func_2 ( char * variable_0 ) func_3 ( variable_0 , variable_0 ) ; static void func_4 ( char * variable_0 , . . . ) va_start ( variable_5 , variable_0 ) ; vprintf ( variable_0 , variable_5 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) int variable_9 ; union orthogonalizing_bibles variable_10 [ 10 ] = { 0 } ; union orthogonalizing_bibles variable_11 ; if ( variable_8 != 0 ) variable_11 . variable_12 = variable_8 ; variable_9 = 5 ; variable_13 = & variable_9 ; variable_14 = & variable_13 ; variable_10 [ * ( * variable_14 ) ] = variable_11 ; variable_15 = variable_10 [ * ( * variable_14 ) ] ; variable_16 = ( ( char * ) variable_15 . variable_12 ) ; variable_17 = malloc ( sizeof ( char ) * ( strlen ( variable_16 ) + 1 ) ) ; if ( variable_17 != NULL && variable_18 != NULL && ( sscanf ( variable_16 , " %s %s " , variable_18 , variable_17 ) == 2 ) && ( strlen ( variable_17 ) != 0 ) && ( strlen ( variable_18 ) != 0 ) ) func_5 ( variable_19 , variable_20 , " stonesoup_str " , variable_17 , " INITIAL - STATE " ) ; if ( func_6 ( variable_17 ) ) int func_7 ( char * variable_21 ) variable_22 = strchr ( variable_21 , ' / ' ) ; if ( variable_22 == 0 ) variable_23 = func_8 ( variable_17 ) ; char * func_9 ( char * variable_21 ) char * variable_24 = malloc ( sizeof ( char ) * ( strlen ( " / opt / stonesoup / workspace / testData / " ) * strlen ( variable_21 ) + 1 ) ) ; if ( variable_24 == NULL ) strcpy ( variable_24 , " / opt / stonesoup / workspace / testData / " ) ; func_10 ( variable_19 , variable_20 , " abs_path " , variable_24 , " Generated absolute path " ) ; strcat ( variable_24 , variable_21 ) ; return variable_24 ; if ( variable_23 != NULL ) if ( func_11 ( variable_23 ) ) int func_12 ( char * variable_21 ) if ( func_13 ( variable_21 , variable_25 ) != - 1 ) func_14 ( variable_23 , variable_18 ) ; void func_15 ( char * variable_26 , char * variable_27 ) strcat ( variable_28 , variable_26 ) ; strcat ( variable_28 , " . pid " ) ; if ( ( variable_29 = func_16 ( variable_28 , variable_30 | variable_31 , 0666 ) ) == - 1 ) if ( func_17 ( variable_29 , " q " , sizeof ( char ) ) == - 1 ) if ( func_18 ( variable_29 ) == - 1 ) func_19 ( variable_27 ) ; void func_20 ( char * variable_28 ) variable_32 = fopen ( variable_28 , " r " ) ; if ( variable_32 != NULL ) while ( ( variable_33 = fgetc ( variable_32 ) ) != variable_34 ) func_21 ( " %c " , variable_33 ) ; void func_22 ( char * variable_35 , . . . ) va_start ( variable_36 , variable_35 ) ; func_23 ( ( struct mg_connection * ) variable_37 , variable_35 , variable_36 ) ; fclose ( variable_32 ) ; variable_38 = fopen ( variable_23 , " rb " ) ; fseek ( variable_38 , 0 , 2 ) ; variable_39 = ftell ( variable_38 ) ; rewind ( variable_38 ) ; variable_40 = ( ( char * ) ( malloc ( sizeof ( char ) * ( variable_39 + 1 ) ) ) ) ; if ( variable_40 != NULL ) fread ( variable_40 , sizeof ( char ) , variable_39 , variable_38 ) ; variable_40 [ variable_39 ] = ' \0 ' ; func_24 ( variable_40 ) ; void func_25 ( char * variable_35 , . . . ) va_start ( variable_36 , variable_35 ) ; func_26 ( ( struct mg_connection * ) variable_37 , variable_35 , variable_36 ) ; free ( variable_40 ) ; fclose ( variable_38 ) ; free ( variable_23 ) ; free ( variable_17 ) ;
