 void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_1 ; int variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_4 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_2 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_2 == variable_19 || variable_2 == 0 ) variable_5 [ variable_2 ] = ' \0 ' ; variable_3 = atoi ( variable_5 ) ; if ( variable_3 > variable_20 || variable_3 < variable_21 ) variable_0 = - 1 ; variable_0 = variable_3 ; while ( 0 ) char variable_22 [ 100 ] ; char variable_23 [ 100 ] = " " ; memset ( variable_22 , ' A ' , 100 - 1 ) ; variable_22 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_23 , variable_22 , variable_0 ) ; variable_23 [ variable_0 ] = ' \0 ' ; func_9 ( variable_23 ) ; void func_10 ( const char * variable_24 ) if ( variable_24 != NULL ) printf ( " %s \n " , variable_24 ) ;
 int func_0 ( variable_0 * variable_1 , unsigned char * variable_2 , int variable_3 ) int variable_4 ; while ( variable_3 > 0 ) variable_4 = ( variable_1 -> variable_5 - variable_1 -> variable_6 ) ; if ( variable_4 > variable_3 ) variable_4 = variable_3 ; if ( variable_4 == 0 || variable_1 -> variable_7 ) if ( ( variable_1 -> variable_8 || variable_3 > variable_1 -> variable_9 ) && ! variable_1 -> variable_10 ) if ( variable_1 -> variable_11 ) variable_4 = ( ( variable_1 -> variable_11 ) ( variable_1 -> variable_12 , variable_2 , variable_3 ) ) ; if ( variable_4 <= 0 ) if ( variable_4 < 0 ) variable_1 -> variable_13 = variable_4 ; variable_1 -> variable_14 += variable_4 ; variable_1 -> variable_15 += variable_4 ; variable_3 -= variable_4 ; variable_2 += variable_4 ; variable_1 -> variable_6 = variable_1 -> variable_16 ; variable_1 -> variable_5 = variable_1 -> variable_16 ; variable_4 = ( variable_1 -> variable_5 - variable_1 -> variable_6 ) ; if ( variable_4 == 0 ) memcpy ( variable_2 , ( variable_1 -> variable_6 ) , variable_4 ) ; variable_2 += variable_4 ; variable_1 -> variable_6 += variable_4 ; variable_3 -= variable_4 ; if ( variable_17 == variable_3 ) if ( variable_1 -> variable_13 ) return variable_1 -> variable_13 ; if ( func_1 ( variable_1 ) ) int func_2 ( variable_0 * variable_1 ) if ( ! variable_1 ) if ( variable_1 -> variable_18 ) variable_1 -> variable_18 = 0 ; func_3 ( variable_1 ) ; static void func_4 ( variable_0 * variable_1 ) variable_19 * variable_20 = ! variable_1 -> variable_21 && variable_1 -> variable_5 - variable_1 -> variable_16 < ( variable_1 -> variable_9 ) ? variable_1 -> variable_5 : variable_1 -> variable_16 ; int variable_4 = ( ( variable_1 -> variable_9 ) - ( variable_20 - variable_1 -> variable_16 ) ) ; int variable_22 = variable_1 -> variable_21 ? variable_1 -> variable_21 : 32768 ; if ( ! variable_1 -> variable_11 && variable_1 -> variable_6 >= variable_1 -> variable_5 ) variable_1 -> variable_18 = 1 ; if ( variable_1 -> variable_18 ) if ( variable_1 -> variable_10 && variable_20 == variable_1 -> variable_16 ) if ( variable_1 -> variable_5 > variable_1 -> variable_23 ) variable_1 -> variable_24 = ( ( variable_1 -> variable_10 ) ( variable_1 -> variable_24 , ( variable_1 -> variable_23 ) , ( variable_1 -> variable_5 - variable_1 -> variable_23 ) ) ) ; variable_1 -> variable_23 = variable_1 -> variable_16 ; if ( variable_1 -> variable_11 && variable_1 -> variable_9 > variable_22 ) func_5 ( variable_1 , variable_22 ) ; int func_6 ( variable_0 * variable_1 , int variable_25 ) variable_16 = ( func_7 ( variable_25 ) ) ; if ( ! variable_16 ) func_8 ( ( variable_1 -> variable_16 ) ) ; variable_1 -> variable_16 = variable_16 ; variable_1 -> variable_9 = variable_25 ; variable_1 -> variable_6 = variable_16 ; func_9 ( variable_1 , ( variable_1 -> variable_7 ? 2 : 1 ) ) ; static int func_10 ( variable_0 * variable_1 , int variable_26 ) if ( variable_26 & 2 ) variable_1 -> variable_5 = variable_1 -> variable_16 + variable_1 -> variable_9 ; variable_1 -> variable_7 = 1 ; variable_1 -> variable_5 = variable_1 -> variable_16 ; variable_1 -> variable_7 = 0 ; variable_1 -> variable_23 = variable_20 = variable_1 -> variable_16 ; variable_4 = variable_1 -> variable_9 ; if ( variable_1 -> variable_11 ) variable_4 = ( ( variable_1 -> variable_11 ) ( variable_1 -> variable_12 , variable_20 , variable_4 ) ) ; if ( variable_4 <= 0 ) variable_1 -> variable_18 = 1 ; if ( variable_4 < 0 ) variable_1 -> variable_13 = variable_4 ; variable_1 -> variable_14 += variable_4 ; variable_1 -> variable_6 = variable_20 ; variable_1 -> variable_5 = variable_20 + variable_4 ; variable_1 -> variable_15 += variable_4 ; return variable_1 -> variable_18 ; return variable_17 - variable_3 ;
