 void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( short variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; SOCKET variable_9 = variable_10 ; char variable_11 [ variable_12 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_9 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_9 == variable_10 ) break ; memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_17 = variable_14 ; variable_8 . variable_18 . variable_19 = func_6 ( variable_20 ) ; variable_8 . variable_21 = func_7 ( variable_22 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_23 ) break ; variable_6 = recv ( variable_9 , variable_11 , variable_12 - 1 , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_11 [ variable_6 ] = ' \0 ' ; variable_7 = atoi ( variable_11 ) ; if ( variable_7 > variable_24 || variable_7 < variable_25 ) variable_0 = - 1 ; variable_0 = variable_7 ; while ( 0 ) if ( variable_9 != variable_10 ) func_9 ( variable_9 ) ; if ( variable_5 ) func_10 ( ) ; delete variable_2 variable_1 :: ~ func_11 ( ) char variable_26 [ 100 ] ; char variable_27 [ 100 ] = " " ; memset ( variable_26 , ' A ' , 100 - 1 ) ; variable_26 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_27 , variable_26 , variable_0 ) ; variable_27 [ variable_0 ] = ' \0 ' ; func_12 ( variable_27 ) ; void func_13 ( const char * variable_28 ) if ( variable_28 != NULL ) printf ( " %s \n " , variable_28 ) ;
