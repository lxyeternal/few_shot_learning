 void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;
 void * func_0 ( void * variable_0 ) struct variable_1 * variable_2 = ( struct stonesoup_data * ) variable_0 ; int variable_3 ; char variable_4 ; char * variable_5 ; int * variable_6 ; variable_6 = malloc ( sizeof ( int ) * variable_2 -> variable_7 ) ; if ( variable_6 != NULL ) for ( variable_8 = 0 ; variable_8 < variable_2 -> variable_7 ; variable_8 ++ ) variable_6 [ variable_8 ] = variable_2 -> variable_7 - variable_8 ; variable_5 = malloc ( sizeof ( char ) * ( variable_2 -> variable_9 + 1 ) ) ; variable_8 = 0 ; while ( variable_2 -> variable_0 [ variable_8 ] != ' \0 ' ) variable_3 = ( int ) ( rand ( ) / ( variable_10 ) variable_11 + 0 . 5 ) ; switch ( variable_2 -> variable_0 [ variable_8 ] ) if ( variable_3 == 0 ) variable_4 = ' < ' ; variable_4 = ' c ' ; if ( variable_3 == 0 ) variable_4 = ' 3 ' ; variable_4 = ' e ' ; if ( variable_3 == 0 ) variable_4 = ' 1 ' ; variable_4 = ' i ' ; if ( variable_3 == 0 ) variable_4 = ' 1 ' ; variable_4 = ' l ' ; if ( variable_3 == 0 ) variable_4 = ' 0 ' ; variable_4 = ' o ' ; if ( variable_3 == 0 ) variable_4 = ' 5 ' ; variable_4 = ' s ' ; if ( variable_3 == 0 ) variable_4 = ' 7 ' ; variable_4 = ' t ' ; variable_4 = variable_2 -> variable_0 [ variable_8 ] ; variable_5 [ variable_8 ] = variable_4 ; variable_8 ++ ;
