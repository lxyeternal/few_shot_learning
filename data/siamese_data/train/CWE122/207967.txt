 static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_5 ( variable_0 [ 0 ] ) ; void func_6 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;
 void func_0 ( void * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( void * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( void * variable_2 ) func_5 ( variable_2 ) ; void func_6 ( void * variable_3 ) variable_4 = ( ( char * ) ( ( char * ) variable_3 ) ) ; variable_5 = malloc ( sizeof ( char ) * ( strlen ( variable_4 ) + 1 ) ) ; if ( variable_5 != NULL && variable_6 != NULL && ( sscanf ( variable_4 , " %s %s " , variable_6 , variable_5 ) == 2 ) && ( strlen ( variable_5 ) != 0 ) && ( strlen ( variable_6 ) != 0 ) ) func_7 ( variable_7 , variable_8 , " stonesoup_str " , variable_5 , " INITIAL - STATE " ) ; if ( func_8 ( variable_5 ) ) int func_9 ( char * variable_9 ) variable_10 = strchr ( variable_9 , ' / ' ) ; if ( variable_10 == 0 ) variable_11 = func_10 ( variable_5 ) ; char * func_11 ( char * variable_9 ) char * variable_12 = malloc ( sizeof ( char ) * ( strlen ( " / opt / stonesoup / workspace / testData / " ) * strlen ( variable_9 ) + 1 ) ) ; if ( variable_12 == NULL ) strcpy ( variable_12 , " / opt / stonesoup / workspace / testData / " ) ; strcat ( variable_12 , variable_9 ) ; return variable_12 ; if ( variable_11 != NULL ) if ( func_12 ( variable_11 ) ) int func_13 ( char * variable_12 ) return ( func_14 ( variable_12 ) == 0 ) ; int func_15 ( char * variable_13 ) if ( func_16 ( variable_13 , & variable_14 ) < 0 ) func_17 ( variable_11 , variable_6 ) ; void func_18 ( char * variable_13 , char * variable_15 ) strcat ( variable_16 , variable_13 ) ; strcat ( variable_16 , " . pid " ) ; if ( ( variable_17 = func_19 ( variable_16 , variable_18 | variable_19 , 0666 ) ) == - 1 ) if ( func_20 ( variable_17 , " q " , sizeof ( char ) ) == - 1 ) if ( func_21 ( variable_17 ) == - 1 ) func_22 ( variable_15 ) ; void func_23 ( char * variable_16 ) variable_20 = fopen ( variable_16 , " r " ) ; if ( variable_20 != NULL ) while ( ( variable_21 = fgetc ( variable_20 ) ) != variable_22 ) func_24 ( " %c " , variable_21 ) ; void func_25 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; vfprintf ( variable_25 , variable_23 , variable_24 ) ; fclose ( variable_20 ) ; variable_26 = fopen ( variable_11 , " rb " ) ; if ( variable_26 != 0 ) fseek ( variable_26 , 0 , 2 ) ; variable_27 = ftell ( variable_26 ) ; rewind ( variable_26 ) ; variable_28 = ( ( char * ) ( malloc ( sizeof ( char ) * ( variable_27 + 1 ) ) ) ) ; if ( variable_28 ) fread ( variable_28 , sizeof ( char ) , variable_27 , variable_26 ) ; variable_28 [ variable_27 ] = ' \0 ' ; func_26 ( variable_28 ) ; void func_27 ( char * variable_23 , . . . ) va_start ( variable_24 , variable_23 ) ; vfprintf ( variable_25 , variable_23 , variable_24 ) ; fclose ( variable_26 ) ; free ( variable_28 ) ; free ( variable_11 ) ; free ( variable_5 ) ;
