 void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( * variable_2 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;
 static int func_0 ( struct variable_0 * variable_1 , enum mg_event variable_2 ) char * variable_3 ; char * variable_4 ; int variable_5 = 1000 ; if ( variable_2 == variable_6 ) variable_3 = ( char * ) func_1 ( variable_1 , " if - match " ) ; if ( strcmp ( variable_3 , " weak_taint_source_value " ) == 0 ) while ( 1 ) variable_4 = ( char * ) malloc ( variable_5 * sizeof ( char ) ) ; variable_7 = func_2 ( variable_1 , " data " , variable_4 , variable_5 * sizeof ( char ) ) ; if ( variable_7 < variable_5 ) variable_5 = variable_5 * 2 ; func_3 ( variable_4 ) ; void func_4 ( char * variable_8 ) char * variable_9 = 0 ; char * variable_10 = " aba " ; int variable_11 = 0 ; union septime_crippledom variable_12 ; if ( variable_8 != 0 ) variable_12 . variable_13 = variable_8 ; variable_14 = & variable_12 ; variable_15 = ( ( char * ) ( * variable_14 ) . variable_13 ) ; for ( variable_16 = 0 ; ( ( int ) variable_16 ) <= ( ( int ) ( strlen ( variable_15 ) - strlen ( variable_10 ) ) ) ; ++ variable_16 ) for ( variable_17 = 0 ; variable_17 < strlen ( variable_10 ) ; ++ variable_17 ) if ( variable_15 [ variable_16 + variable_17 ] != variable_10 [ variable_17 ] ) variable_11 = 0 ; variable_11 = 1 ; if ( variable_11 == 1 && variable_17 == strlen ( variable_10 ) ) variable_9 = & variable_15 [ variable_16 ] ; func_5 ( " String length is % i \n " , strlen ( variable_9 ) ) ;
