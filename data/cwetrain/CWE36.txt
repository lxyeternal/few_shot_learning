void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; size_t variable_3 = strlen ( variable_2 ) ; FILE * variable_4 ; if ( variable_5 - variable_3 > 1 ) variable_4 = fopen ( variable_6 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_2 + variable_3 , ( int ) ( variable_5 - variable_3 ) , variable_4 ) == NULL ) variable_2 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 -> func_2 ( variable_0 ) ; void variable_7 :: func_3 ( char * variable_0 ) variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_5 ) char * variable_0 = * variable_5 ; variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = strlen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == ' \n ' ) variable_0 [ variable_6 - 1 ] = ' \0 ' ; variable_0 [ variable_6 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; size_t variable_3 = strlen ( variable_2 ) ; FILE * variable_4 ; if ( variable_5 - variable_3 > 1 ) variable_4 = fopen ( variable_6 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_2 + variable_3 , ( int ) ( variable_5 - variable_3 ) , variable_4 ) == NULL ) variable_2 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) variable_6 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . func_1 ( variable_5 . end ( ) , 1 , variable_0 ) ; variable_5 . func_2 ( variable_5 . end ( ) , 1 , variable_0 ) ; variable_5 . func_3 ( variable_5 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; char * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) strncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = strlen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == ' \n ' ) variable_0 [ variable_6 - 1 ] = ' \0 ' ; variable_0 [ variable_6 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; size_t variable_3 = strlen ( variable_2 ) ; FILE * variable_4 ; if ( variable_5 - variable_3 > 1 ) variable_4 = fopen ( variable_6 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_2 + variable_3 , ( int ) ( variable_5 - variable_3 ) , variable_4 ) == NULL ) variable_2 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_6 ) wchar_t * variable_0 = * variable_6 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_1 ) ; if ( variable_4 > 0 && variable_1 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; wchar_t * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) wcsncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_5 ) char * variable_0 = * variable_5 ; variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . func_1 ( variable_0 ) ; variable_5 . func_2 ( variable_0 ) ; variable_5 . func_3 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; wchar_t * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) wcsncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_5 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 -> func_2 ( variable_0 ) ; void variable_7 :: func_3 ( char * variable_0 ) variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_5 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( char * variable_0 ) variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = strlen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == ' \n ' ) variable_0 [ variable_6 - 1 ] = ' \0 ' ; variable_0 [ variable_6 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) variable_6 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_1 ) ; if ( variable_4 > 0 && variable_1 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; size_t variable_3 = strlen ( variable_2 ) ; FILE * variable_4 ; if ( variable_5 - variable_3 > 1 ) variable_4 = fopen ( variable_6 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_2 + variable_3 , ( int ) ( variable_5 - variable_3 ) , variable_4 ) == NULL ) variable_2 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) variable_6 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . func_2 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_3 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_4 ( variable_6 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = strlen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == ' \n ' ) variable_0 [ variable_6 - 1 ] = ' \0 ' ; variable_0 [ variable_6 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . func_2 ( variable_0 ) ; variable_6 . func_3 ( variable_0 ) ; variable_6 . func_4 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( char * variable_0 ) variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; char * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) strncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) variable_6 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; wchar_t * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) wcsncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . func_2 ( variable_0 ) ; variable_6 . func_3 ( variable_0 ) ; variable_6 . func_4 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; char * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) strncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( variable_4 - variable_2 > 1 ) variable_3 = fopen ( variable_5 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( variable_4 - variable_2 ) , variable_3 ) == NULL ) fclose ( variable_3 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 -> func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; char * variable_7 = func_3 ( variable_8 ) ; if ( variable_7 != NULL ) strncat ( variable_0 + variable_6 , variable_7 , variable_2 - variable_6 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_1 ) ; if ( variable_4 > 0 && variable_1 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . func_2 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_3 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_4 ( variable_6 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_3 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_21 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_21 ) char * variable_0 = * variable_21 ; variable_22 = func_10 ( variable_0 , variable_23 | variable_24 , variable_25 | variable_26 ) ; if ( variable_22 != - 1 ) func_11 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . func_9 ( variable_0 ) ; variable_23 . func_10 ( variable_0 ) ; variable_23 . func_11 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 . func_17 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( char * variable_23 [ ] ) char * variable_0 = variable_23 [ 2 ] ; variable_24 = func_11 ( variable_0 , " wb + " ) ; if ( variable_24 != NULL ) fclose ( variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_6 ) wchar_t * variable_0 = * variable_6 ; variable_7 = func_4 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 -> func_9 ( variable_0 ) ; void variable_24 :: func_10 ( char * variable_0 ) variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_6 = func_5 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 = func_3 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_5 . func_7 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_6 . func_7 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_4 = func_9 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; variable_23 = func_10 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \r ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \n ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = wcslen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( char * variable_23 [ ] ) char * variable_0 = variable_23 [ 2 ] ; variable_24 = func_11 ( variable_0 , ( variable_25 | variable_26 ) , 0 , NULL , variable_27 , variable_28 , NULL ) ; if ( variable_24 != variable_29 ) CloseHandle ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 = func_3 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_4 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 -> func_1 ( variable_0 ) ; void variable_7 :: func_2 ( char * variable_0 ) variable_4 = func_3 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_6 = func_10 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_11 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; variable_23 = func_10 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_11 ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_21 ) char * variable_0 = * variable_21 ; variable_22 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 = func_14 ( variable_0 , " wb + " ) ; if ( variable_21 != NULL ) fclose ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) variable_6 = func_10 ( variable_0 , L " wb + " ) if ( variable_6 != NULL ) fclose ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) variable_6 . func_6 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 . func_14 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) variable_0 [ variable_6 ] = ' \0 ' ; fclose ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_23 ) char * variable_0 = * variable_23 ; variable_24 = func_11 ( variable_0 , ( variable_25 | variable_26 ) , 0 , NULL , variable_27 , variable_28 , NULL ) ; if ( variable_24 != variable_29 ) CloseHandle ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . variable_7 = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_4 = func_3 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 -> func_8 ( variable_0 ) ; void variable_22 :: func_9 ( char * variable_0 ) variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . func_9 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 = func_3 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) variable_6 = func_4 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_5 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 -> func_2 ( variable_0 ) ; void variable_7 :: func_3 ( wchar_t * variable_0 ) variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_6 . func_5 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 = func_4 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 -> func_1 ( variable_0 ) ; void variable_7 :: func_2 ( char * variable_0 ) variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , wchar_t * > variable_6 ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 = func_3 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_4 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) variable_23 = func_11 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , wchar_t * > variable_6 ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) variable_6 . func_6 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 = func_14 ( variable_0 , ( variable_22 | variable_23 ) , 0 , NULL , variable_24 , variable_25 , NULL ) ; if ( variable_21 != variable_26 ) CloseHandle ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , wchar_t * > variable_6 ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 -> func_9 ( variable_0 ) ; void variable_24 :: func_10 ( char * variable_0 ) variable_25 = func_11 ( variable_0 , variable_26 | variable_27 , variable_28 | variable_29 ) ; if ( variable_25 != - 1 ) func_12 ( variable_25 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . func_1 ( variable_0 ) ; variable_6 . func_2 ( variable_0 ) ; variable_6 . func_3 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) variable_23 = func_13 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_14 ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; variable_22 = func_10 ( variable_0 , variable_23 | variable_24 , variable_25 | variable_26 ) ; if ( variable_22 != - 1 ) func_11 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) wchar_t * variable_0 = variable_6 . variable_7 ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . func_1 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_2 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_3 ( variable_6 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . func_1 ( variable_0 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_6 = func_9 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( char * variable_23 [ ] ) char * variable_0 = variable_23 [ 2 ] ; variable_24 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_5 = func_9 ( variable_0 , " wb + " ) ; if ( variable_5 != NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_21 ) char * variable_0 = * variable_21 ; variable_22 = func_10 ( variable_0 , " wb + " ) ; if ( variable_22 != NULL ) fclose ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 -> func_1 ( variable_0 ) ; void variable_7 :: func_2 ( char * variable_0 ) variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) variable_6 = func_6 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . variable_22 = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_21 ) char * variable_0 = * variable_21 ; variable_22 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . variable_7 = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 = func_3 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_23 ) char * variable_0 = * variable_23 ; variable_24 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) variable_6 . func_8 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) variable_21 . func_16 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_3 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 = func_3 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_5 = func_3 ( variable_0 , ( variable_6 | variable_7 ) , 0 , NULL , variable_8 , variable_9 , NULL ) ; if ( variable_5 != variable_10 ) CloseHandle ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_4 = func_3 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_21 = func_10 ( variable_0 , ( variable_22 | variable_23 ) , 0 , NULL , variable_24 , variable_25 , NULL ) ; if ( variable_21 != variable_26 ) CloseHandle ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_6 = func_3 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; variable_23 = func_10 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_11 ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( wchar_t * variable_6 [ ] ) wchar_t * variable_0 = variable_6 [ 2 ] ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_6 = func_7 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_8 ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) variable_6 = func_8 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . variable_6 = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( structType variable_5 ) char * variable_0 = variable_5 . variable_6 ; variable_7 = func_3 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_23 ) char * variable_0 = * variable_23 ; variable_24 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) variable_23 . func_15 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 -> func_8 ( variable_0 ) ; void variable_22 :: func_9 ( char * variable_0 ) variable_23 = func_10 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . variable_22 = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; variable_22 = func_10 ( variable_0 , ( variable_23 | variable_24 ) , 0 , NULL , variable_25 , variable_26 , NULL ) ; if ( variable_22 != variable_27 ) CloseHandle ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_6 = func_9 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_10 ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_23 ) char * * variable_24 = ( char * * ) variable_23 ; char * variable_0 = ( * variable_24 ) ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_6 ) wchar_t * variable_0 = * variable_6 ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 0 ] = variable_0 ; variable_5 [ 1 ] = variable_0 ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( variable_6 < int , char * > variable_5 ) char * variable_0 = variable_5 [ 2 ] ; variable_7 = func_3 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_4 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_4 = func_7 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) variable_21 . func_12 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . variable_7 = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_23 ) char * variable_0 = * variable_23 ; variable_24 = func_11 ( variable_0 , variable_25 | variable_26 , variable_27 | variable_28 ) ; if ( variable_24 != - 1 ) func_12 ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_6 . func_7 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 -> func_9 ( variable_0 ) ; void variable_24 :: func_10 ( char * variable_0 ) variable_25 = func_11 ( variable_0 , " wb + " ) ; if ( variable_25 != NULL ) fclose ( variable_25 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; variable_23 = func_10 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_21 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 = func_3 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_4 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 -> func_8 ( variable_0 ) ; void variable_22 :: func_9 ( char * variable_0 ) variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) variable_23 = func_11 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_12 ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 0 ] = variable_0 ; variable_23 [ 1 ] = variable_0 ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( variable_24 < int , char * > variable_23 ) char * variable_0 = variable_23 [ 2 ] ; variable_25 = func_11 ( variable_0 , ( variable_26 | variable_27 ) , 0 , NULL , variable_28 , variable_29 , NULL ) ; if ( variable_25 != variable_30 ) CloseHandle ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . variable_6 = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( structType variable_5 ) char * variable_0 = variable_5 . variable_6 ; variable_7 = func_3 ( variable_0 , " wb + " ) ; if ( variable_7 != NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . variable_24 = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( structType variable_23 ) char * variable_0 = variable_23 . variable_24 ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . variable_24 = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( structType variable_23 ) char * variable_0 = variable_23 . variable_24 ; variable_25 = func_11 ( variable_0 , variable_26 | variable_27 , variable_28 | variable_29 ) ; if ( variable_25 != - 1 ) func_12 ( variable_25 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_4 = func_3 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) variable_23 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_6 . func_5 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_5 ) char * * variable_6 = ( char * * ) variable_5 ; char * variable_0 = ( * variable_6 ) ; variable_7 = func_3 ( variable_0 , " wb + " ) ; if ( variable_7 != NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_0 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 = func_17 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . variable_22 = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; variable_23 = func_10 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . func_8 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 = func_4 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_5 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 0 ] = variable_0 ; variable_23 [ 1 ] = variable_0 ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( variable_24 < int , char * > variable_23 ) char * variable_0 = variable_23 [ 2 ] ; variable_25 = func_11 ( variable_0 , variable_26 | variable_27 , variable_28 | variable_29 ) ; if ( variable_25 != - 1 ) func_12 ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 . func_14 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) variable_23 = func_15 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) variable_0 [ variable_6 ] = ' \0 ' ; fclose ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . variable_24 = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( structType variable_23 ) char * variable_0 = variable_23 . variable_24 ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . func_8 ( variable_21 . end ( ) , 1 , variable_0 ) ; variable_21 . func_9 ( variable_21 . end ( ) , 1 , variable_0 ) ; variable_21 . func_10 ( variable_21 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_6 = func_3 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_4 ( variable_6 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 -> func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_6 = func_10 ( variable_0 , " wb + " ) ; if ( variable_6 != NULL ) fclose ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) variable_23 = func_13 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_5 = func_7 ( variable_0 , " wb + " ) ; if ( variable_5 != NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_2 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) variable_21 . func_16 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_6 = func_5 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_6 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 0 ] = variable_0 ; variable_5 [ 1 ] = variable_0 ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( variable_6 < int , char * > variable_5 ) char * variable_0 = variable_5 [ 2 ] ; variable_7 = func_3 ( variable_0 , " wb + " ) ; if ( variable_7 != NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . variable_22 = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; variable_23 = func_10 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_11 ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) variable_6 = func_8 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_23 ) char * variable_0 = * variable_23 ; variable_24 = func_11 ( variable_0 , " wb + " ) ; if ( variable_24 != NULL ) fclose ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) variable_23 . func_13 ( ( char * ) variable_0 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) variable_23 . func_15 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; variable_22 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; variable_22 = func_10 ( variable_0 , " wb + " ) ; if ( variable_22 != NULL ) fclose ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_6 ) wchar_t * variable_0 = * variable_6 ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = wcslen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 = func_17 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 = func_3 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_4 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 -> func_2 ( variable_0 ) ; void variable_7 :: func_3 ( char * variable_0 ) variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_5 = func_5 ( variable_0 , ( variable_6 | variable_7 ) , 0 , NULL , variable_8 , variable_9 , NULL ) ; if ( variable_5 != variable_10 ) CloseHandle ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_23 ) char * * variable_24 = ( char * * ) variable_23 ; char * variable_0 = ( * variable_24 ) ; variable_25 = func_11 ( variable_0 , ( variable_26 | variable_27 ) , 0 , NULL , variable_28 , variable_29 , NULL ) ; if ( variable_25 != variable_30 ) CloseHandle ( variable_25 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 -> func_8 ( variable_0 ) ; void variable_22 :: func_9 ( char * variable_0 ) variable_23 = func_10 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_11 ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 -> func_9 ( variable_0 ) ; void variable_24 :: func_10 ( char * variable_0 ) variable_25 = func_11 ( variable_0 , ( variable_26 | variable_27 ) , 0 , NULL , variable_28 , variable_29 , NULL ) ; if ( variable_25 != variable_30 ) CloseHandle ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_5 . func_9 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_5 = func_5 ( variable_0 , " wb + " ) ; if ( variable_5 != NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_21 ) char * variable_0 = * variable_21 ; variable_22 = func_10 ( variable_0 , ( variable_23 | variable_24 ) , 0 , NULL , variable_25 , variable_26 , NULL ) ; if ( variable_22 != variable_27 ) CloseHandle ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) variable_0 [ variable_6 ] = ' \0 ' ; fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) variable_6 . func_8 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 = func_3 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) wchar_t * variable_0 = variable_6 . variable_7 ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 . func_17 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) variable_6 = func_6 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_7 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \r ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \n ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) variable_6 = func_10 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 0 ] = variable_0 ; variable_5 [ 1 ] = variable_0 ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( variable_6 < int , char * > variable_5 ) char * variable_0 = variable_5 [ 2 ] ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( wchar_t * variable_6 [ ] ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_7 = func_4 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . variable_24 = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( structType variable_23 ) char * variable_0 = variable_23 . variable_24 ; variable_25 = func_11 ( variable_0 , ( variable_26 | variable_27 ) , 0 , NULL , variable_28 , variable_29 , NULL ) ; if ( variable_25 != variable_30 ) CloseHandle ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) variable_23 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) variable_6 . func_8 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_5 . func_7 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = wcslen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( wchar_t * variable_6 [ ] ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 0 ] = variable_0 ; variable_23 [ 1 ] = variable_0 ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( variable_24 < int , char * > variable_23 ) char * variable_0 = variable_23 [ 2 ] ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; variable_23 = func_10 ( variable_0 , " wb + " ) ; if ( variable_23 != NULL ) fclose ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 [ 2 ] = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 = func_3 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_4 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) variable_21 = func_16 ( variable_0 , " wb + " ) ; if ( variable_21 != NULL ) fclose ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 = func_3 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) variable_23 = func_15 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_16 ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( wchar_t * variable_6 [ ] ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . variable_24 = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( structType variable_23 ) char * variable_0 = variable_23 . variable_24 ; variable_25 = func_11 ( variable_0 , " wb + " ) ; if ( variable_25 != NULL ) fclose ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) variable_21 = func_16 ( variable_0 , ( variable_22 | variable_23 ) , 0 , NULL , variable_24 , variable_25 , NULL ) ; if ( variable_21 != variable_26 ) CloseHandle ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_5 . func_5 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_6 . func_9 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_21 = func_10 ( variable_0 , " wb + " ) ; if ( variable_21 != NULL ) fclose ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) variable_23 = func_11 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) variable_21 = func_16 ( variable_0 , variable_22 | variable_23 , variable_24 | variable_25 ) ; if ( variable_21 != - 1 ) func_17 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_5 = func_3 ( variable_0 , variable_6 | variable_7 , variable_8 | variable_9 ) ; if ( variable_5 != - 1 ) func_4 ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 . func_9 ( variable_23 . end ( ) , 1 , variable_0 ) ; variable_23 . func_10 ( variable_23 . end ( ) , 1 , variable_0 ) ; variable_23 . func_11 ( variable_23 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \r ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \n ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . variable_7 = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 = func_3 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_4 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) wchar_t * variable_0 = variable_6 . variable_7 ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) variable_23 = func_17 ( variable_0 , variable_24 | variable_25 , variable_26 | variable_27 ) ; if ( variable_23 != - 1 ) func_18 ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_5 . func_5 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_4 = func_5 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( variable_2 - variable_6 > 1 ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) != NULL ) variable_6 = wcslen ( variable_0 ) ; if ( variable_6 > 0 && variable_0 [ variable_6 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_23 ) char * * variable_24 = ( char * * ) variable_23 ; char * variable_0 = ( * variable_24 ) ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) variable_6 . func_8 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) variable_23 = func_13 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . func_1 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 0 ] = variable_0 ; variable_23 [ 1 ] = variable_0 ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( variable_24 < int , char * > variable_23 ) char * variable_0 = variable_23 [ 2 ] ; variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 = func_4 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , wchar_t * > variable_6 ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_23 ) char * * variable_24 = ( char * * ) variable_23 ; char * variable_0 = ( * variable_24 ) ; variable_25 = func_11 ( variable_0 , variable_26 | variable_27 , variable_28 | variable_29 ) ; if ( variable_25 != - 1 ) func_12 ( variable_25 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . variable_6 = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( structType variable_5 ) char * variable_0 = variable_5 . variable_6 ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_6 ) char * * variable_7 = ( char * * ) variable_6 ; char * variable_0 = ( * variable_7 ) ; variable_4 = func_3 ( variable_0 , " wb + " ) ; if ( variable_4 != NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , char * > variable_6 ) char * variable_0 = variable_6 [ 2 ] ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) variable_21 = func_12 ( variable_0 , " wb + " ) ; if ( variable_21 != NULL ) fclose ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 0 ] = variable_0 ; variable_5 [ 1 ] = variable_0 ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( variable_6 < int , char * > variable_5 ) char * variable_0 = variable_5 [ 2 ] ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( char * variable_23 [ ] ) char * variable_0 = variable_23 [ 2 ] ; variable_24 = func_11 ( variable_0 , variable_25 | variable_26 , variable_27 | variable_28 ) ; if ( variable_24 != - 1 ) func_12 ( variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) variable_6 = func_4 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 -> func_8 ( variable_0 ) ; void variable_22 :: func_9 ( char * variable_0 ) variable_23 = func_10 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 0 ] = variable_0 ; variable_23 [ 1 ] = variable_0 ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( variable_24 < int , char * > variable_23 ) char * variable_0 = variable_23 [ 2 ] ; variable_25 = func_11 ( variable_0 , " wb + " ) ; if ( variable_25 != NULL ) fclose ( variable_25 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) variable_21 . func_12 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 = func_4 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_5 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_5 = func_7 ( variable_0 , ( variable_6 | variable_7 ) , 0 , NULL , variable_8 , variable_9 , NULL ) ; if ( variable_5 != variable_10 ) CloseHandle ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_6 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( wchar_t * variable_6 [ ] ) wchar_t * variable_0 = variable_6 [ 2 ] ; variable_7 = func_4 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_5 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . variable_22 = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; variable_23 = func_10 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \r ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; variable_23 = strchr ( variable_2 , ' \n ' ) ; if ( variable_23 ) * variable_23 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) wchar_t * * variable_7 = ( wchar_t * * ) variable_6 ; wchar_t * variable_0 = ( * variable_7 ) ; variable_8 = func_4 ( variable_0 , variable_9 | variable_10 , variable_11 | variable_12 ) ; if ( variable_8 != - 1 ) func_5 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; variable_0 [ variable_4 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; variable_23 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . variable_6 = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( structType variable_5 ) char * variable_0 = variable_5 . variable_6 ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 . variable_6 = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( structType variable_5 ) char * variable_0 = variable_5 . variable_6 ; variable_7 = func_3 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_4 ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_6 ) char * variable_0 = * variable_6 ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 0 ] = variable_0 ; variable_5 [ 1 ] = variable_0 ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( variable_6 < int , char * > variable_5 ) char * variable_0 = variable_5 [ 2 ] ; variable_7 = func_3 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 . variable_7 = variable_0 ; func_1 ( variable_6 ) ; void func_2 ( structType variable_6 ) char * variable_0 = variable_6 . variable_7 ; variable_8 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_6 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) variable_6 = func_4 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) variable_21 = func_14 ( variable_0 , variable_22 | variable_23 , variable_24 | variable_25 ) ; if ( variable_21 != - 1 ) func_15 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 -> func_2 ( variable_0 ) ; void variable_7 :: func_3 ( wchar_t * variable_0 ) variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) variable_6 = func_10 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_11 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) variable_6 = func_8 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_9 ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_6 ( variable_17 ) ; variable_6 . variable_18 = func_7 ( variable_19 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( char ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) variable_0 [ variable_7 + variable_5 / sizeof ( char ) ] = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \r ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; variable_21 = strchr ( variable_0 , ' \n ' ) ; if ( variable_21 ) * variable_21 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) variable_21 = func_12 ( variable_0 , variable_22 | variable_23 , variable_24 | variable_25 ) ; if ( variable_21 != - 1 ) func_13 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 [ 2 ] = variable_0 ; func_1 ( variable_5 ) ; void func_2 ( char * variable_5 [ ] ) char * variable_0 = variable_5 [ 2 ] ; variable_6 = func_3 ( variable_0 , " wb + " ) ; if ( variable_6 != NULL ) fclose ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_5 ) char * variable_0 = * variable_5 ; variable_6 = func_3 ( variable_0 , " wb + " ) ; if ( variable_6 != NULL ) fclose ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) variable_6 . func_6 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_23 ) char * * variable_24 = ( char * * ) variable_23 ; char * variable_0 = ( * variable_24 ) ; variable_25 = func_11 ( variable_0 , " wb + " ) ; if ( variable_25 != NULL ) fclose ( variable_25 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) variable_6 = func_6 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_6 ) wchar_t * variable_0 = * variable_6 ; variable_7 = func_4 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_5 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 . func_8 ( variable_0 ) ; variable_21 . func_9 ( variable_0 ) ; variable_21 . func_10 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_5 ) char * * variable_6 = ( char * * ) variable_5 ; char * variable_0 = ( * variable_6 ) ; variable_7 = func_3 ( variable_0 , ( variable_8 | variable_9 ) , 0 , NULL , variable_10 , variable_11 , NULL ) ; if ( variable_7 != variable_12 ) CloseHandle ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) variable_6 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 = wcslen ( variable_1 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_1 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_5 = func_9 ( variable_0 , variable_6 | variable_7 , variable_8 | variable_9 ) ; if ( variable_5 != - 1 ) func_10 ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_5 . func_9 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_3 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_3 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; variable_22 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_5 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_6 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_7 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_9 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_10 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_5 ) char * variable_0 = * variable_5 ; variable_6 = func_3 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_4 ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_5 = func_5 ( variable_0 , variable_6 | variable_7 , variable_8 | variable_9 ) ; if ( variable_5 != - 1 ) func_6 ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_8 ( variable_21 ) ; void func_9 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; variable_23 = func_10 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) variable_6 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; if ( variable_2 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_6 = func_7 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_5 ) char * * variable_6 = ( char * * ) variable_5 ; char * variable_0 = ( * variable_6 ) ; variable_7 = func_3 ( variable_0 , variable_8 | variable_9 , variable_10 | variable_11 ) ; if ( variable_7 != - 1 ) func_4 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) variable_21 = func_12 ( variable_0 , ( variable_22 | variable_23 ) , 0 , NULL , variable_24 , variable_25 , NULL ) ; if ( variable_21 != variable_26 ) CloseHandle ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = wcslen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == L ' \n ' )	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 0 ] = variable_0 ; variable_6 [ 1 ] = variable_0 ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( variable_7 < int , wchar_t * > variable_6 ) wchar_t * variable_0 = variable_6 [ 2 ] ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) variable_23 = func_15 ( variable_0 , ( variable_24 | variable_25 ) , 0 , NULL , variable_26 , variable_27 , NULL ) ; if ( variable_23 != variable_28 ) CloseHandle ( variable_23 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgets ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) variable_0 [ variable_6 ] = ' \0 ' ; fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_6 . func_9 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 -> func_9 ( variable_0 ) ; void variable_24 :: func_10 ( char * variable_0 ) variable_25 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_6 . func_10 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) variable_23 . func_13 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) variable_6 . func_6 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) variable_6 = func_4 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_5 ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_5 = func_3 ( variable_0 , " wb + " ) ; if ( variable_5 != NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) wchar_t * * variable_7 = ( wchar_t * * ) variable_6 ; wchar_t * variable_0 = ( * variable_7 ) ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) wchar_t * variable_0 = variable_6 . variable_7 ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_8 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) variable_7 = recv ( variable_11 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( wchar_t ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ;	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ variable_3 ] = L " " variable_1 = variable_2 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_1 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( wchar_t * variable_5 ) variable_0 = variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; FILE * variable_7 ; if ( variable_2 - variable_6 > 1 ) variable_7 = fopen ( variable_8 , " r " ) ; if ( variable_7 != NULL ) if ( fgetws ( variable_0 + variable_6 , ( int ) ( variable_2 - variable_6 ) , variable_7 ) == NULL ) fclose ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) wchar_t * * variable_7 = ( wchar_t * * ) variable_6 ; wchar_t * variable_0 = ( * variable_7 ) ; variable_8 = func_4 ( variable_0 , ( variable_9 | variable_10 ) , 0 , NULL , variable_11 , variable_12 , NULL ) ; if ( variable_8 != variable_13 ) CloseHandle ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_20 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) variable_6 = func_6 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_7 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_6 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_7 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_10 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_3 * variable_4 = new func_1 ( variable_0 ) ; variable_3 :: func_2 ( char * variable_5 ) variable_0 = variable_5 ; WSADATA variable_6 ; int variable_7 ; struct sockaddr_in variable_8 ; size_t variable_9 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_6 ) != variable_10 ) variable_11 = func_5 ( variable_12 , variable_13 , variable_14 ) ; if ( variable_11 == variable_15 ) memset ( & variable_8 , 0 , sizeof ( variable_8 ) ) ; variable_8 . variable_16 = variable_12 ; variable_8 . variable_17 . variable_18 = variable_19 ; variable_8 . variable_20 = func_6 ( variable_21 ) ; if ( bind ( variable_11 , ( struct sockaddr * ) & variable_8 , sizeof ( variable_8 ) ) == variable_22 ) if ( func_7 ( variable_11 , variable_23 ) == variable_22 ) variable_24 = func_8 ( variable_11 , NULL , NULL ) ; if ( variable_24 == variable_22 ) variable_7 = recv ( variable_24 , ( char * ) ( variable_0 + variable_9 ) , sizeof ( char ) * ( variable_2 - variable_9 - 1 ) , 0 ) ; if ( variable_7 == variable_22 || variable_7 == 0 ) variable_0 [ variable_9 + variable_7 / sizeof ( char ) ] = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \r ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; variable_25 = strchr ( variable_0 , ' \n ' ) ; if ( variable_25 ) * variable_25 = ' \0 ' ; while ( 0 ) if ( variable_11 != variable_15 ) func_9 ( variable_11 ) ; if ( variable_24 != variable_15 ) func_10 ( variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; while ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( variable_22 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_6 = func_10 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ; variable_6 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_0 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ; variable_23 [ 2 ] = variable_0 ; func_9 ( variable_23 ) ; void func_10 ( char * variable_23 [ ] ) char * variable_0 = variable_23 [ 2 ] ; variable_24 . func_11 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_5 ) char * * variable_6 = ( char * * ) variable_5 ; char * variable_0 = ( * variable_6 ) ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_5 ) char * variable_0 = * variable_5 ; variable_6 = func_3 ( variable_0 , ( variable_7 | variable_8 ) , 0 , NULL , variable_9 , variable_10 , NULL ) ; if ( variable_6 != variable_11 ) CloseHandle ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_21 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( char ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) variable_21 = func_10 ( variable_0 , variable_22 | variable_23 , variable_24 | variable_25 ) ; if ( variable_21 != - 1 ) func_11 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) variable_6 = func_8 ( variable_0 , variable_7 | variable_8 , variable_9 | variable_10 ) ; if ( variable_6 != - 1 ) func_9 ( variable_6 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 == 5 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_5 = func_7 ( variable_0 , variable_6 | variable_7 , variable_8 | variable_9 ) ; if ( variable_5 != - 1 ) func_8 ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; variable_5 = variable_0 ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_5 ) char * * variable_6 = ( char * * ) variable_5 ; char * variable_0 = ( * variable_6 ) ; variable_7 . func_3 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_5 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_6 ( variable_16 ) ; variable_5 . variable_17 = func_7 ( variable_18 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_9 ( variable_8 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; switch ( 6 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ variable_3 ] = L " " variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = variable_17 ; variable_6 . variable_18 = func_4 ( variable_19 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) if ( func_5 ( variable_9 , variable_21 ) == variable_20 ) variable_22 = func_6 ( variable_9 , NULL , NULL ) ; if ( variable_22 == variable_20 ) variable_5 = recv ( variable_22 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_3 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ; if ( variable_22 != variable_13 ) func_8 ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; char * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) strncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 [ 2 ] = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( char * variable_6 [ ] ) char * variable_0 = variable_6 [ 2 ] ; variable_7 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( variable_19 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( variable_2 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( variable_2 - variable_4 ) , variable_5 ) == NULL ) fclose ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , variable_2 - variable_4 - 1 ) ; return variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; variable_6 . variable_7 = variable_0 ; func_2 ( variable_6 ) ; void func_3 ( structType variable_6 ) wchar_t * variable_0 = variable_6 . variable_7 ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) wchar_t * * variable_7 = ( wchar_t * * ) variable_6 ; wchar_t * variable_0 = ( * variable_7 ) ; variable_8 . func_4 ( ( char * ) variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , variable_2 - variable_3 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_6 ) wchar_t * * variable_7 = ( wchar_t * * ) variable_6 ; wchar_t * variable_0 = ( * variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; char variable_1 [ variable_2 ] = " " ; variable_0 = variable_1 ; size_t variable_3 = strlen ( variable_0 ) ; if ( variable_2 - variable_3 > 1 ) if ( fgets ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) != NULL ) variable_3 = strlen ( variable_0 ) ; if ( variable_3 > 0 && variable_0 [ variable_3 - 1 ] == ' \n ' ) variable_0 [ variable_3 - 1 ] = ' \0 ' ; variable_0 [ variable_3 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_5 = func_9 ( variable_0 , ( variable_6 | variable_7 ) , 0 , NULL , variable_8 , variable_9 , NULL ) ; if ( variable_5 != variable_10 ) CloseHandle ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; size_t variable_7 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_4 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_14 = variable_10 ; variable_6 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_6 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_20 ) variable_5 = recv ( variable_9 , ( char * ) ( variable_0 + variable_7 ) , sizeof ( wchar_t ) * ( variable_2 - variable_7 - 1 ) , 0 ) ; if ( variable_5 == variable_20 || variable_5 == 0 ) while ( 0 ) if ( variable_9 != variable_13 ) func_7 ( variable_9 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 1 ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( variable_2 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ variable_2 ] = L " " variable_0 = variable_1 ; if ( 5 == 5 ) size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( variable_2 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( variable_2 - variable_3 ) , variable_4 ) == NULL ) fclose ( variable_4 ) ;	-1
