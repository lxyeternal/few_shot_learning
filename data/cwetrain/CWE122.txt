static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_2 . variable_3 = variable_1 ; variable_0 * variable_1 = variable_2 . variable_4 ; func_1 ( * variable_1 ) ; void func_2 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_2 -> func_1 ( variable_1 ) ; void variable_3 :: func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = ( int64_t * ) malloc ( sizeof ( * variable_2 ) ) ; func_1 ( * variable_2 ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_3 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; switch ( 6 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_1 , strlen ( variable_1 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . variable_20 = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( structType variable_19 ) int variable_18 = variable_19 . variable_20 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_21 [ variable_18 ] = 1 ; func_10 ( variable_21 [ variable_22 ] ) ; void func_11 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_cpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_cpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_4 [ 0 ] = variable_1 ; variable_4 [ 1 ] = variable_1 ; variable_4 [ 2 ] = variable_1 ; func_1 ( variable_4 ) ; void func_2 ( variable_5 < int , variable_0 * > variable_4 ) variable_0 * variable_1 = variable_4 [ 2 ] ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_2 , variable_6 -> variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) if ( variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) variable_22 [ variable_21 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_0 * variable_3 = variable_1 ; variable_0 * variable_1 = variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_5 ) int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__CWE135_67_structType variable_1 ) void * variable_0 = variable_1 . variable_3 ; size_t variable_4 = strlen ( ( char * ) variable_0 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , 1 ) ; memcpy ( variable_5 , variable_0 , ( variable_4 + 1 ) ) ; func_3 ( ( char * ) variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_1 == 5 ) int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_1 < int , int * > variable_2 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int * > variable_2 ) int * variable_0 = variable_2 [ 2 ] ; int variable_3 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_3 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 == 5 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 == 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; * variable_1 = variable_0 ; memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < void * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < void * > variable_1 ) void * variable_2 = variable_1 . func_3 ( ) ; size_t variable_3 = wcslen ( ( wchar_t * ) variable_2 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_2 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_4 ( ( wchar_t * ) variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; int & variable_1 = variable_0 ; variable_0 = - 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) int variable_0 = variable_1 ; int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " memcpy ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; variable_4 [ 50 - 1 ] = L ' \0 ' func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_22 ) int variable_23 ; int * variable_24 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_23 = 0 ; variable_23 < 10 ; variable_23 ++ ) variable_24 [ variable_23 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_24 [ variable_0 ] = 1 ; free ( variable_24 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcat ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_67_structType variable_1 ; variable_0 = - 1 ; char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; variable_1 . variable_5 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_67_structType variable_1 ) int variable_0 = variable_1 . variable_5 ; int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_6 ( variable_0 ) ; void func_7 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcsncat ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = L ' \0 ' func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; * variable_1 = variable_0 ; wcsncat ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( void * variable_0 ) size_t variable_5 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_6 = ( void * ) calloc ( variable_5 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_6 , variable_0 , ( variable_5 + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( ( wchar_t * ) variable_6 ) ; void func_4 ( const wchar_t * variable_7 ) if ( variable_7 != NULL ) wprintf ( L " % ls \n " , variable_7 ) free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( * variable_1 ) ; void func_8 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strcat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = func_1 ( ) ; if ( variable_2 ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) func_14 ( variable_18 ) ; void func_15 ( int variable_18 ) if ( variable_18 >= 0 ) variable_19 [ variable_18 ] = 1 ; func_16 ( variable_19 [ variable_20 ] ) ; void func_17 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; int variable_21 = variable_20 ; int variable_20 = variable_21 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_22 [ variable_20 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_1 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_5 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_7 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_8 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 50 - 1 variable_2 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_2 ; if ( variable_1 == 5 ) size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_2 , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( variable_0 ) ; static void func_8 ( int variable_0 ) if ( variable_19 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( variable_1 [ 0 ] ) ; void func_8 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) func_3 ( variable_0 , 100 , " %s " , variable_3 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; size_t variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_2 [ 100 - 1 ] = L ' \0 ' free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_5 = atoi ( variable_2 ) ; if ( variable_5 >= 0 && variable_5 < ( 10 ) ) variable_6 [ variable_5 ] = 1 ; func_1 ( variable_6 [ variable_0 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_6	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 ; variable_3 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * variable_2 [ 5 ] ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 * variable_2 [ ] ) variable_0 * variable_1 = variable_2 [ 2 ] ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 1 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( 1 ) int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " memmove ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; variable_4 [ 50 - 1 ] = L ' \0 ' func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcscat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_3 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) variable_22 [ variable_21 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; static void func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcscat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
variable_0 :: ~ func_0 ( ) TwoIntsClass variable_1 [ 100 ] ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] . variable_3 = 0 ; variable_1 [ variable_2 ] . variable_4 = 0 ; memcpy ( variable_5 , variable_1 , 100 * sizeof ( variable_6 ) ) ; func_1 ( variable_5 [ 0 ] . variable_3 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_4 . variable_5 = variable_1 ; func_1 ( variable_4 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_67_structType variable_4 ) variable_0 * variable_1 = variable_4 . variable_5 ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_2 , variable_6 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 2 ] = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( int variable_19 [ ] ) int variable_18 = variable_19 [ 2 ] ; if ( variable_18 >= 0 ) variable_20 [ variable_18 ] = 1 ; func_10 ( variable_20 [ variable_21 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 1 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; int variable_19 = variable_18 ; int variable_18 = variable_19 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_20 [ variable_18 ] = 1 ; func_8 ( variable_20 [ variable_21 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_3 , 100 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( char * ) variable_1 -> variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_5 ( ( char * ) variable_1 -> variable_5 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_7 ( ( char * ) variable_1 -> variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_9 ( ( char * ) variable_1 -> variable_2 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_11 ( ( char * ) variable_1 -> variable_5 ) ; void func_12 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_13 ( ( char * ) variable_1 -> variable_2 ) ; void func_14 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( int & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_20 ) int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 10 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcscpy ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int * variable_1 = variable_0 ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_1 = * variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int * variable_3 ) variable_0 = variable_3 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) int variable_4 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_4 ( variable_0 [ 0 ] ) ; void func_5 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) func_15 ( variable_20 ) ; void func_16 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_17 ( variable_21 [ variable_22 ] ) ; void func_18 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) switch ( 6 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_19 >= 0 && variable_19 < ( 10 ) ) variable_20 [ variable_19 ] = 1 ; func_8 ( variable_20 [ variable_21 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 1 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( 1 ) int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int variable_0 ) int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( variable_0 ) ; int func_2 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) return variable_0 ; int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; int * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int * variable_0 = * variable_1 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; variable_3 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 != 5 ) int variable_22 ; int * variable_23 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_22 = 0 ; variable_22 < 10 ; variable_22 ++ ) variable_23 [ variable_22 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_23 [ variable_0 ] = 1 ; free ( variable_23 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_3 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcscpy ( variable_4 , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " func_4 ( variable_4 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cat_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wcscat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_5 ) int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; func_2 ( variable_0 ) ; void func_3 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( 5 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 7 ; if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wcscpy ( variable_4 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( & variable_3 [ 0 ] ) ; void func_5 ( const twoIntsStruct * variable_8 ) printf ( " %d -- %d \n " , variable_8 -> variable_6 , variable_8 -> variable_7 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; if ( func_3 ( ) ) static int func_4 ( ) return 1 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; if ( func_3 ( ) ) int func_4 ( ) return ( rand ( ) % 2 ) ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; func_1 ( variable_0 , 100 , L " %s " , variable_4 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) switch ( 6 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_20 ) int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int * variable_1 = variable_0 ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 . func_3 ( ) ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_4 ( variable_2 [ 0 ] ) ; void func_5 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_1 != 5 ) int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) if ( 5 == 5 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncat_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wcsncat ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; if ( variable_3 ) size_t variable_4 = strlen ( ( char * ) variable_0 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , 1 ) ; memcpy ( variable_5 , variable_0 , ( variable_4 + 1 ) ) ; func_1 ( ( char * ) variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; wcscpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) func_15 ( variable_20 ) ; void func_16 ( int variable_20 ) if ( variable_20 >= 0 ) variable_21 [ variable_20 ] = 1 ; func_17 ( variable_21 [ variable_22 ] ) ; void func_18 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_ncpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_ncpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_3 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( int variable_0 ) func_9 ( variable_0 ) ; void func_10 ( int variable_0 ) int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_src_wchar_t_cpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; SOCKET variable_8 = variable_9 ; char variable_10 [ variable_11 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_12 ) break ; variable_5 = 1 ; variable_8 = func_5 ( variable_13 , variable_14 , variable_15 ) ; if ( variable_8 == variable_9 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_16 = variable_13 ; variable_7 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_7 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_8 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_22 ) break ; variable_6 = recv ( variable_8 , variable_10 , variable_11 - 1 , 0 ) ; if ( variable_6 == variable_22 || variable_6 == 0 ) break ; variable_10 [ variable_6 ] = ' \0 ' ; variable_0 = atoi ( variable_10 ) ; while ( 0 ) if ( variable_8 != variable_9 ) func_9 ( variable_8 ) ; if ( variable_5 ) func_10 ( ) ; delete variable_2 variable_1 :: ~ func_11 ( ) int * variable_23 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_23 [ variable_24 ] = 0 ; variable_23 [ variable_0 ] = 1 ; for ( variable_24 = 0 ; variable_24 < 10 ; variable_24 ++ ) func_12 ( variable_23 [ variable_24 ] ) ; void func_13 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; free ( variable_23 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; int & variable_1 = variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; int variable_0 = variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; int * variable_0 = variable_1 . variable_3 ; int variable_4 [ 10 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_0 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; int variable_4 = variable_3 ; int variable_3 = variable_4 ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_5 [ variable_3 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; void * variable_2 = variable_0 ; void * variable_0 = variable_2 ; size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcscpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 50 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; char variable_7 [ variable_8 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_9 ) variable_10 = func_5 ( variable_11 , variable_12 , variable_13 ) ; if ( variable_10 == variable_14 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_15 = variable_11 ; variable_6 . variable_16 . variable_17 = variable_18 ; variable_6 . variable_19 = func_6 ( variable_20 ) ; if ( bind ( variable_10 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_21 ) if ( func_7 ( variable_10 , variable_22 ) == variable_21 ) variable_23 = func_8 ( variable_10 , NULL , NULL ) ; if ( variable_23 == variable_21 ) variable_5 = recv ( variable_23 , variable_7 , variable_8 - 1 , 0 ) ; if ( variable_5 == variable_21 || variable_5 == 0 ) variable_7 [ variable_5 ] = ' \0 ' ; variable_0 = atoi ( variable_7 ) ; while ( 0 ) if ( variable_10 != variable_14 ) func_9 ( variable_10 ) ; if ( variable_23 != variable_14 ) func_10 ( variable_23 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_2 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 10 + 1 ] = variable_5 ; strncpy ( variable_0 , variable_4 , strlen ( variable_4 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( variable_0 ) ; static int func_2 ( int variable_0 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; return variable_0 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_5 ) int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; void * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( void * variable_1 [ ] ) void * variable_0 = variable_1 [ 2 ] ; size_t variable_3 = strlen ( ( char * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , 1 ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) ) ; func_3 ( ( char * ) variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_8 ( variable_0 ) ; void func_9 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; * variable_19 = variable_18 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_20 [ variable_18 ] = 1 ; func_8 ( variable_20 [ variable_21 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_8 ( variable_0 ) ; void func_9 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_1 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) variable_22 [ variable_21 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 = variable_2 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; int variable_2 ; variable_2 = - 1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char variable_3 [ variable_4 ] = " " ; if ( fgets ( variable_3 , variable_4 , variable_5 ) != NULL ) variable_2 = atoi ( variable_3 ) ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) int variable_0 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_0 = 0 ; variable_0 < 10 ; variable_0 ++ ) variable_6 [ variable_0 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_6 [ variable_2 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( * variable_1 ) ; void func_6 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void variable_0 :: func_0 ( variable_1 * variable_2 ) const twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( & variable_2 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 100 ] ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_67_structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * variable_2 = ( int * ) variable_1 ; int variable_0 = ( * variable_2 ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) if ( variable_3 >= 0 ) variable_4 [ variable_3 ] = 1 ; func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_18 ) ; void func_9 ( int * variable_19 ) int variable_18 = * variable_19 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_20 [ variable_18 ] = 1 ; func_10 ( variable_20 [ variable_21 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcsncat ( variable_0 , variable_1 , 100 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; int * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int * variable_0 = * variable_1 ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_18 ) ; void func_9 ( void * variable_19 ) int * variable_20 = ( int * ) variable_19 ; int variable_18 = ( * variable_20 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_21 [ variable_18 ] = 1 ; func_10 ( variable_21 [ variable_22 ] ) ; void func_11 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; if ( variable_3 ) size_t variable_4 = strlen ( ( char * ) variable_0 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , 1 ) ; memcpy ( variable_5 , variable_0 , ( variable_4 + 1 ) ) ; func_1 ( ( char * ) variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_5 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = 7 ; variable_0 = 7 ; if ( func_3 ( ) ) int func_4 ( ) return ( rand ( ) % 2 ) ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = 10 ; if ( func_3 ( ) ) static int func_4 ( ) return 1 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; strcat ( variable_4 , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = new char [ 100 ] ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 -> func_8 ( variable_18 ) ; void variable_20 :: func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_21 [ variable_18 ] = 1 ; func_10 ( variable_21 [ variable_22 ] ) ; void func_11 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_3 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_4 . variable_5 = variable_1 ; variable_0 * variable_1 = variable_4 . variable_6 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_2 , variable_7 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; int * variable_1 = & variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; int variable_0 = * variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_4 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) wcsncat ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_5 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( variable_0 ) ; static void func_8 ( int variable_0 ) int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) variable_22 [ variable_21 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( 1 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; if ( 0 ) size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; size_t variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) if ( 1 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_8 ( variable_19 [ variable_20 ] ) ; void func_9 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wcscat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 = variable_1 ; size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 != 5 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 != 5 ) variable_0 = 7 ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 50 ] = L " " wcsncpy ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; strcpy ( variable_4 , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; int * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int * variable_0 = * variable_1 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( variable_1 [ 0 ] ) ; void func_8 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int * variable_1 = variable_0 ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; return variable_0 ; size_t variable_2 , variable_3 ; variable_3 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( void * variable_19 ) int * variable_20 = ( int * ) variable_19 ; int variable_0 = ( * variable_20 ) ; int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_2 , variable_3 , 100 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) func_9 ( variable_0 , 100 , " %s " , variable_1 ) ; func_10 ( variable_0 ) ; void func_11 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = wcslen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ ) variable_0 [ variable_6 ] = variable_4 [ variable_6 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 . func_3 ( ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_3 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; func_3 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 2147483643L L variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_0 * variable_4 = variable_1 ; variable_0 * variable_1 = variable_4 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_2 , variable_5 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_4 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; static void func_10 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 != 5 ) int variable_22 ; int * variable_23 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_22 = 0 ; variable_22 < 10 ; variable_22 ++ ) variable_23 [ variable_22 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_23 [ variable_0 ] = 1 ; free ( variable_23 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcscat ( variable_4 , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_4 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_rand_67_structType variable_1 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; variable_1 . variable_2 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_rand_67_structType variable_1 ) int variable_0 = variable_1 . variable_2 ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; switch ( 6 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; switch ( 7 ) size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_3 , 100 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( func_9 ( ) ) static int func_10 ( ) return 1 ; int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_3 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_3 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; func_2 ( variable_0 ) ; static void func_3 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; size_t variable_5 , variable_6 ; variable_6 = strlen ( variable_0 ) ; for ( variable_5 = 0 ; variable_5 < variable_6 ; variable_5 ++ ) variable_4 [ variable_5 ] = variable_0 [ variable_5 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( variable_0 * variable_1 ) func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( & variable_1 [ 0 ] ) ; void func_8 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 10 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 50 - 1 variable_2 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_2 ; if ( variable_1 ) size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 10 ; if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; int variable_1 [ 5 ] ; variable_0 = - 1 ; variable_0 = 7 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( int variable_1 [ ] ) int variable_0 = variable_1 [ 2 ] ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncat ( variable_0 , variable_1 , 100 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; func_1 ( variable_0 ) ; static void func_2 ( int variable_0 ) if ( variable_4 ) int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; switch ( 6 ) variable_0 = 10 ; switch ( 7 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( variable_0 ) ; static int func_2 ( int variable_0 ) variable_0 = 7 ; return variable_0 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) int variable_19 = variable_0 ; int variable_0 = variable_19 ; int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; int variable_21 = variable_20 ; int variable_20 = variable_21 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_22 [ variable_20 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void variable_0 :: func_0 ( wchar_t * variable_1 ) const wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_1 , variable_2 , 100 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 , variable_1 ; int variable_2 ; variable_2 = - 1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = 7 ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 1 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; int * variable_0 = variable_1 . variable_3 ; int variable_4 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_4 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 [ 2 ] ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_2 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wcscat ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_0 * variable_3 [ ] ) variable_0 * variable_1 = variable_3 [ 2 ] ; func_3 ( * variable_1 ) ; void func_4 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 , 100 , L " %s " , variable_1 ) func_6 ( variable_0 ) ; void func_7 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( variable_2 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; strncat ( variable_4 , variable_0 , strlen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = 10 ; if ( func_3 ( ) ) int func_4 ( ) return 0 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) if ( variable_18 >= 0 ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_4 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strcat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = new char [ 100 ] ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 < int , int > variable_2 ; variable_0 = - 1 ; variable_0 = 10 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int > variable_2 ) int variable_0 = variable_2 [ 2 ] ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wcsncat ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 100 ] ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 10 + 1 ] = variable_5 ; strcpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_1	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 1 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_3 , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; return variable_0 ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; if ( variable_1 == 5 ) size_t variable_3 = strlen ( ( char * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , 1 ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) ) ; func_1 ( ( char * ) variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; static void func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_67_structType variable_1 ; variable_0 = - 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) variable_1 . variable_20 = variable_0 ; func_7 ( variable_1 ) ; void func_8 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_67_structType variable_1 ) int variable_0 = variable_1 . variable_20 ; int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = new wchar_t [ 10 + 1 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) size_t variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_5 [ variable_4 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_3 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int * variable_1 = variable_0 ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 50 ] = L " " wcscat ( variable_3 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_1 == 5 ) int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " wcsncpy ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_1 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_67_structType variable_1 ) int * variable_0 = variable_1 . variable_2 ; int variable_3 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_3 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 50 ] = L " " memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; int variable_1 [ 5 ] ; variable_0 = - 1 ; variable_0 = 10 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( int variable_1 [ ] ) int variable_0 = variable_1 [ 2 ] ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_1 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 10 + 1 ] = variable_4 ; strcpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 50 ] = L " " wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_6 ( variable_15 ) ; variable_3 . variable_16 = func_7 ( variable_17 ) ; if ( func_8 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( func_9 ( ) ) int func_10 ( ) return 1 ; int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = func_1 ( ) ; if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_1 != 5 ) int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; variable_0 [ 100 - 1 ] = L ' \0 ' func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 10 + 1 ] = variable_5 ; strncpy ( variable_0 , variable_4 , strlen ( variable_4 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memcpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; variable_0 = 7 ; delete variable_2 variable_1 :: ~ func_3 ( ) int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_4 [ variable_5 ] = 0 ; variable_4 [ variable_0 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_4 ( variable_4 [ variable_5 ] ) ; void func_5 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( void * variable_21 ) int * variable_22 = ( int * ) variable_21 ; int variable_20 = ( * variable_22 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; free ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 10 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) void * * variable_3 = ( void * * ) variable_2 ; void * variable_0 = ( * variable_3 ) ; size_t variable_4 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_5 , variable_0 , ( variable_4 + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( ( wchar_t * ) variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; func_3 ( variable_0 , 100 , " %s " , variable_3 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_0 * variable_1 = * variable_2 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; * variable_2 = variable_1 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_3 ) variable_0 * * variable_4 = ( variable_0 * * ) variable_3 ; variable_0 * variable_1 = ( * variable_4 ) ; func_3 ( * variable_1 ) ; void func_4 ( double variable_5 ) printf ( " % g \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_3 ( variable_0 , 100 , " %s " , variable_1 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 5 == 5 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_5 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_7 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_8 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcpy ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; while ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_3 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 5 == 5 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; if ( 5 != 5 ) int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 6 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 6 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * variable_2 = ( int * ) variable_1 ; int variable_0 = ( * variable_2 ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * variable_2 = ( int * ) variable_1 ; int variable_0 = ( * variable_2 ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_4 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = ( int64_t * ) malloc ( sizeof ( variable_1 ) ) ; * variable_1 = 2147483643L L delete variable_3 variable_2 :: ~ func_3 ( ) free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( int variable_0 ) int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_ncpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 10 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_1 ; func_1 ( variable_0 ) ; static void func_2 ( void * variable_0 ) size_t variable_2 = strlen ( ( char * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , 1 ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) ) ; func_3 ( ( char * ) variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) char * variable_1 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_1 ; if ( 5 == 5 ) size_t variable_2 = strlen ( ( char * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , 1 ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) ) ; func_1 ( ( char * ) variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 5 == 5 ) variable_0 = func_1 ( ) ; if ( 5 != 5 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) func_14 ( variable_18 ) ; void func_15 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_16 ( variable_19 [ variable_20 ] ) ; void func_17 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; free ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; unionType variable_2 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; variable_2 . variable_3 = variable_1 ; variable_0 * variable_1 = variable_2 . variable_4 ; TwoIntsClass variable_5 [ 100 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_5 [ variable_6 ] . variable_7 = 0 ; variable_5 [ variable_6 ] . variable_8 = 0 ; memcpy ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_7 ) ; void func_2 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 . func_3 ( ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( 0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( 5 == 5 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 1 ) variable_0 = 7 ; if ( 1 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 10 ; if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 ) variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_3 ( variable_3 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcscat ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_6 ( variable_15 ) ; variable_3 . variable_16 = func_7 ( variable_17 ) ; if ( func_8 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_9 ( func_10 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_11 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_12 ( variable_15 ) ; variable_3 . variable_16 = func_13 ( variable_17 ) ; if ( func_14 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( func_15 ( ) ) int func_16 ( ) return ( rand ( ) % 2 ) ; int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) int variable_19 ; int * variable_20 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_19 = 0 ; variable_19 < 10 ; variable_19 ++ ) variable_20 [ variable_19 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_20 [ variable_0 ] = 1 ; free ( variable_20 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . func_8 ( variable_19 . end ( ) , 1 , variable_18 ) ; variable_19 . func_9 ( variable_19 . end ( ) , 1 , variable_18 ) ; variable_19 . func_10 ( variable_19 . end ( ) , 1 , variable_18 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_1 ) ; void variable_4 :: func_2 ( variable_0 * variable_1 ) int64_t variable_5 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_6 ) printf ( " % lld \n " , variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_4 -> func_1 ( variable_1 ) ; void variable_5 :: func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_2 , variable_6 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_5 ( variable_1 [ 0 ] ) ; void func_6 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_19 >= 0 && variable_19 < ( 10 ) ) variable_20 [ variable_19 ] = 1 ; func_8 ( variable_20 [ variable_21 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_0 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; void * * variable_1 = & variable_0 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 50 - 1 ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_2 ; void * variable_0 = * variable_1 ; size_t variable_3 = strlen ( ( char * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , 1 ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) ) ; func_1 ( ( char * ) variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; if ( func_3 ( ) ) int func_4 ( ) return ( rand ( ) % 2 ) ; size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_5 ( ( wchar_t * ) variable_3 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_7 ( ( wchar_t * ) variable_3 ) ; void func_8 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; variable_0 = 10 ; delete variable_2 variable_1 :: ~ func_3 ( ) int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_4 [ variable_5 ] = 0 ; variable_4 [ variable_0 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_4 ( variable_4 [ variable_5 ] ) ; void func_5 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; while ( 1 ) char * variable_1 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_1 ; while ( 1 ) size_t variable_2 = strlen ( ( char * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , 1 ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) ) ; func_1 ( ( char * ) variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; int * variable_1 = & variable_0 ; variable_0 = - 1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) int variable_0 = * variable_1 ; int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int variable_0 ) int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_4 [ variable_5 ] = 0 ; variable_4 [ variable_0 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_2 , variable_3 , 100 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_2	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_1 , 100 - 1 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 50 - 1 variable_2 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_2 ; if ( variable_1 == 5 ) size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 10 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; switch ( 6 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ;	-1
void variable_0 :: func_0 ( variable_1 * variable_2 ) const TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( variable_2 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 10 + 1 ] = variable_5 ; memmove ( variable_0 , variable_4 , ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_4 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcsncpy ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = 7 ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memmove_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( int & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_5 ( & variable_1 [ 0 ] ) ; void func_6 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wcsncpy ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) if ( variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_19 >= 0 && variable_19 < ( 10 ) ) variable_20 [ variable_19 ] = 1 ; func_8 ( variable_20 [ variable_21 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_20	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; if ( func_3 ( ) ) int func_4 ( ) return 1 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( int variable_0 ) func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcpy ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; size_t variable_1 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_2 = ( void * ) calloc ( variable_1 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_2 , variable_0 , ( variable_1 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_5 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( sizeof ( variable_1 ) ) ; * variable_1 = 2147483643L L return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; char variable_4 [ variable_5 ] = " " ; if ( fgets ( variable_4 , variable_5 , variable_6 ) != NULL ) variable_0 = atoi ( variable_4 ) ; func_3 ( " fgets ( ) failed . " ) ; delete variable_2 variable_1 :: ~ func_4 ( ) int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_7 [ variable_8 ] = 0 ; variable_7 [ variable_0 ] = 1 ; for ( variable_8 = 0 ; variable_8 < 10 ; variable_8 ++ ) func_5 ( variable_7 [ variable_8 ] ) ; void func_6 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; free ( variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_0 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; size_t variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( int64_t * ) malloc ( 50 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_9 ( variable_1 [ 0 ] ) ; void func_10 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_0 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = strlen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; memcpy ( variable_4 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; size_t variable_5 , variable_6 ; variable_6 = strlen ( variable_3 ) ; for ( variable_5 = 0 ; variable_5 < variable_6 + 1 ; variable_5 ++ ) variable_0 [ variable_5 ] = variable_3 [ variable_5 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_4 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memmove_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) while ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wcscat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_5 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_6 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_7 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_8 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_9 ( func_10 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_11 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_12 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_13 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_14 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( func_15 ( ) ) int func_16 ( ) return ( rand ( ) % 2 ) ; int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) int variable_21 ; int * variable_22 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_21 = 0 ; variable_21 < 10 ; variable_21 ++ ) variable_22 [ variable_21 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_22 [ variable_0 ] = 1 ; free ( variable_22 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType variable_2 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 1 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_2 ) ) ; variable_2 -> variable_3 = 1 ; variable_2 -> variable_4 = 2 ; func_1 ( variable_2 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_3 ( variable_3 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 7 ; if ( variable_2 ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 50 ] = L " " memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memmove_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; int * variable_0 = variable_1 . variable_3 ; int variable_4 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_13 ( variable_21 [ variable_22 ] ) ; void func_14 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( variable_1 [ 0 ] . variable_4 ) ; void func_8 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " size_t variable_5 , variable_6 ; variable_6 = wcslen ( variable_0 ) ; for ( variable_5 = 0 ; variable_5 < variable_6 ; variable_5 ++ ) variable_4 [ variable_5 ] = variable_0 [ variable_5 ] ; variable_4 [ 50 - 1 ] = L ' \0 ' func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_7 ) if ( variable_7 != NULL ) wprintf ( L " % ls \n " , variable_7 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_1 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) while ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_5 ( variable_0 [ 0 ] ) ; void func_6 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; func_1 ( variable_0 ) ; void func_2 ( void * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( void * variable_0 ) size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_5 ( ( wchar_t * ) variable_3 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_0 * variable_1 = * variable_2 ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; * variable_2 = variable_1 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_2 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19 variable_19 [ variable_20 ] = 0 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) func_12 ( variable_19 [ variable_20 ] ) ; void func_13 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; variable_0 = 7 ; delete variable_2 variable_1 :: ~ func_3 ( ) int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_4 [ variable_5 ] = 0 ; variable_4 [ variable_0 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_4 ( variable_4 [ variable_5 ] ) ; void func_5 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strcat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcscpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new char [ 100 ] ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = new char [ 100 ] ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_1 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; int & variable_1 = variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; int variable_0 = variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_15 ( variable_21 [ variable_22 ] ) ; void func_16 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_0 , 100 , L " %s " , variable_1 ) func_10 ( variable_0 ) ; void func_11 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) while ( 1 ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_1 ( variable_4 [ variable_5 ] ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memmove_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memmove_67_structType variable_1 ) int * variable_0 = variable_1 . variable_2 ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = 7 ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; void * func_2 ( void * variable_0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; return variable_0 ; size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( ( wchar_t * ) variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) func_5 ( variable_3 ) ; void func_6 ( int variable_3 ) func_7 ( variable_3 ) ; void func_8 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_9 ( variable_4 [ variable_5 ] ) ; void func_10 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) switch ( 6 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; if ( variable_5 ) int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; void * & variable_1 = variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 50 - 1 variable_2 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_2 ; void * variable_0 = variable_1 ; size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; int * variable_1 = & variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; int variable_0 = * variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; strcat ( variable_2 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_3 ( variable_0 , 100 , " %s " , variable_1 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_8 ( variable_21 [ variable_0 ] ) ; void func_9 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ; delete [ ] variable_21	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * * variable_2 ) void * variable_0 = * variable_2 ; size_t variable_3 = strlen ( ( char * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , 1 ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) ) ; func_3 ( ( char * ) variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; func_3 ( variable_0 , 100 , " %s " , variable_3 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; strncpy ( variable_4 , variable_0 , strlen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_3 ( variable_3 [ 0 ] . variable_6 ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_3	-1
static void func_0 ( ) int * variable_0 ; int * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memmove ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_8 ) printf ( " %d -- %d \n " , variable_8 -> variable_6 , variable_8 -> variable_7 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_3 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = 10 ; if ( variable_1 != 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strcat ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType variable_1 ; variable_0 = - 1 ; variable_0 = 7 ; variable_1 . variable_2 = variable_0 ; int variable_0 = variable_1 . variable_3 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) while ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_2 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_4 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; return variable_0 ; size_t variable_1 , variable_2 ; variable_2 = strlen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_4 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 10 + 1 ] = variable_5 ; strcpy ( variable_0 , variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 50 ] = L " " wcscpy ( variable_4 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcsncpy ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = L ' \0 ' func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; char variable_7 [ variable_8 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_9 ) variable_10 = func_5 ( variable_11 , variable_12 , variable_13 ) ; if ( variable_10 == variable_14 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_15 = variable_11 ; variable_6 . variable_16 . variable_17 = func_6 ( variable_18 ) ; variable_6 . variable_19 = func_7 ( variable_20 ) ; if ( func_8 ( variable_10 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_21 ) variable_5 = recv ( variable_10 , variable_7 , variable_8 - 1 , 0 ) ; if ( variable_5 == variable_21 || variable_5 == 0 ) variable_7 [ variable_5 ] = ' \0 ' ; variable_0 = atoi ( variable_7 ) ; while ( 0 ) if ( variable_10 != variable_14 ) func_9 ( variable_10 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . variable_22 = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_67_structType variable_21 ) int variable_20 = variable_21 . variable_22 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; free ( variable_23 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_3 . variable_4 = variable_2 ; char * variable_2 = variable_3 . variable_5 ; variable_1 * variable_6 = new ( variable_2 ) variable_1 variable_6 -> variable_7 = 5 ; variable_6 -> variable_8 = 10 ; func_1 ( variable_6 -> variable_7 ) ; void func_2 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 -> func_9 ( variable_20 ) ; void variable_22 :: func_10 ( int variable_20 ) if ( variable_20 >= 0 ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; delete [ ] variable_23	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( int * variable_21 ) int variable_20 = * variable_21 ; if ( variable_20 >= 0 ) variable_22 [ variable_20 ] = 1 ; func_11 ( variable_22 [ variable_23 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_3 -> func_1 ( variable_2 ) ; void variable_4 :: func_2 ( char * variable_2 ) variable_5 * variable_6 = new ( variable_2 ) variable_5 variable_6 -> variable_7 = 5 ; variable_6 -> variable_8 = 10 ; func_3 ( variable_6 -> variable_7 ) ; void func_4 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( char * ) variable_1 -> variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_5 ( ( char * ) variable_1 -> variable_5 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_7 ( ( char * ) variable_1 -> variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( 5 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; * variable_3 = variable_2 ; variable_1 * variable_4 = new ( variable_2 ) variable_1 variable_4 -> variable_5 = 5 ; variable_4 -> variable_6 = 10 ; func_1 ( variable_4 -> variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( & variable_0 ) ; void func_2 ( int * * variable_1 ) int * variable_0 = * variable_1 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( int & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcsncpy ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 10 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcsncat ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_3 ( & variable_3 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_8 ) printf ( " %d -- %d \n " , variable_8 -> variable_6 , variable_8 -> variable_7 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_0 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_1 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_1 < int , int * > variable_2 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int * > variable_2 ) int * variable_0 = variable_2 [ 2 ] ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( structType variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = new char [ 10 + 1 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 10 + 1 ] = variable_5 ; memcpy ( variable_0 , variable_4 , ( strlen ( variable_4 ) + 1 ) * sizeof ( char ) ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_loop_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 5 != 5 ) variable_0 = 7 ; if ( 5 == 5 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 100 ] ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_3 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 , 100 , " %s " , variable_1 ) ; func_8 ( variable_0 ) ; void func_9 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . func_8 ( variable_18 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_7 ( variable_0 [ 0 ] ) ; void func_8 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_1 . variable_2 = variable_0 ; int * variable_0 = variable_1 . variable_3 ; int variable_4 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static void * func_2 ( void * variable_0 ) char * variable_1 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; variable_0 = ( void * ) variable_1 ; return variable_0 ; size_t variable_2 = strlen ( ( char * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , 1 ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) ) ; func_3 ( ( char * ) variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) func_9 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_10 ( variable_0 ) ; void func_11 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 7 ; if ( variable_2 ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( 0 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; func_3 ( ( wchar_t * ) variable_1 -> variable_5 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) func_5 ( ( wchar_t * ) variable_1 -> variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( char * ) variable_1 -> variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_5 ( ( char * ) variable_1 -> variable_5 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_7 ( ( char * ) variable_1 -> variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = ( double * ) malloc ( sizeof ( * variable_2 ) ) ; * variable_2 = 1 . 7 variable_3 ; func_1 ( * variable_2 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_3 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memmove ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = ( void * ) variable_0 ; func_1 ( variable_1 ) ; void func_2 ( void * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( void * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( void * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( void * variable_1 ) size_t variable_2 = strlen ( ( char * ) variable_1 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , 1 ) ; memcpy ( variable_3 , variable_1 , ( variable_2 + 1 ) ) ; func_9 ( ( char * ) variable_3 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( int * variable_19 ) int variable_0 = * variable_19 ; int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_12 ( variable_19 [ variable_20 ] ) ; void func_13 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new int64_t [ 100 ] ; return variable_1 ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; strncat ( variable_4 , variable_0 , strlen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; int variable_1 [ 5 ] ; variable_0 = - 1 ; char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( int variable_1 [ ] ) int variable_0 = variable_1 [ 2 ] ; int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = strlen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ ) variable_0 [ variable_6 ] = variable_4 [ variable_6 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) malloc ( sizeof ( variable_2 ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = variable_1 ; if ( func_3 ( ) ) static int func_4 ( ) return 1 ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( & variable_3 [ 0 ] ) ; void func_5 ( const twoIntsStruct * variable_8 ) printf ( " %d -- %d \n " , variable_8 -> variable_6 , variable_8 -> variable_7 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_memmove_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memmove ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 , 100 , L " %s " , variable_1 ) func_8 ( variable_0 ) ; void func_9 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 50 ] = L " " wcsncat ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_4 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; switch ( 6 ) variable_0 = func_1 ( ) ; switch ( 7 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; int * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( int * variable_1 [ ] ) int * variable_0 = variable_1 [ 2 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcsncat ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = func_1 ( ) ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) if ( 1 ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_1 ( variable_4 [ variable_5 ] ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( int variable_0 ) if ( variable_19 ) int variable_20 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_20 = 0 ; variable_20 < 10 ; variable_20 ++ ) variable_21 [ variable_20 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_21 [ variable_0 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; variable_3 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_3 , 100 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_1 ) ; void variable_4 :: func_2 ( variable_0 * variable_1 ) twoIntsStruct variable_5 [ 100 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_5 [ variable_6 ] . variable_7 = 0 ; variable_5 [ variable_6 ] . variable_8 = 0 ; memmove ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_9 ) printf ( " %d -- %d \n " , variable_9 -> variable_7 , variable_9 -> variable_8 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; SOCKET variable_8 = variable_9 ; SOCKET variable_10 = variable_9 ; char variable_11 [ variable_12 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_8 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_8 == variable_9 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_17 = variable_14 ; variable_7 . variable_18 . variable_19 = variable_20 ; variable_7 . variable_21 = func_6 ( variable_22 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_23 ) break ; if ( func_7 ( variable_8 , variable_24 ) == variable_23 ) break ; variable_10 = func_8 ( variable_8 , NULL , NULL ) ; if ( variable_10 == variable_23 ) break ; variable_6 = recv ( variable_10 , variable_11 , variable_12 - 1 , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_11 [ variable_6 ] = ' \0 ' ; variable_0 = atoi ( variable_11 ) ; while ( 0 ) if ( variable_8 != variable_9 ) func_9 ( variable_8 ) ; if ( variable_10 != variable_9 ) func_10 ( variable_10 ) ; if ( variable_5 ) func_11 ( ) ; delete variable_2 variable_1 :: ~ func_12 ( ) int * variable_25 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_25 [ variable_26 ] = 0 ; variable_25 [ variable_0 ] = 1 ; for ( variable_26 = 0 ; variable_26 < 10 ; variable_26 ++ ) func_13 ( variable_25 [ variable_26 ] ) ; void func_14 ( int variable_27 ) printf ( " %d \n " , variable_27 ) ; free ( variable_25 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_3 ( variable_3 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_3	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) void * variable_0 ; variable_1 < int , void * > variable_2 ; variable_0 = NULL ; wchar_t * variable_3 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 50 - 1 variable_3 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , void * > variable_2 ) void * variable_0 = variable_2 [ 2 ] ; size_t variable_4 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_5 , variable_0 , ( variable_4 + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( ( wchar_t * ) variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_3 , 100 - 1 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_1 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_6 ( variable_0 ) ; void func_7 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_4 , 100 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( 5 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_1 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; variable_2 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; func_2 ( & variable_0 ) ; void func_3 ( int * variable_1 ) int variable_0 = * variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 5 == 5 ) variable_0 = 10 ; if ( 5 != 5 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 == 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_67_structType variable_1 ; variable_0 = - 1 ; variable_0 = 7 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_67_structType variable_1 ) int variable_0 = variable_1 . variable_2 ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_3 . variable_4 = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__sizeof_double_67_structType variable_3 ) variable_0 * variable_1 = variable_3 . variable_4 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_5 ) printf ( " % g \n " , variable_5 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 1 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . variable_22 = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( structType variable_21 ) int variable_20 = variable_21 . variable_22 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; delete [ ] variable_23	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; structType variable_2 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_6 ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 50 - 1 variable_1 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_1 ; size_t variable_2 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_3 = ( void * ) calloc ( variable_2 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_3 , variable_0 , ( variable_2 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 ) func_3 ( variable_2 ) ; void func_4 ( char * variable_2 ) func_5 ( variable_2 ) ; void func_6 ( char * variable_2 ) func_7 ( variable_2 ) ; void func_8 ( char * variable_2 ) variable_3 * variable_4 = new ( variable_2 ) variable_3 variable_4 -> variable_5 = 5 ; variable_4 -> variable_6 = 10 ; func_9 ( variable_4 -> variable_5 ) ; void func_10 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 2 ] = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( int variable_21 [ ] ) int variable_20 = variable_21 [ 2 ] ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_22 [ variable_20 ] = 1 ; func_11 ( variable_22 [ variable_23 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_1 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_1	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; strcpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_14 ( variable_19 [ variable_20 ] ) ; void func_15 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; size_t variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 50 - 1 variable_2 [ 50 - 1 ] = L ' \0 ' variable_0 = ( void * ) variable_2 ; if ( variable_1 ) size_t variable_3 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_0 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_4 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 != 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int variable_0 ) int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_4 [ variable_5 ] = 0 ; variable_4 [ variable_0 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 < int , int > variable_2 ; variable_0 = - 1 ; char variable_3 [ variable_4 ] = " " ; if ( fgets ( variable_3 , variable_4 , variable_5 ) != NULL ) variable_0 = atoi ( variable_3 ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int > variable_2 ) int variable_0 = variable_2 [ 2 ] ; int variable_6 ; int * variable_7 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_6 = 0 ; variable_6 < 10 ; variable_6 ++ ) variable_7 [ variable_6 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_7 [ variable_0 ] = 1 ; free ( variable_7 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) malloc ( sizeof ( variable_2 ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = variable_1 ; if ( func_3 ( ) ) int func_4 ( ) return 1 ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_0 * variable_1 = * variable_2 ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_2 = variable_1 ; func_1 ( * variable_1 ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; switch ( 6 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 , 100 , " %s " , variable_1 ) ; func_6 ( variable_0 ) ; void func_7 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wcscat ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
variable_0 :: ~ func_0 ( ) twoIntsStruct variable_1 [ 100 ] ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] . variable_3 = 0 ; variable_1 [ variable_2 ] . variable_4 = 0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_5 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 . func_3 ( ) ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 50 ] = L " " wcsncpy ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( 5 == 5 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_8 ( variable_19 [ variable_20 ] ) ; void func_9 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 50 ] = L " " memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = wcslen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_67_structType variable_1 ; variable_0 = - 1 ; variable_0 = 7 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_67_structType variable_1 ) int variable_0 = variable_1 . variable_2 ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_3 ( ( char * ) variable_1 -> variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memcpy ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_5 ( ( char * ) variable_1 -> variable_5 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_7 ( ( char * ) variable_1 -> variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strncpy ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = L ' \0 ' func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 , 100 , L " %s " , variable_1 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_4 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 10 + 1 ] = variable_5 ; strncpy ( variable_0 , variable_4 , strlen ( variable_4 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcscpy ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = new char [ 100 ] ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; * variable_1 = variable_0 ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 6 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( variable_0 ) ; static void func_2 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_3 , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 50 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = new int64_t [ 100 ] ; delete variable_3 variable_2 :: ~ func_3 ( ) int64_t variable_5 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_4 ( variable_1 [ 0 ] ) ; void func_5 ( int64_t variable_6 ) printf ( " % lld \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " wcscpy ( variable_2 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; strncpy ( variable_4 , variable_0 , strlen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; strncpy ( variable_4 , variable_0 , strlen ( variable_0 ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 != 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; variable_1 < int , int > variable_2 ; variable_0 = - 1 ; variable_0 = 7 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int > variable_2 ) int variable_0 = variable_2 [ 2 ] ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_1 ) , " %s " , variable_1 ) ; func_2 ( variable_1 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) int * variable_0 = variable_1 . variable_2 ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int * variable_1 = variable_0 ; int * variable_0 = variable_1 ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wcscat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 50 ] = L " " memcpy ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 . func_3 ( ) ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_4 ( variable_2 [ 0 ] ) ; void func_5 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_34_unionType variable_1 ; variable_0 = - 1 ; variable_0 = 10 ; variable_1 . variable_2 = variable_0 ; int variable_0 = variable_1 . variable_3 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_4 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( int * variable_21 ) int variable_20 = * variable_21 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_22 [ variable_20 ] = 1 ; func_11 ( variable_22 [ variable_23 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wcscpy ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; func_4 ( variable_4 , strlen ( variable_0 ) , " %s " , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; memmove ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 50 ] = L " " wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( variable_0 * variable_1 ) func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( variable_1 [ 0 ] . variable_4 ) ; void func_8 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_0 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( & variable_0 ) ; void func_2 ( int * variable_1 ) int variable_0 = * variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_6 ( variable_0 ) ; void func_7 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; switch ( 5 ) variable_0 = 7 ; switch ( 7 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) func_9 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_10 ( variable_0 ) ; void func_11 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; return variable_0 ;	-1
void func_0 ( ) variable_0 * variable_1 = variable_2 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 50 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wcsncat ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * variable_2 [ 5 ] ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 * variable_2 [ ] ) variable_0 * variable_1 = variable_2 [ 2 ] ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 50 ] = L " " memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_2 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 == 5 ) variable_0 = func_1 ( ) ; if ( variable_1 == 5 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( variable_3 [ 0 ] . variable_6 ) ; void func_5 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_3	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; int variable_2 ; variable_2 = - 1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; char variable_6 [ variable_7 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_8 ) variable_9 = func_3 ( variable_10 , variable_11 , variable_12 ) ; if ( variable_9 == variable_13 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_14 = variable_10 ; variable_5 . variable_15 . variable_16 = func_4 ( variable_17 ) ; variable_5 . variable_18 = func_5 ( variable_19 ) ; if ( func_6 ( variable_9 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_20 ) variable_4 = recv ( variable_9 , variable_6 , variable_7 - 1 , 0 ) ; if ( variable_4 == variable_20 || variable_4 == 0 ) variable_6 [ variable_4 ] = ' \0 ' ; variable_2 = atoi ( variable_6 ) ; while ( 0 ) for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) int variable_0 ; int * variable_21 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_0 = 0 ; variable_0 < 10 ; variable_0 ++ ) variable_21 [ variable_0 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_21 [ variable_2 ] = 1 ; free ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 6 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 50 ] = L " " wcsncpy ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 , 100 , " %s " , variable_3 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 50 ] = L " " wcscpy ( variable_2 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) func_9 ( variable_1 ) ; void func_10 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 , 100 , " %s " , variable_1 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( int variable_0 ) func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) variable_0 * * variable_3 = ( variable_0 * * ) variable_2 ; variable_0 * variable_1 = ( * variable_3 ) ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_9 ( variable_1 [ 0 ] ) ; void func_10 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; int * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( int * variable_1 [ ] ) int * variable_0 = variable_1 [ 2 ] ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; variable_3 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; variable_5 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 ) func_3 ( variable_2 ) ; void func_4 ( char * variable_2 ) variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_5 ( variable_3 -> variable_4 ) ; void func_6 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) if ( variable_20 >= 0 ) variable_21 [ variable_20 ] = 1 ; func_13 ( variable_21 [ variable_22 ] ) ; void func_14 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memmove ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = new char [ 100 ] ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_1 , strlen ( variable_1 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( variable_0 < int , char * > variable_1 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_3	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_memcpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( void * variable_21 ) int * variable_22 = ( int * ) variable_21 ; int variable_20 = ( * variable_22 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; delete [ ] variable_23	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( & variable_0 ) ; void func_2 ( int * variable_1 ) int variable_0 = * variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_4 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; int variable_2 ; variable_2 = - 1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = func_1 ( ) ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) int variable_0 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_0 = 0 ; variable_0 < 10 ; variable_0 ++ ) variable_3 [ variable_0 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_3 [ variable_2 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = new char [ 10 + 1 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 10 + 1 ] = variable_5 ; strcpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < void * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < void * > variable_1 ) void * variable_2 = variable_1 [ 2 ] ; size_t variable_3 = wcslen ( ( wchar_t * ) variable_2 ) ; void * variable_4 = ( void * ) calloc ( variable_3 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_4 , variable_2 , ( variable_3 + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( ( wchar_t * ) variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 50 ] = L " " wcscat ( variable_3 , variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 1 ) variable_0 = func_1 ( ) ; if ( 0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 . variable_5 = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( structType variable_4 ) int variable_3 = variable_4 . variable_5 ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_6 [ variable_3 ] = 1 ; func_3 ( variable_6 [ variable_7 ] ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_6	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_0 , 100 , " %s " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = new char [ 100 ] ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_1 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; int variable_1 = variable_0 ; int variable_0 = variable_1 ; int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_3 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( & variable_1 [ 0 ] ) ; void func_8 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; twoIntsStruct variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_8 ) printf ( " %d -- %d \n " , variable_8 -> variable_6 , variable_8 -> variable_7 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 50 ] = L " " wcscat ( variable_4 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_1 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; while ( 1 ) variable_0 = 7 ; while ( 1 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; func_1 ( variable_0 , 100 , " %s " , variable_4 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = new wchar_t [ 10 + 1 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = wcslen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ )	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " wcsncat ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 [ 2 ] ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 10 ; if ( variable_2 ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 10 + 1 ] = variable_5 ; strcpy ( variable_0 , variable_4 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( int * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_7 ( variable_0 [ 0 ] ) ; void func_8 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_2 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; strcpy ( variable_4 , variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE806_wchar_t_snprintf_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = new char [ 100 ] ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; static void func_2 ( char * variable_2 ) variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_3 ( variable_3 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 50 ] = L " " wcscpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( variable_2 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_67_structType variable_2 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memcpy_67_structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) variable_0 * * variable_3 = ( variable_0 * * ) variable_2 ; variable_0 * variable_1 = ( * variable_3 ) ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_6 ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) variable_3 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_3 ; variable_4 ++ ) variable_5 [ variable_4 ] = variable_0 [ variable_4 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 10 ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_2 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_11 ( variable_21 [ variable_22 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) char * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memcpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; memcpy ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wcscat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_loop_67_structType variable_2 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_loop_67_structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; int64_t variable_4 [ 100 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_1 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; static void func_2 ( char * variable_2 ) variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_3 ( variable_3 -> variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) if ( variable_20 >= 0 ) variable_21 [ variable_20 ] = 1 ; func_15 ( variable_21 [ variable_22 ] ) ; void func_16 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; free ( variable_21 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) variable_22 [ variable_21 ] = 1 ; func_9 ( variable_22 [ variable_23 ] ) ; void func_10 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new char [ 100 ] ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_3 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; func_1 ( variable_1 , 100 , " %s " , variable_2 ) ; func_2 ( variable_1 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = ( int64_t * ) malloc ( 50 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) variable_1 [ variable_2 ] = variable_3 [ variable_2 ] ; func_9 ( variable_1 [ 0 ] ) ; void func_10 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; return variable_0 ; size_t variable_1 , variable_2 ; variable_2 = strlen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4 variable_4 [ variable_5 ] = 0 ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) func_5 ( variable_4 [ variable_5 ] ) ; void func_6 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
static void func_0 ( ) int * variable_0 ; int * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int * variable_0 = variable_1 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = func_3 ( ) ; if ( func_4 ( ) ) int func_5 ( ) return 1 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; func_4 ( variable_4 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wcsncpy ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 50 ] = L " " wcscat ( variable_4 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 ; variable_3 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_4 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memmove_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memmove_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 ) variable_3 * variable_4 = new ( variable_2 ) variable_3 variable_4 -> variable_5 = 5 ; variable_4 -> variable_6 = 10 ; func_3 ( variable_4 -> variable_5 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; int * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 == 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 0 ] = variable_18 ; variable_19 [ 1 ] = variable_18 ; variable_19 [ 2 ] = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( variable_20 < int , int > variable_19 ) int variable_18 = variable_19 [ 2 ] ; if ( variable_18 >= 0 ) variable_21 [ variable_18 ] = 1 ; func_10 ( variable_21 [ variable_22 ] ) ; void func_11 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 10 ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void variable_0 :: func_0 ( wchar_t * variable_1 ) const wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 2147483643L L return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( * variable_1 ) ; void func_6 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) switch ( 6 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_21 [ variable_20 ] = 1 ; func_9 ( variable_21 [ variable_22 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ; delete [ ] variable_21	-1
static void func_0 ( ) if ( variable_0 != 5 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( char * ) variable_2 -> variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; variable_2 -> variable_6 [ ( sizeof ( variable_2 -> variable_6 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_2 -> variable_6 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; func_5 ( ( char * ) variable_2 -> variable_3 ) ; void func_6 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 ; variable_4 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; char * variable_3 = variable_2 ; char * variable_2 = variable_3 ; variable_1 * variable_4 = new ( variable_2 ) variable_1 variable_4 -> variable_5 = 5 ; variable_4 -> variable_6 = 10 ; func_1 ( variable_4 -> variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_3 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_8 ( variable_0 ) ; void func_9 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wcscat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( & variable_3 ) ; void func_2 ( int * variable_4 ) int variable_3 = * variable_4 ; if ( variable_3 >= 0 ) variable_5 [ variable_3 ] = 1 ; func_3 ( variable_5 [ variable_6 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new int [ 100 ] ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 . func_3 ( ) ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_4 ( variable_2 [ 0 ] ) ; void func_5 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_2 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_4 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 50 ] = L " " wcsncat ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; func_1 ( & variable_0 ) ; void func_2 ( int * variable_4 ) int variable_0 = * variable_4 ; int variable_5 ; int * variable_6 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_6 [ variable_5 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_6 [ variable_0 ] = 1 ; free ( variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; size_t variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_1 ) ; void variable_4 :: func_2 ( variable_0 * variable_1 ) twoIntsStruct variable_5 [ 100 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_5 [ variable_6 ] . variable_7 = 0 ; variable_5 [ variable_6 ] . variable_8 = 0 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_1 [ variable_6 ] = variable_5 [ variable_6 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 50 ] = L " " memmove ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_1 < int , int * > variable_2 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , int * > variable_2 ) int * variable_0 = variable_2 [ 2 ] ; int variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; func_2 ( variable_0 ) ; static void func_3 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) wcscat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_2 , 100 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcscat ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * & variable_2 = variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; func_3 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 50 ] = " " ; memmove ( variable_4 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 , variable_1 ; void * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * variable_3 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 50 - 1 variable_3 [ 50 - 1 ] = L ' \0 ' variable_2 = ( void * ) variable_3 ; for ( variable_1 = 0 ; variable_1 < 1 ; variable_1 ++ ) size_t variable_4 = wcslen ( ( wchar_t * ) variable_2 ) ; void * variable_5 = ( void * ) calloc ( variable_4 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_5 , variable_2 , ( variable_4 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_5 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_1 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( * variable_1 ) ; void func_8 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * variable_2 [ 5 ] ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 * variable_2 [ ] ) variable_0 * variable_1 = variable_2 [ 2 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_4 ) variable_0 * variable_1 = * variable_4 ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_2 , variable_5 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = func_3 ( ) ; if ( func_4 ( ) ) static int func_5 ( ) return 1 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) switch ( 6 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 * variable_2 [ ] ) variable_0 * variable_1 = variable_2 [ 2 ] ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_1 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_5 ( variable_1 [ 0 ] . variable_4 ) ; void func_6 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) func_9 ( * variable_1 ) ; void func_10 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; static void func_2 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( variable_3 [ 0 ] ) ; void func_5 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; size_t variable_2 , variable_3 ; variable_3 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 ) func_3 ( variable_2 ) ; void func_4 ( char * variable_2 ) func_5 ( variable_2 ) ; void func_6 ( char * variable_2 ) variable_3 * variable_4 = new ( variable_2 ) variable_3 variable_4 -> variable_5 = 5 ; variable_4 -> variable_6 = 10 ; func_7 ( variable_4 -> variable_5 ) ; void func_8 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cat_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cat_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; strcat ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; func_3 ( variable_0 , 100 , " %s " , variable_2 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , char * > variable_1 ) char * variable_0 = variable_1 [ 2 ] ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 = variable_2 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE193_wchar_t_ncpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_0 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_2	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 50 ] = L " " memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_1 = * variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int * variable_3 ) variable_0 = variable_3 ; variable_0 = new int [ 100 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) int variable_4 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_4 ( variable_0 [ 0 ] ) ; void func_5 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( variable_3 [ 0 ] ) ; void func_5 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_3	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_1 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_1	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 ; variable_4 ++ )	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) int * * variable_2 = ( int * * ) variable_1 ; int * variable_0 = ( * variable_2 ) ; int variable_3 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_3 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_0 * variable_2 = variable_1 ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_4 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; * variable_1 = variable_0 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * variable_2 [ 5 ] ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 * variable_2 [ ] ) variable_0 * variable_1 = variable_2 [ 2 ] ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( & variable_1 [ 0 ] ) ; void func_4 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; char * variable_2 = ( char * ) malloc ( sizeof ( variable_3 ) ) ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 0 ] = variable_20 ; variable_21 [ 1 ] = variable_20 ; variable_21 [ 2 ] = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( variable_22 < int , int > variable_21 ) int variable_20 = variable_21 [ 2 ] ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_23 [ variable_20 ] = 1 ; func_11 ( variable_23 [ variable_24 ] ) ; void func_12 ( int variable_25 ) printf ( " %d \n " , variable_25 ) ; delete [ ] variable_23	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; size_t variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_5 = 1 ; variable_1 -> variable_6 = 2 ; delete variable_3 variable_2 :: ~ func_3 ( ) free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_1 ) ; void variable_4 :: func_2 ( variable_0 * variable_1 ) int64_t variable_5 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_6 ) printf ( " % lld \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; size_t variable_4 , variable_5 ; variable_5 = wcslen ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 + 1 ; variable_4 ++ ) variable_0 [ variable_4 ] = variable_2 [ variable_4 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
variable_0 :: ~ func_0 ( ) twoIntsStruct variable_1 [ 100 ] ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] . variable_3 = 0 ; variable_1 [ variable_2 ] . variable_4 = 0 ; memcpy ( variable_5 , variable_1 , 100 * sizeof ( variable_6 ) ) ; func_1 ( & variable_5 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_3 , variable_7 -> variable_4 ) ; free ( variable_5 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 0 ) variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; memcpy ( variable_4 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( variable_0 * variable_1 ) func_9 ( * variable_1 ) ; void func_10 ( int64_t variable_2 ) printf ( " % lld \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 == 5 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) if ( variable_1 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wcscpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 100 ] ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_1 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; func_1 ( variable_2 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_2 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_2 = strlen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_2 ; variable_3 ++ ) variable_4 [ variable_3 ] = variable_0 [ variable_3 ] ; variable_4 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_4 , 10 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_1 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 100 ] ; variable_1 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; return variable_0 ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_1 [ 100 - 1 ] = L ' \0 ' free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_2 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 . func_3 ( ) ; int variable_3 [ 10 ] = { 0 } ; memmove ( variable_2 , variable_3 , 10 * sizeof ( int ) ) ; func_4 ( variable_2 [ 0 ] ) ; void func_5 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_3 , 100 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 7 ; func_1 ( variable_0 ) ; static void func_2 ( int variable_0 ) if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) variable_0 * * variable_3 = ( variable_0 * * ) variable_2 ; variable_0 * variable_1 = ( * variable_3 ) ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) func_3 ( variable_3 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_4 , 100 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' return variable_0 ; size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; wcscpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( variable_1 != 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( variable_3 [ 0 ] ) ; void func_5 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_3	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) int variable_1 [ 10 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) variable_0 * variable_1 = variable_2 ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcscpy ( variable_2 , variable_3 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) variable_19 [ variable_18 ] = 1 ; func_10 ( variable_19 [ variable_20 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ; delete [ ] variable_19	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_2 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new char [ 10 + 1 ] ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_1 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; char * variable_0 = variable_1 . variable_3 ; func_1 ( variable_4 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; * variable_1 = variable_0 ; memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wcsncat ( variable_2 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_dest_wchar_t_cat_34_unionType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_3 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_2 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 100 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_0 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_0 = atoi ( variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( int variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int variable_0 ) int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_2	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_2 < int , variable_0 * > variable_3 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_2 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memcpy ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_6 ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; int * func_2 ( int * variable_0 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; variable_0 = new char [ 10 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 10 + 1 ] = variable_5 ; size_t variable_6 , variable_7 ; variable_7 = strlen ( variable_4 ) ; for ( variable_6 = 0 ; variable_6 < variable_7 + 1 ; variable_6 ++ )	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memcpy ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; size_t variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = new TwoIntsClass [ 100 ] ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_2 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_2 , variable_1 , 100 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 50 ] = L " " memcpy ( variable_3 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; return variable_0 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_0 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; func_1 ( variable_4 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 5 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_2 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( int * variable_0 ) int variable_4 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_4 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcscpy ( variable_4 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 1 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_10 ( variable_0 ) ; void func_11 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_34_unionType variable_1 ; variable_0 = - 1 ; char variable_2 [ variable_3 ] = " " ; if ( fgets ( variable_2 , variable_3 , variable_4 ) != NULL ) variable_0 = atoi ( variable_2 ) ; variable_1 . variable_5 = variable_0 ; int variable_0 = variable_1 . variable_6 ; int variable_7 ; int * variable_8 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_7 = 0 ; variable_7 < 10 ; variable_7 ++ ) variable_8 [ variable_7 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_8 [ variable_0 ] = 1 ; free ( variable_8 ) ;	-1
static int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; return variable_0 ;	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; variable_0 [ 100 - 1 ] = L ' \0 ' func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; * variable_1 = variable_0 ; func_1 ( variable_2 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; unionType variable_1 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 10 + 1 ] = variable_5 ; wcsncpy ( variable_0 , variable_4 , wcslen ( variable_4 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 5 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) void * variable_0 ; variable_0 = NULL ; size_t variable_1 = wcslen ( ( wchar_t * ) variable_0 ) ; void * variable_2 = ( void * ) calloc ( variable_1 + 1 , sizeof ( wchar_t ) ) ; memcpy ( variable_2 , variable_0 , ( variable_1 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( ( wchar_t * ) variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; structType variable_2 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( structType variable_2 ) variable_0 * variable_1 = variable_2 . variable_3 ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memmove ( variable_1 , variable_4 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_6 ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcscpy ( variable_0 , variable_1 ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_3 [ 0 ] = variable_1 ; variable_3 [ 1 ] = variable_1 ; variable_3 [ 2 ] = variable_1 ; func_1 ( variable_3 ) ; void func_2 ( variable_4 < int , variable_0 * > variable_3 ) variable_0 * variable_1 = variable_3 [ 2 ] ; func_3 ( * variable_1 ) ; void func_4 ( double variable_5 ) printf ( " % g \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( char * variable_0 ) char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_4 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_4 ) variable_0 * * variable_5 = ( variable_0 * * ) variable_4 ; variable_0 * variable_1 = ( * variable_5 ) ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_2 , variable_6 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; memmove ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = 10 ; if ( variable_2 ) int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_4 [ variable_0 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( 1 ) variable_0 = 10 ; if ( 1 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_2 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_3 ) variable_0 * variable_1 = * variable_3 ; func_3 ( * variable_1 ) ; void func_4 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int * variable_3 ) variable_0 = variable_3 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) int variable_4 [ 10 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 10 ; variable_5 ++ ) variable_0 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 -> func_1 ( variable_3 ) ; void variable_5 :: func_2 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_6 [ variable_3 ] = 1 ; func_3 ( variable_6 [ variable_7 ] ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_6	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = new wchar_t [ 100 ] ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' size_t variable_0 , variable_2 ; variable_2 = wcslen ( variable_1 ) ; for ( variable_0 = 0 ; variable_0 < variable_2 ; variable_0 ++ )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wcscpy ( variable_1 , variable_0 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = variable_1 ; size_t variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; free ( variable_0 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( & variable_3 ) ; void func_2 ( void * variable_4 ) int * variable_5 = ( int * ) variable_4 ; int variable_3 = ( * variable_5 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_6 [ variable_3 ] = 1 ; func_3 ( variable_6 [ variable_7 ] ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_6	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; if ( variable_1 ) variable_0 = func_1 ( ) ; if ( variable_1 ) int variable_2 ; int * variable_3 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_2 = 0 ; variable_2 < 10 ; variable_2 ++ ) variable_3 [ variable_2 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_3 [ variable_0 ] = 1 ; free ( variable_3 ) ;	-1
variable_0 :: ~ func_0 ( ) TwoIntsClass variable_1 [ 100 ] ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_1 [ variable_2 ] . variable_3 = 0 ; variable_1 [ variable_2 ] . variable_4 = 0 ; memmove ( variable_5 , variable_1 , 100 * sizeof ( variable_6 ) ) ; func_1 ( variable_5 [ 0 ] . variable_3 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_3 , 100 - 1 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . func_9 ( variable_20 ) ;	-1
int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; return variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 100 ] ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; switch ( 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_3 ) printf ( " % g \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int * variable_3 ) variable_0 = variable_3 ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; delete variable_2 variable_1 :: ~ func_3 ( ) int variable_4 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_4 , 10 * sizeof ( int ) ) ; func_4 ( variable_0 [ 0 ] ) ; void func_5 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; delete variable_3 variable_2 :: ~ func_3 ( ) twoIntsStruct variable_5 [ 100 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_5 [ variable_6 ] . variable_7 = 0 ; variable_5 [ variable_6 ] . variable_8 = 0 ; memcpy ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_4 ( & variable_1 [ 0 ] ) ; void func_5 ( const twoIntsStruct * variable_9 ) printf ( " %d -- %d \n " , variable_9 -> variable_7 , variable_9 -> variable_8 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 2 ] = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( int variable_21 [ ] ) int variable_20 = variable_21 [ 2 ] ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) variable_22 [ variable_20 ] = 1 ; func_11 ( variable_22 [ variable_23 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ; delete [ ] variable_22	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_2 , 100 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_1 , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
void variable_0 :: func_0 ( wchar_t * variable_1 ) const wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_1 , variable_2 , 100 - 1 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; variable_4 [ 2 ] = variable_1 ; func_1 ( variable_4 ) ; void func_2 ( variable_0 * variable_4 [ ] ) variable_0 * variable_1 = variable_4 [ 2 ] ; func_3 ( variable_1 ) ; void func_4 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_2 , variable_5 -> variable_3 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 , 100 , L " %s " , variable_3 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) int * variable_0 ; variable_0 = ( int * ) malloc ( 10 ) ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( int * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( int * variable_0 ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; func_9 ( variable_0 [ 0 ] ) ; void func_10 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; memmove ( variable_0 , variable_4 , ( wcslen ( variable_4 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; switch ( 6 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( variable_0 * variable_1 ) twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void variable_0 :: func_0 ( variable_1 * variable_2 ) const twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( & variable_2 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_7 ) printf ( " %d -- %d \n " , variable_7 -> variable_5 , variable_7 -> variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( char * variable_0 ) strncat ( variable_3 , variable_0 , strlen ( variable_0 ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = new int64_t [ 100 ] ; return variable_1 ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
void variable_0 :: func_0 ( wchar_t * variable_1 ) const wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 [ 2 ] ; int variable_3 [ 10 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_2 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_3 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = new TwoIntsClass [ 100 ] ; delete variable_3 variable_2 :: ~ func_3 ( ) TwoIntsClass variable_5 [ 100 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < 100 ; variable_6 ++ ) variable_5 [ variable_6 ] . variable_7 = 0 ; variable_5 [ variable_6 ] . variable_8 = 0 ; memcpy ( variable_1 , variable_5 , 100 * sizeof ( variable_0 ) ) ; func_4 ( variable_1 [ 0 ] . variable_7 ) ; void func_5 ( int variable_9 ) printf ( " %d \n " , variable_9 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " wcscat ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) variable_1 = strlen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_1 ; variable_2 ++ ) variable_3 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = new int [ 100 ] ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE129_rand_34_unionType variable_1 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; variable_1 . variable_2 = variable_0 ; int variable_0 = variable_1 . variable_3 ; int variable_4 ; int * variable_5 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_4 = 0 ; variable_4 < 10 ; variable_4 ++ ) variable_5 [ variable_4 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_5 [ variable_0 ] = 1 ; free ( variable_5 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 50 ] = L " " memcpy ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_2 [ 100 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_2 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_67_structType variable_1 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_loop_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; size_t variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( 5 == 5 ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_1 ( variable_4 [ variable_5 ] ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_3 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_1 [ variable_2 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( sizeof ( * variable_1 ) ) ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_3 < int , variable_0 * > variable_2 ) variable_0 * variable_1 = variable_2 [ 2 ] ; func_3 ( * variable_1 ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcsncpy ( variable_0 , variable_3 , wcslen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 ) variable_1 * variable_2 = ( charVoid * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 -> variable_3 = ( void * ) variable_4 ; func_1 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) memmove ( variable_2 -> variable_6 , variable_4 , sizeof ( variable_2 -> variable_6 ) ) ; func_3 ( ( wchar_t * ) variable_2 -> variable_6 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) func_5 ( ( wchar_t * ) variable_2 -> variable_3 ) ; void func_6 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 50 ] = L " " wcscpy ( variable_1 , variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; return variable_0 ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) if ( 1 ) variable_0 * variable_1 = ( charVoid * ) malloc ( sizeof ( variable_0 ) ) ; variable_1 -> variable_2 = ( void * ) variable_3 ; func_1 ( ( char * ) variable_1 -> variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; memmove ( variable_1 -> variable_5 , variable_3 , sizeof ( variable_1 -> variable_5 ) ) ; variable_1 -> variable_5 [ ( sizeof ( variable_1 -> variable_5 ) / sizeof ( char ) ) - 1 ] = ' \0 ' ; func_3 ( ( char * ) variable_1 -> variable_5 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; func_5 ( ( char * ) variable_1 -> variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( variable_0 ) ; int func_2 ( int variable_0 ) variable_0 = 7 ; return variable_0 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) if ( variable_3 >= 0 ) variable_4 [ variable_3 ] = 1 ; func_5 ( variable_4 [ variable_5 ] ) ; void func_6 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( ) ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_2 , variable_0 , strlen ( variable_0 ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_0 = * variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 50 ] = L " " wcscat ( variable_2 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_5 ( variable_0 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 [ 2 ] = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( int variable_4 [ ] ) int variable_3 = variable_4 [ 2 ] ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_5 [ variable_3 ] = 1 ; func_3 ( variable_5 [ variable_6 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 [ 2 ] ; int variable_3 [ 100 ] = { 0 } ; memmove ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_2 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( & variable_1 [ 0 ] ) ; void func_2 ( const twoIntsStruct * variable_6 ) printf ( " %d -- %d \n " , variable_6 -> variable_4 , variable_6 -> variable_5 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) func_5 ( variable_3 ) ; void func_6 ( int variable_3 ) if ( variable_3 >= 0 ) variable_4 [ variable_3 ] = 1 ; func_7 ( variable_4 [ variable_5 ] ) ; void func_8 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 [ 2 ] ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_0 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) if ( variable_0 == 5 ) char variable_1 [ variable_2 ] = " " ; if ( fgets ( variable_1 , variable_2 , variable_3 ) != NULL ) variable_4 = atoi ( variable_1 ) ; if ( variable_4 >= 0 && variable_4 < ( 10 ) ) variable_5 [ variable_4 ] = 1 ; func_1 ( variable_5 [ variable_6 ] ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_5	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; while ( 1 ) variable_0 = 10 ; while ( 1 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_2 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = new TwoIntsClass [ 100 ] ; return variable_1 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_5 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; if ( 0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_2 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_2	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_3 ( variable_3 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; return variable_0 ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = new int64_t [ 100 ] ; return variable_1 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 50 ] = L " " wcscpy ( variable_3 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( variable_1 == 5 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncat ( variable_0 , variable_2 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_2 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = 10 ; func_1 ( variable_0 ) ; static void func_2 ( int variable_0 ) int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 && variable_0 < ( 10 ) ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) size_t variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_1 = 0 ; variable_1 < 100 ; variable_1 ++ ) variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( 1 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_1 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_3 , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 100 ] ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_1 , variable_2 , 100 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_3 = 1 ; variable_1 -> variable_4 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_5 ) printf ( " %d -- %d \n " , variable_5 -> variable_3 , variable_5 -> variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( sizeof ( variable_1 ) ) ; variable_2 = variable_0 ; variable_1 * variable_3 = new ( variable_2 ) variable_1 variable_3 -> variable_4 = 5 ; variable_3 -> variable_5 = 10 ; func_1 ( variable_3 -> variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; if ( variable_1 == 5 ) variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 , 100 , L " %s " , variable_2 ) func_2 ( variable_0 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; func_3 ( variable_0 , 100 , " %s " , variable_2 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_2 ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_2 [ 50 ] = " " ; strcpy ( variable_2 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; memcpy ( variable_3 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_3 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) variable_0 = new char [ 10 + 1 ] ; return variable_0 ; char variable_2 [ 10 + 1 ] = variable_3 ; strncpy ( variable_0 , variable_2 , strlen ( variable_2 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_3 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_2	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_0 = func_1 ( variable_0 ) ; int func_2 ( int variable_0 ) variable_0 = 7 ; return variable_0 ; int variable_1 ; int * variable_2 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_1 = 0 ; variable_1 < 10 ; variable_1 ++ ) variable_2 [ variable_1 ] = 0 ; if ( variable_0 >= 0 ) variable_2 [ variable_0 ] = 1 ; free ( variable_2 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * & variable_2 = variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; static variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; return variable_1 ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; int * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; int * variable_0 = * variable_1 ; int variable_2 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_5 ( variable_0 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_5 ( variable_1 [ 0 ] ) ; void func_6 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) wchar_t * * variable_2 = ( wchar_t * * ) variable_1 ; wchar_t * variable_0 = ( * variable_2 ) ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) delete [ ] variable_0	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) func_5 ( variable_3 ) ; void func_6 ( int variable_3 ) func_7 ( variable_3 ) ; void func_8 ( int variable_3 ) if ( variable_3 >= 0 ) variable_4 [ variable_3 ] = 1 ; func_9 ( variable_4 [ variable_5 ] ) ; void func_10 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 != 5 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) memset ( variable_1 , ' A ' , 50 - 1 ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_1 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcsncpy ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_3 , variable_4 ; variable_4 = wcslen ( variable_0 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 ; variable_3 ++ )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 -> func_1 ( variable_0 ) ; void variable_2 :: func_2 ( wchar_t * variable_0 ) func_3 ( variable_3 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * & variable_2 = variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_1 = variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; int64_t variable_4 [ 100 ] = { 0 } ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_3 [ variable_5 ] = variable_4 [ variable_5 ] ; free ( variable_3 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_5 ( variable_1 [ 0 ] . variable_4 ) ; void func_6 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_2 , variable_3 , ( wcslen ( variable_3 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 ) free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 == 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 100 ] ; variable_0 [ 0 ] = ' \0 ' ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_0 , variable_2 , 100 * sizeof ( char ) ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) if ( variable_2 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; int64_t variable_3 [ 100 ] = { 0 } ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 [ 0 ] = variable_3 ; variable_4 [ 1 ] = variable_3 ; variable_4 [ 2 ] = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( variable_5 < int , int > variable_4 ) int variable_3 = variable_4 [ 2 ] ; if ( variable_3 >= 0 ) variable_6 [ variable_3 ] = 1 ; func_3 ( variable_6 [ variable_7 ] ) ; void func_4 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_6	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( variable_0 * variable_1 ) func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( variable_0 * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_7 ( variable_1 [ 0 ] ) ; void func_8 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new wchar_t [ 100 ] ; variable_1 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_1 , variable_2 , 100 - 1 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; twoIntsStruct variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_1 [ variable_4 ] = variable_3 [ variable_4 ] ; free ( variable_1 ) ;	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memmove ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_0 * * variable_2 = & variable_1 ; variable_1 = NULL ; variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; variable_0 * variable_1 = * variable_2 ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static int * func_2 ( int * variable_0 ) variable_0 = new int [ 100 ] ; return variable_0 ; int variable_1 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_3 -> func_1 ( variable_1 ) ; void variable_4 :: func_2 ( variable_0 * variable_1 ) func_3 ( * variable_1 ) ; void func_4 ( double variable_5 ) printf ( " % g \n " , variable_5 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_2 ; variable_3 . variable_4 = variable_1 ; variable_0 * variable_1 = variable_3 . variable_5 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_6 ) printf ( " % g \n " , variable_6 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char * variable_0 = variable_1 ; char variable_2 [ 10 + 1 ] = variable_3 ; memcpy ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_1 ) char * variable_0 = * variable_1 ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_4 ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_3 ( variable_1 , wcslen ( variable_0 ) , L " %s " , variable_0 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new int [ 100 ] ; int variable_2 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; int * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int * variable_0 = variable_1 ; int variable_2 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; size_t variable_3 , variable_4 ; variable_4 = strlen ( variable_1 ) ; for ( variable_3 = 0 ; variable_3 < variable_4 + 1 ; variable_3 ++ ) variable_0 [ variable_3 ] = variable_1 [ variable_3 ] ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_2 ; wchar_t variable_3 [ 50 ] = L " " wcsncpy ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; memmove ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_2 * variable_3 = new func_1 ( variable_1 ) ; variable_2 :: func_2 ( variable_0 * variable_4 ) variable_1 = variable_4 ; variable_1 = ( double * ) malloc ( sizeof ( variable_1 ) ) ; * variable_1 = 1 . 7 variable_5 ; delete variable_3 variable_2 :: ~ func_3 ( ) free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wcscat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wcscat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; structType variable_1 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) int * variable_0 = variable_1 . variable_2 ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_0 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_0 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' return variable_0 ; size_t variable_1 , variable_2 ; variable_2 = wcslen ( variable_0 ) ; for ( variable_1 = 0 ; variable_1 < variable_2 ; variable_1 ++ )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' return variable_0 ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) variable_0 < int * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int * > variable_1 ) int * variable_2 = variable_1 [ 2 ] ; int variable_3 [ 100 ] = { 0 } ; memcpy ( variable_2 , variable_3 , 100 * sizeof ( int ) ) ; func_3 ( variable_2 [ 0 ] ) ; void func_4 ( int variable_4 ) printf ( " %d \n " , variable_4 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = ( char * ) malloc ( ( 10 + 1 ) * sizeof ( char ) ) ; char variable_1 [ 10 + 1 ] = variable_2 ; memmove ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < int > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < int > variable_1 ) int variable_2 = variable_1 [ 2 ] ; int variable_3 ; int * variable_4 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; for ( variable_3 = 0 ; variable_3 < 10 ; variable_3 ++ ) variable_4 [ variable_3 ] = 0 ; if ( variable_2 >= 0 && variable_2 < ( 10 ) ) variable_4 [ variable_2 ] = 1 ; free ( variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = ( wchar_t * ) malloc ( ( 10 + 1 ) * sizeof ( wchar_t ) ) ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; strncpy ( variable_2 , variable_3 , strlen ( variable_3 ) + 1 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_2	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = new char [ 10 + 1 ] ; char variable_1 [ 10 + 1 ] = variable_2 ; strncpy ( variable_0 , variable_1 , strlen ( variable_1 ) + 1 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new int64_t [ 100 ] ; func_1 ( variable_1 ) ; void func_2 ( variable_0 * variable_1 ) int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " memcpy ( variable_4 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 100 - 1 variable_0 [ 100 - 1 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; size_t variable_2 , variable_3 ; variable_3 = wcslen ( variable_0 ) ; for ( variable_2 = 0 ; variable_2 < variable_3 ; variable_2 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( 1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_1 [ 10 ] = { 0 } ; memmove ( variable_0 , variable_1 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_0 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 50 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 , 100 , L " %s " , variable_1 ) func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_3 ( variable_4 [ variable_5 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = new TwoIntsClass [ 100 ] ; func_1 ( & variable_1 ) ; void func_2 ( variable_0 * * variable_2 ) variable_0 * variable_1 = * variable_2 ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] . variable_5 ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_1	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; size_t variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' for ( variable_2 = 0 ; variable_2 < 100 ; variable_2 ++ ) variable_0 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_0 [ 100 - 1 ] = L ' \0 ' free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = new char [ 100 ] ; char * variable_0 = * variable_1 ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; * variable_1 = variable_0 ; func_1 ( variable_2 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; variable_1 = func_1 ( variable_1 ) ; variable_0 * func_2 ( variable_0 * variable_1 ) variable_1 = ( twoIntsStruct * ) malloc ( 100 * sizeof ( variable_0 ) ) ; return variable_1 ; twoIntsStruct variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_1 [ variable_3 ] = variable_2 [ variable_3 ] ; free ( variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' return variable_0 ; wchar_t variable_1 [ 50 ] = L " " memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = new int [ 100 ] ; func_1 ( variable_0 ) ; void func_2 ( int * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( int * variable_0 ) int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_5 ( variable_0 [ 0 ] ) ; void func_6 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 != 5 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcsncpy ( variable_0 , variable_1 , wcslen ( variable_1 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; if ( variable_1 ) variable_0 = ( int * ) malloc ( 10 * sizeof ( int ) ) ; int variable_2 [ 10 ] = { 0 } ; memcpy ( variable_0 , variable_2 , 10 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_3 ) printf ( " %d \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; while ( 1 ) variable_1 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_2 [ 100 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < 100 ; variable_3 ++ ) variable_2 [ variable_3 ] . variable_4 = 0 ; variable_2 [ variable_3 ] . variable_5 = 0 ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] . variable_4 ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_1	-1
static void func_0 ( ) int * variable_0 ; variable_0 = NULL ; variable_0 = ( int * ) malloc ( 100 * sizeof ( int ) ) ; int variable_1 [ 100 ] = { 0 } ; memmove ( variable_0 , variable_1 , 100 * sizeof ( int ) ) ; func_1 ( variable_0 [ 0 ] ) ; void func_2 ( int variable_2 ) printf ( " %d \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( strlen ( variable_2 ) + 1 ) * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_1 ) wchar_t * variable_0 = * variable_1 ; wchar_t variable_2 [ 50 ] = L " " memmove ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 == 5 ) variable_1 = ( int64_t * ) malloc ( 100 * sizeof ( variable_0 ) ) ; int64_t variable_3 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_3 , 100 * sizeof ( variable_0 ) ) ; func_1 ( variable_1 [ 0 ] ) ; void func_2 ( int64_t variable_4 ) printf ( " % lld \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncat ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strcat ( variable_1 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; size_t variable_5 , variable_6 ; variable_6 = strlen ( variable_3 ) ; for ( variable_5 = 0 ; variable_5 < variable_6 + 1 ; variable_5 ++ ) variable_2 [ variable_5 ] = variable_3 [ variable_5 ] ; free ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; if ( variable_1 ) variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 , 100 , " %s " , variable_2 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( wcslen ( variable_1 ) + 1 ) * sizeof ( wchar_t ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscat ( variable_0 , variable_1 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) wcsncat ( variable_1 , variable_0 , wcslen ( variable_0 ) ) ; func_9 ( variable_0 ) ; void func_10 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_2 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_1 , variable_2 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_1	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( 0 ) variable_1 = ( twoIntsStruct * ) malloc ( sizeof ( * variable_1 ) ) ; variable_1 -> variable_2 = 1 ; variable_1 -> variable_3 = 2 ; func_1 ( variable_1 ) ; void func_2 ( const twoIntsStruct * variable_4 ) printf ( " %d -- %d \n " , variable_4 -> variable_2 , variable_4 -> variable_3 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_2 , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( char * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_1 [ 10 + 1 ] = variable_2 ; memcpy ( variable_0 , variable_1 , ( strlen ( variable_1 ) + 1 ) * sizeof ( char ) ) ; func_7 ( variable_0 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; wcsncpy ( variable_0 , variable_2 , wcslen ( variable_2 ) + 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) strcat ( variable_1 , variable_0 ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_0 , variable_1 , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_1 * variable_2 ; variable_2 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_2 = new TwoIntsClass [ 100 ] ; TwoIntsClass variable_3 [ 100 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < 100 ; variable_4 ++ ) variable_3 [ variable_4 ] . variable_5 = 0 ; variable_3 [ variable_4 ] . variable_6 = 0 ; memmove ( variable_2 , variable_3 , 100 * sizeof ( variable_1 ) ) ; func_1 ( variable_2 [ 0 ] . variable_5 ) ; void func_2 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ; delete [ ] variable_2	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_1 = new int64_t [ 100 ] ; variable_1 = new int64_t [ 100 ] ; int64_t variable_2 [ 100 ] = { 0 } ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( variable_0 ) ) ; func_3 ( variable_1 [ 0 ] ) ; void func_4 ( int64_t variable_3 ) printf ( " % lld \n " , variable_3 ) ; delete [ ] variable_1	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_7 ( variable_0 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) strcpy ( variable_1 , variable_0 ) ; func_9 ( variable_0 ) ; void func_10 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = new char [ 10 + 1 ] ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) char * * variable_2 = ( char * * ) variable_1 ; char * variable_0 = ( * variable_2 ) ; char variable_3 [ 10 + 1 ] = variable_4 ; memmove ( variable_0 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_0 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_3 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_2 [ 50 ] = L " " memcpy ( variable_2 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; return variable_0 ; char variable_1 [ 50 ] = " " ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 10 + 1 ] = variable_2 ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 . func_3 ( ) ; TwoIntsClass variable_4 [ 100 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < 100 ; variable_5 ++ ) variable_4 [ variable_5 ] . variable_6 = 0 ; variable_4 [ variable_5 ] . variable_7 = 0 ; memmove ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_4 ( variable_3 [ 0 ] . variable_6 ) ; void func_5 ( int variable_8 ) printf ( " %d \n " , variable_8 ) ; delete [ ] variable_3	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; if ( variable_1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , strlen ( variable_0 ) * sizeof ( char ) ) ; variable_2 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 10 + 1 ] = variable_4 ; size_t variable_5 , variable_6 ; variable_6 = wcslen ( variable_3 ) ; for ( variable_5 = 0 ; variable_5 < variable_6 + 1 ; variable_5 ++ ) variable_2 [ variable_5 ] = variable_3 [ variable_5 ] ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t variable_1 [ 10 + 1 ] = variable_2 ; wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_0 , variable_1 , 100 - 1 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncat ( variable_0 , variable_1 , 100 ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_2	-1
variable_0 :: ~ func_0 ( ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_1 , 100 - 1 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 ) delete [ ] variable_2	-1
static void func_0 ( ) switch ( 6 ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_1 ( variable_4 [ variable_5 ] ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) variable_0 = new char [ 10 + 1 ] ; char variable_2 [ 10 + 1 ] = variable_3 ; strcpy ( variable_0 , variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 10 + 1 ] ; wchar_t * variable_1 = variable_0 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 10 + 1 ] = variable_3 ; memmove ( variable_0 , variable_2 , ( wcslen ( variable_2 ) + 1 ) * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) delete [ ] variable_0	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; while ( 1 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_0 ) ) ; variable_1 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_4 [ 50 ] = L " " wcsncat ( variable_4 , variable_0 , wcslen ( variable_0 ) ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; variable_0 = new wchar_t [ 10 + 1 ] ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 10 + 1 ] = variable_5 ; wcscpy ( variable_0 , variable_4 ) ; func_4 ( variable_0 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 ) delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < variable_1 * > variable_2 ; func_1 ( variable_2 ) ; void func_2 ( variable_0 < variable_1 * > variable_2 ) variable_1 * variable_3 = variable_2 [ 2 ] ; int64_t variable_4 [ 100 ] = { 0 } ; memcpy ( variable_3 , variable_4 , 100 * sizeof ( variable_1 ) ) ; func_3 ( variable_3 [ 0 ] ) ; void func_4 ( int64_t variable_5 ) printf ( " % lld \n " , variable_5 ) ; delete [ ] variable_3	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 10 + 1 ] = variable_4 ; strcpy ( variable_2 , variable_3 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' wchar_t variable_1 [ 50 ] = L " " memmove ( variable_1 , variable_0 , wcslen ( variable_0 ) * sizeof ( wchar_t ) ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; char * variable_1 = variable_0 ; char * variable_0 = variable_1 ; strcat ( variable_2 , variable_0 ) ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_3 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_4 ( variable_0 ) ; void func_5 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = variable_0 ; variable_1 [ 1 ] = variable_0 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( variable_2 < int , wchar_t * > variable_1 ) wchar_t * variable_0 = variable_1 [ 2 ] ; wcsncat ( variable_3 , variable_0 , wcslen ( variable_0 ) ) ; func_3 ( variable_0 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_3 ( ) size_t variable_4 , variable_5 ; variable_5 = strlen ( variable_0 ) ; for ( variable_4 = 0 ; variable_4 < variable_5 ; variable_4 ++ )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 50 - 1 ) ; variable_0 [ 50 - 1 ] = ' \0 ' ; func_1 ( variable_1 , strlen ( variable_0 ) , " %s " , variable_0 ) ; func_2 ( variable_0 ) ; void func_3 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; delete [ ] variable_0	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 10 + 1 ] = variable_4 ; memcpy ( variable_2 , variable_3 , ( strlen ( variable_3 ) + 1 ) * sizeof ( char ) ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; delete [ ] variable_2	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = new wchar_t [ 100 ] ; variable_0 [ 0 ] = L ' \0 ' wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_0 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 ) delete [ ] variable_0	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = new wchar_t [ 100 ] ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wmemset ( variable_0 , L ' A ' , 50 - 1 variable_0 [ 50 - 1 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_4 [ 50 ] = L " " wcscat ( variable_4 , variable_0 ) ;	-1
static void func_0 ( ) variable_0 * variable_1 ; variable_1 = NULL ; if ( variable_2 ) variable_1 = ( double * ) malloc ( sizeof ( * variable_1 ) ) ; * variable_1 = 1 . 7 variable_3 ; func_1 ( * variable_1 ) ; void func_2 ( double variable_4 ) printf ( " % g \n " , variable_4 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) variable_4 [ variable_3 ] = 1 ; func_1 ( variable_4 [ variable_5 ] ) ; void func_2 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ; delete [ ] variable_4	-1
