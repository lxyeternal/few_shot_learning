static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( variable_0 < char * > variable_1 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_2 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
void func_0 ( variable_0 < char * > variable_1 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_2 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) 93 char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; switch ( 5 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) if ( 5 != 5 ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( 1 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_8 ( variable_19 [ variable_18 ] ) ; void func_9 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) func_5 ( variable_3 ) ; void func_6 ( int variable_3 ) func_7 ( variable_3 ) ; void func_8 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_9 ( variable_4 [ variable_3 ] ) ; void func_10 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_1 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; char * variable_4 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_11 ( variable_21 [ variable_20 ] ) ; void func_12 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__malloc_char_memcpy_67_structType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_char_memcpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__malloc_char_cpy_34_unionType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 * 2 ] ; memset ( variable_5 , ' C ' , 100 * 2 - 1 ) ; variable_5 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_5 , variable_0 ) ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strncpy ( variable_2 , variable_1 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_8 ( variable_2 ) ; void func_9 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; unionType variable_1 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 1 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_1 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__malloc_wchar_t_memcpy_67_structType variable_1 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_wchar_t_memcpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_15 ( variable_21 [ variable_20 ] ) ; void func_16 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; while ( 1 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return 1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) func_8 ( variable_1 ) ; void func_9 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_10 ( variable_2 ) ; void func_11 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 == 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_2 ( variable_0 ) ; void variable_4 :: func_3 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_alloca_memcpy_34_unionType variable_1 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_5 ) ; void func_3 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_declare_ncpy_67_structType variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__char_declare_ncpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 5 == 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; while ( 1 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 5 != 5 ) variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) func_8 ( variable_1 ) ; void func_9 ( char * variable_1 ) strncpy ( variable_2 , variable_1 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_10 ( variable_2 ) ; void func_11 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) func_8 ( variable_1 ) ; void func_9 ( char * variable_1 ) memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_10 ( variable_2 ) ; void func_11 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 -> func_9 ( variable_20 ) ; void variable_22 :: func_10 ( int variable_20 ) if ( variable_20 < 10 ) func_11 ( variable_23 [ variable_20 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 0 ] = variable_18 ; variable_19 [ 1 ] = variable_18 ; variable_19 [ 2 ] = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( variable_20 < int , int > variable_19 ) int variable_18 = variable_19 [ 2 ] ; if ( variable_18 < 10 ) func_10 ( variable_21 [ variable_18 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) memcpy ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_9 ( variable_2 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_3 < int , char * > variable_2 ) char * variable_1 = variable_2 [ 2 ] ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; int variable_19 = variable_18 ; int variable_18 = variable_19 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_8 ( variable_20 [ variable_18 ] ) ; void func_9 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( void * variable_21 ) int * variable_22 = ( int * ) variable_21 ; int variable_20 = ( * variable_22 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_11 ( variable_23 [ variable_20 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_14 ( variable_19 [ variable_18 ] ) ; void func_15 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_5 ( variable_4 [ variable_3 ] ) ; void func_6 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_8 ( variable_2 ) ; void func_9 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) func_9 ( variable_22 [ variable_21 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . variable_20 = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( CWE127_Buffer_Underread__CWE839_connect_socket_67_structType variable_19 ) int variable_18 = variable_19 . variable_20 ; if ( variable_18 < 10 ) func_10 ( variable_21 [ variable_18 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_1 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) switch ( 6 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_8 ( variable_19 [ variable_18 ] ) ; void func_9 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 0 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; switch ( 6 ) variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_declare_cpy_34_unionType variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 * 2 ] ; memset ( variable_5 , ' C ' , 100 * 2 - 1 ) ; variable_5 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_5 , variable_0 ) ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return 0 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_2 ( variable_0 ) ; void variable_4 :: func_3 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . variable_22 = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( CWE127_Buffer_Underread__CWE839_listen_socket_67_structType variable_21 ) int variable_20 = variable_21 . variable_22 ; if ( variable_20 < 10 ) func_11 ( variable_23 [ variable_20 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
variable_0 :: func_0 ( int variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t * variable_3 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_2 ( variable_2 ) ; void func_3 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) if ( variable_20 < 10 ) func_13 ( variable_21 [ variable_20 ] ) ; void func_14 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_2 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; switch ( 5 ) variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; return variable_0 ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__malloc_char_memmove_67_structType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_char_memmove_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_20 ) ; void func_10 ( int * variable_21 ) int variable_20 = * variable_21 ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_11 ( variable_22 [ variable_20 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ;	-1
static void func_0 ( ) switch ( 6 ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ; if ( variable_21 >= 0 && variable_21 < ( 10 ) ) func_9 ( variable_22 [ variable_21 ] ) ; void func_10 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_3 < int , wchar_t * > variable_2 ) wchar_t * variable_1 = variable_2 [ 2 ] ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 6 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 == 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) switch ( 6 ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 [ ] ) char * variable_1 = variable_2 [ 2 ] ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( variable_0 == 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_2 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_11 ( variable_21 [ variable_20 ] ) ; void func_12 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_18 ) ; void func_9 ( void * variable_19 ) int * variable_20 = ( int * ) variable_19 ; int variable_18 = ( * variable_20 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_21 [ variable_18 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( & variable_1 ) ; void func_3 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_1 = ( * variable_3 ) ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) if ( variable_3 < 10 ) func_3 ( variable_4 [ variable_3 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( char * * variable_2 ) char * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_1 , variable_0 , wcslen ( variable_1 ) ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) if ( variable_18 < 10 ) func_10 ( variable_19 [ variable_18 ] ) ; void func_11 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_4 [ variable_3 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 0 ] = variable_20 ; variable_21 [ 1 ] = variable_20 ; variable_21 [ 2 ] = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( variable_22 < int , int > variable_21 ) int variable_20 = variable_21 [ 2 ] ; if ( variable_20 < 10 ) func_11 ( variable_23 [ variable_20 ] ) ; void func_12 ( int variable_24 ) printf ( " %d \n " , variable_24 ) ;	-1
static void func_0 ( ) while ( 1 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; if ( variable_20 >= 0 && variable_20 < ( 10 ) ) func_9 ( variable_21 [ variable_20 ] ) ; void func_10 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_1 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 [ 0 ] = variable_3 ; variable_4 [ 1 ] = variable_3 ; variable_4 [ 2 ] = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( variable_5 < int , int > variable_4 ) int variable_3 = variable_4 [ 2 ] ; if ( variable_3 < 10 ) func_3 ( variable_6 [ variable_3 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_1 = ( * variable_3 ) ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_1 ) ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 . variable_3 = variable_1 ; func_2 ( variable_2 ) ; void func_3 ( CWE127_Buffer_Underread__char_alloca_loop_67_structType variable_2 ) char * variable_1 = variable_2 . variable_3 ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) static int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; wchar_t * variable_3 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_4 , variable_0 , wcslen ( variable_4 ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_2 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_19 [ variable_18 ] ) ; void func_11 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_12 ( variable_19 [ variable_18 ] ) ; void func_13 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 . variable_3 = variable_1 ; char * variable_1 = variable_2 . variable_4 ; variable_5 [ variable_6 ] = variable_1 [ variable_6 ] ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; wchar_t * variable_3 = new wchar_t [ 100 ] ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_4 , variable_0 , wcslen ( variable_4 ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ 2 ] = variable_1 ; func_2 ( variable_2 ) ; void func_3 ( char * variable_2 [ ] ) char * variable_1 = variable_2 [ 2 ] ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_alloca_memmove_34_unionType variable_1 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_5 ) ; void func_3 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; switch ( 6 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_1 ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 2 ] = variable_20 ; func_9 ( variable_21 ) ; void func_10 ( int variable_21 [ ] ) int variable_20 = variable_21 [ 2 ] ; if ( variable_20 < 10 ) func_11 ( variable_22 [ variable_20 ] ) ; void func_12 ( int variable_23 ) printf ( " %d \n " , variable_23 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) static int func_3 ( ) return 0 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return 0 ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_4 [ variable_3 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_5 ( variable_4 [ variable_3 ] ) ; void func_6 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_2 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_18 ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 1 ; WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_2 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_19 [ variable_18 ] ) ; void func_11 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_12 ( variable_19 [ variable_18 ] ) ; void func_13 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strncpy ( variable_2 , variable_1 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 . variable_3 = variable_1 ; char * variable_1 = variable_2 . variable_4 ; variable_5 [ variable_6 ] = variable_1 [ variable_6 ] ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 5 == 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 6 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_1 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__malloc_char_ncpy_67_structType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_char_ncpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_18 ) ; void func_9 ( int * variable_19 ) int variable_18 = * variable_19 ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_20 [ variable_18 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 1 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; char variable_7 [ variable_8 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_9 ) variable_10 = func_5 ( variable_11 , variable_12 , variable_13 ) ; if ( variable_10 == variable_14 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_15 = variable_11 ; variable_6 . variable_16 . variable_17 = func_6 ( variable_18 ) ; variable_6 . variable_19 = func_7 ( variable_20 ) ; if ( func_8 ( variable_10 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_21 ) variable_5 = recv ( variable_10 , variable_7 , variable_8 - 1 , 0 ) ; if ( variable_5 == variable_21 || variable_5 == 0 ) variable_7 [ variable_5 ] = ' \0 ' ; variable_0 = atoi ( variable_7 ) ; while ( 0 ) if ( variable_10 != variable_14 ) func_9 ( variable_10 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strcpy ( variable_2 , variable_1 ) ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 == 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_19 [ variable_18 ] ) ; void func_11 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; variable_2 -> func_1 ( variable_1 ) ; void variable_3 :: func_2 ( wchar_t * variable_1 ) variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 == 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_2 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; switch ( 5 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_declare_cpy_67_structType variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__wchar_t_declare_cpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) while ( 1 ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_8 ( variable_19 [ variable_18 ] ) ; void func_9 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 * 2 ] ; wmemset ( variable_1 , L ' C ' , 100 * 2 - 1 variable_1 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_0 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_2 ) wchar_t * variable_0 = * variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) static int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 == 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__malloc_wchar_t_memmove_34_unionType variable_1 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_5 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_alloca_memcpy_67_structType variable_1 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( CWE127_Buffer_Underread__char_alloca_memcpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
int func_0 ( int variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; return variable_0 ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_alloca_ncpy_34_unionType variable_1 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_5 ) ; void func_3 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
void func_0 ( variable_0 < char * > variable_1 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_2 [ variable_3 ] = variable_4 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) func_8 ( variable_1 ) ; void func_9 ( char * variable_1 ) memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_10 ( variable_2 ) ; void func_11 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_1 = ( * variable_3 ) ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_char_loop_67_structType variable_2 ) char * variable_1 = variable_2 . variable_3 ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) if ( variable_0 != 5 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; char * variable_3 = new char [ 100 ] ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_1 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( & variable_3 ) ; void func_2 ( void * variable_4 ) int * variable_5 = ( int * ) variable_4 ; int variable_3 = ( * variable_5 ) ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_6 [ variable_3 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_2 ( variable_0 ) ; void variable_4 :: func_3 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_declare_memmove_34_unionType variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_4 , variable_0 , wcslen ( variable_4 ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( & variable_1 ) ; void func_3 ( char * * variable_2 ) char * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_6 ( variable_2 ) ; void func_7 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 2 ] = variable_18 ; func_8 ( variable_19 ) ; void func_9 ( int variable_19 [ ] ) int variable_18 = variable_19 [ 2 ] ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_20 [ variable_18 ] ) ; void func_11 ( int variable_21 ) printf ( " %d \n " , variable_21 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_6 ( variable_2 ) ; void func_7 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 * 2 ] ; memset ( variable_5 , ' C ' , 100 * 2 - 1 ) ; variable_5 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_5 , variable_0 ) ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_3 < int , char * > variable_2 ) char * variable_1 = variable_2 [ 2 ] ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_alloca_cpy_34_unionType variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_2 ( variable_5 ) ; void func_3 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; char * variable_3 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_2 ( variable_2 ) ; void func_3 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; while ( 1 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_1 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( char * * variable_2 ) char * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 0 ; char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) wcsncpy ( variable_2 , variable_1 , wcslen ( variable_2 ) ) ; func_9 ( variable_2 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; while ( 1 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) int variable_0 ; variable_0 = - 1 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( int variable_3 ) WSADATA variable_4 ; int variable_5 ; struct sockaddr_in variable_6 ; char variable_7 [ variable_8 ] ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_9 ) variable_10 = func_5 ( variable_11 , variable_12 , variable_13 ) ; if ( variable_10 == variable_14 ) memset ( & variable_6 , 0 , sizeof ( variable_6 ) ) ; variable_6 . variable_15 = variable_11 ; variable_6 . variable_16 . variable_17 = variable_18 ; variable_6 . variable_19 = func_6 ( variable_20 ) ; if ( bind ( variable_10 , ( struct sockaddr * ) & variable_6 , sizeof ( variable_6 ) ) == variable_21 ) if ( func_7 ( variable_10 , variable_22 ) == variable_21 ) variable_23 = func_8 ( variable_10 , NULL , NULL ) ; if ( variable_23 == variable_21 ) variable_5 = recv ( variable_23 , variable_7 , variable_8 - 1 , 0 ) ; if ( variable_5 == variable_21 || variable_5 == 0 ) variable_7 [ variable_5 ] = ' \0 ' ; variable_0 = atoi ( variable_7 ) ; while ( 0 ) if ( variable_10 != variable_14 ) func_9 ( variable_10 ) ; if ( variable_23 != variable_14 ) func_10 ( variable_23 ) ;	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_2 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( wchar_t * variable_2 [ ] ) wchar_t * variable_1 = variable_2 [ 2 ] ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( structType variable_2 ) char * variable_1 = variable_2 . variable_3 ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__char_declare_cpy_67_structType variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__char_declare_cpy_67_structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) memmove ( variable_2 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_9 ( variable_2 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; char * variable_4 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; char * variable_2 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = * variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 5 != 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_1 = ( * variable_3 ) ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; char * variable_3 = new char [ 100 ] ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_declare_memcpy_34_unionType variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_5 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 == 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 [ ] ) char * variable_1 = variable_2 [ 2 ] ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; return variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_4 , variable_0 , wcslen ( variable_4 ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_2 , wcslen ( variable_3 ) ) ; func_4 ( variable_3 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = new wchar_t [ 100 ] ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_5 , variable_0 , wcslen ( variable_5 ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE127_Buffer_Underread__malloc_char_memmove_34_unionType variable_1 ; variable_0 = NULL ; char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; char * variable_0 = variable_1 . variable_4 ; char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( & variable_1 ) ; void func_2 ( char * * variable_2 ) char * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 5 != 5 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_2 ( variable_0 ) ; void variable_4 :: func_3 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 5 == 5 ) variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_2 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_4 , variable_0 , strlen ( variable_4 ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 5 == 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_2 ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strcpy ( variable_2 , variable_1 ) ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 * 2 ] ; wmemset ( variable_1 , L ' C ' , 100 * 2 - 1 variable_1 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_0 ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) if ( 1 ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_20 ) ; void func_10 ( int variable_20 ) func_11 ( variable_20 ) ; void func_12 ( int variable_20 ) func_13 ( variable_20 ) ; void func_14 ( int variable_20 ) func_15 ( variable_20 ) ; void func_16 ( int variable_20 ) if ( variable_20 < 10 ) func_17 ( variable_21 [ variable_20 ] ) ; void func_18 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; variable_5 [ variable_6 ] = variable_0 [ variable_6 ] ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_3 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 != 5 ) variable_0 = variable_1 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 != 5 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 6 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 * 2 ] ; memset ( variable_1 , ' C ' , 100 * 2 - 1 ) ; variable_1 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_declare_memmove_67_structType variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE127_Buffer_Underread__wchar_t_declare_memmove_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_2 , wcslen ( variable_3 ) ) ; func_4 ( variable_3 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( & variable_3 ) ; void func_2 ( int * variable_4 ) int variable_3 = * variable_4 ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_5 [ variable_3 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_5 , variable_0 , wcslen ( variable_5 ) ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( int & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_0 = atoi ( variable_4 ) ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_2 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) memcpy ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 ) variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_3 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_18 ) ; void func_9 ( int variable_18 ) func_10 ( variable_18 ) ; void func_11 ( int variable_18 ) func_12 ( variable_18 ) ; void func_13 ( int variable_18 ) func_14 ( variable_18 ) ; void func_15 ( int variable_18 ) if ( variable_18 < 10 ) func_16 ( variable_19 [ variable_18 ] ) ; void func_17 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; while ( 1 ) variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; char * variable_4 = new char [ 100 ] ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; char * variable_0 = variable_1 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_8 ( variable_19 [ variable_18 ] ) ; void func_9 ( int variable_20 ) printf ( " %d \n " , variable_20 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( wchar_t * * variable_2 ) wchar_t * variable_1 = * variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = NULL ; char * variable_3 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' switch ( 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; char * variable_4 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; variable_5 [ variable_6 ] = variable_0 [ variable_6 ] ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_alloca_memcpy_34_unionType variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_5 ) ; void func_3 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) if ( variable_3 < 10 ) func_3 ( variable_4 [ variable_3 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_20 ;	-1
static void func_0 ( ) char * variable_0 ; structType variable_1 ; variable_0 = NULL ; char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) char * variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; memset ( variable_4 , ' C ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_4 , variable_0 , 100 * sizeof ( char ) ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_1 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strncpy ( variable_2 , variable_1 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 [ 2 ] = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( int variable_4 [ ] ) int variable_3 = variable_4 [ 2 ] ; if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_5 [ variable_3 ] ) ; void func_4 ( int variable_6 ) printf ( " %d \n " , variable_6 ) ;	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_2 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) if ( variable_0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) int variable_0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE127_Buffer_Underread__char_declare_loop_67_structType variable_2 ) char * variable_1 = variable_2 . variable_3 ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; wchar_t * variable_3 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_2 ( variable_2 ) ; void func_3 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; wchar_t * variable_3 = new wchar_t [ 100 ] ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) if ( func_1 ( ) ) static int func_2 ( ) return 1 ; wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) variable_0 < char * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < char * > variable_1 ) char * variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_2 ) ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_2 ) char * variable_0 = * variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_3 , variable_0 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_alloca_ncpy_34_unionType variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_5 , variable_0 , wcslen ( variable_5 ) ) ; func_2 ( variable_5 ) ; void func_3 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; if ( 0 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = NULL ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_1 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_3 , variable_0 , strlen ( variable_3 ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( variable_3 < int , char * > variable_2 ) char * variable_1 = variable_2 [ 2 ] ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_3 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_5 , variable_0 , 100 * sizeof ( char ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 5 == 5 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( char * variable_0 ) char variable_5 [ 100 * 2 ] ; memset ( variable_5 , ' C ' , 100 * 2 - 1 ) ; variable_5 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_5 , variable_0 ) ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_1 , variable_0 , strlen ( variable_1 ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 -> func_1 ( variable_3 ) ; void variable_5 :: func_2 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_6 [ variable_3 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 ) func_4 ( variable_1 ) ; void func_5 ( char * variable_1 ) func_6 ( variable_1 ) ; void func_7 ( char * variable_1 ) func_8 ( variable_1 ) ; void func_9 ( char * variable_1 ) strcpy ( variable_2 , variable_1 ) ; func_10 ( variable_2 ) ; void func_11 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_5 , variable_0 , wcslen ( variable_5 ) ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__malloc_wchar_t_ncpy_34_unionType variable_1 ; variable_0 = NULL ; wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_5 , variable_0 , wcslen ( variable_5 ) ) ; func_1 ( variable_5 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; func_1 ( & variable_1 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_1 = ( * variable_3 ) ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) wcscpy ( variable_2 , variable_1 ) ; func_9 ( variable_2 ) ; void func_10 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_0 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) static int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_alloca_ncpy_67_structType variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( CWE127_Buffer_Underread__wchar_t_alloca_ncpy_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_4 , variable_0 , wcslen ( variable_4 ) ) ; func_4 ( variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; char * variable_3 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_2 ( variable_2 ) ; void func_3 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = new wchar_t [ 100 ] ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 1 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( wchar_t * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( wchar_t * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; func_9 ( variable_2 ) ; void func_10 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_2 ) ; void func_5 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char * variable_0 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; variable_2 [ 0 ] = variable_1 ; variable_2 [ 1 ] = variable_1 ; variable_2 [ 2 ] = variable_1 ; func_2 ( variable_2 ) ; void func_3 ( variable_3 < int , char * > variable_2 ) char * variable_1 = variable_2 [ 2 ] ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; variable_4 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) if ( func_1 ( ) ) int func_2 ( ) return 0 ; char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 == 5 ) wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_5 ( variable_2 ) ; void func_6 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_2 ) wchar_t * variable_0 = * variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; variable_4 . variable_5 = variable_3 ; func_1 ( variable_4 ) ; void func_2 ( CWE127_Buffer_Underread__CWE839_fgets_67_structType variable_4 ) int variable_3 = variable_4 . variable_5 ; if ( variable_3 < 10 ) func_3 ( variable_6 [ variable_3 ] ) ; void func_4 ( int variable_7 ) printf ( " %d \n " , variable_7 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( 0 ) variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_2 ) ; void func_8 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) static int func_3 ( ) return 1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_6 ( variable_2 ) ; void func_7 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; char variable_3 [ 100 ] ; memset ( variable_3 , ' C ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_3 , variable_1 , 100 * sizeof ( char ) ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; return variable_0 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) variable_0 < wchar_t * > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < wchar_t * > variable_1 ) wchar_t * variable_2 = variable_1 . func_3 ( ) ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_2 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_3 ) ; void func_5 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) if ( variable_0 == 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_6 ( variable_2 ) ; void func_7 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 -> func_8 ( variable_18 ) ; void variable_20 :: func_9 ( int variable_18 ) if ( variable_18 >= 0 && variable_18 < ( 10 ) ) func_10 ( variable_21 [ variable_18 ] ) ; void func_11 ( int variable_22 ) printf ( " %d \n " , variable_22 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_alloca_memmove_34_unionType variable_1 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_5 ) ; void func_3 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char variable_1 [ 100 * 2 ] ; memset ( variable_1 , ' C ' , 100 * 2 - 1 ) ; variable_1 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_1 , variable_0 ) ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 5 == 5 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 != 5 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 ; wchar_t * variable_2 = variable_1 ; wchar_t * variable_1 = variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 != 5 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; while ( 1 ) char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 = ( char * ) func_1 ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_2 ( variable_0 ) ; void variable_4 :: func_3 ( char * variable_0 ) char variable_5 [ 100 ] ; memset ( variable_5 , ' C ' , 100 - 1 ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_5 , variable_0 , strlen ( variable_5 ) ) ; variable_5 [ 100 - 1 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; char variable_1 [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; char variable_4 [ 100 * 2 ] ; memset ( variable_4 , ' C ' , 100 * 2 - 1 ) ; variable_4 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' C ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = variable_2 [ variable_1 ] ; variable_0 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) if ( variable_0 != 5 ) char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_2 = variable_1 ; variable_3 [ variable_4 ] = variable_2 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) func_7 ( variable_1 ) ; void func_8 ( char * variable_1 ) strcpy ( variable_2 , variable_1 ) ; func_9 ( variable_2 ) ; void func_10 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = variable_3 [ variable_2 ] ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( wchar_t * variable_0 ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memmove ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_7 ( variable_1 ) ; void func_8 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) char variable_0 [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; variable_2 [ 2 ] = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( char * variable_2 [ ] ) char * variable_1 = variable_2 [ 2 ] ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; switch ( 5 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = NULL ; wchar_t * variable_3 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_3 , L ' A ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_3 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( 0 ) wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = new char [ 100 ] ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 * 2 ] ; wmemset ( variable_1 , L ' C ' , 100 * 2 - 1 variable_1 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_1 , variable_0 ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memmove ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; static void func_2 ( int variable_3 ) if ( variable_3 >= 0 && variable_3 < ( 10 ) ) func_3 ( variable_4 [ variable_3 ] ) ; void func_4 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_5 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memmove ( variable_2 , variable_1 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( char * variable_0 ) char variable_1 [ 100 ] ; memset ( variable_1 , ' C ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_1 , variable_0 , 100 * sizeof ( char ) ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) wchar_t * variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 = variable_0 - 8 ; variable_2 . variable_3 = variable_1 ; func_1 ( variable_2 ) ; void func_2 ( CWE127_Buffer_Underread__malloc_wchar_t_loop_67_structType variable_2 ) wchar_t * variable_1 = variable_2 . variable_3 ; variable_4 [ variable_5 ] = variable_1 [ variable_5 ] ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t * variable_2 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_3 ) ; void func_3 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( int variable_3 ) func_3 ( variable_3 ) ; void func_4 ( int variable_3 ) func_5 ( variable_3 ) ; void func_6 ( int variable_3 ) if ( variable_3 < 10 ) func_7 ( variable_4 [ variable_3 ] ) ; void func_8 ( int variable_5 ) printf ( " %d \n " , variable_5 ) ;	-1
void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; memcpy ( variable_2 , variable_0 , 100 * sizeof ( char ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_2 ) wchar_t * variable_0 = * variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) if ( variable_1 ) char * variable_2 = new char [ 100 ] ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_2 ; return variable_0 ; char variable_3 [ 100 * 2 ] ; memset ( variable_3 , ' C ' , 100 * 2 - 1 ) ; variable_3 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_2 ) ; void func_5 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) char * variable_0 = new char [ 100 ] ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 ; char * variable_2 = variable_1 ; char * variable_1 = variable_2 ; variable_3 [ variable_4 ] = variable_1 [ variable_4 ] ; variable_3 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' C ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_1 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_1 ) ; void func_2 ( const wchar_t * variable_2 ) if ( variable_2 != NULL ) wprintf ( L " % ls \n " , variable_2 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( variable_2 ) variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = NULL ; char * variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) char variable_2 [ 100 * 2 ] ; memset ( variable_2 , ' C ' , 100 * 2 - 1 ) ; variable_2 [ 100 * 2 - 1 ] = ' \0 ' ; strcpy ( variable_2 , variable_0 ) ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t * variable_0 = * variable_1 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' memmove ( variable_3 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
void func_0 ( ) char * variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; memset ( variable_0 , ' A ' , 100 - 1 ) ; variable_0 [ 100 - 1 ] = ' \0 ' ; variable_1 = variable_0 - 8 ; func_1 ( variable_1 ) ; void func_2 ( char * variable_1 ) func_3 ( variable_1 ) ; void func_4 ( char * variable_1 ) func_5 ( variable_1 ) ; void func_6 ( char * variable_1 ) variable_2 [ variable_3 ] = variable_1 [ variable_3 ] ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; return variable_0 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; structType variable_1 ; variable_0 = NULL ; wchar_t * variable_2 = new wchar_t [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; wchar_t variable_4 [ 100 ] ; wmemset ( variable_4 , L ' C ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_4 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = new wchar_t [ 100 ] ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 ] ; wmemset ( variable_5 , L ' C ' , 100 - 1 variable_5 [ 100 - 1 ] = L ' \0 ' memmove ( variable_5 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = new wchar_t [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_3 ( variable_4 ) ; void func_4 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wchar_t * variable_4 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_4 , L ' A ' , 100 - 1 variable_4 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_4 ; delete variable_2 variable_1 :: ~ func_3 ( ) wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_4 ( variable_5 ) ; void func_5 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE127_Buffer_Underread__wchar_t_declare_cpy_34_unionType variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; wchar_t variable_5 [ 100 * 2 ] ; wmemset ( variable_5 , L ' C ' , 100 * 2 - 1 variable_5 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_5 , variable_0 ) ; func_1 ( variable_5 ) ; void func_2 ( const wchar_t * variable_6 ) if ( variable_6 != NULL ) wprintf ( L " % ls \n " , variable_6 )	-1
static void func_0 ( ) char * variable_0 = variable_1 ; char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_0 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( 0 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memcpy ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; wchar_t * variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' while ( 1 ) variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_2 , variable_0 , wcslen ( variable_2 ) ) ; func_2 ( variable_2 ) ; void func_3 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = NULL ; if ( variable_1 ) wchar_t * variable_2 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_0 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_2 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; wchar_t variable_3 [ 100 * 2 ] ; wmemset ( variable_3 , L ' C ' , 100 * 2 - 1 variable_3 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_3 , variable_0 ) ; func_3 ( variable_3 ) ; void func_4 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void variable_0 :: func_0 ( char * variable_1 ) const char variable_2 [ 100 ] ; memset ( variable_2 , ' C ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; strncpy ( variable_2 , variable_1 , strlen ( variable_2 ) ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 = ( wchar_t * ) func_1 ( 100 * sizeof ( wchar_t ) ) ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' variable_0 = variable_1 ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; wchar_t variable_4 [ 100 * 2 ] ; wmemset ( variable_4 , L ' C ' , 100 * 2 - 1 variable_4 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_4 , variable_0 ) ; func_4 ( variable_4 ) ; void func_5 ( const wchar_t * variable_5 ) if ( variable_5 != NULL ) wprintf ( L " % ls \n " , variable_5 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' A ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = variable_2 ; wchar_t variable_3 [ 100 ] ; wmemset ( variable_3 , L ' C ' , 100 - 1 variable_3 [ 100 - 1 ] = L ' \0 ' wcsncpy ( variable_3 , variable_1 , wcslen ( variable_3 ) ) ; func_1 ( variable_3 ) ; void func_2 ( const wchar_t * variable_4 ) if ( variable_4 != NULL ) wprintf ( L " % ls \n " , variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t variable_1 [ 100 ] ; wmemset ( variable_1 , L ' A ' , 100 - 1 variable_1 [ 100 - 1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = variable_1 ; variable_0 = variable_1 ; wchar_t variable_2 [ 100 ] ; wmemset ( variable_2 , L ' C ' , 100 - 1 variable_2 [ 100 - 1 ] = L ' \0 ' memmove ( variable_2 , variable_0 , 100 * sizeof ( wchar_t ) ) ; func_3 ( variable_2 ) ; void func_4 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
void func_0 ( ) wchar_t * variable_0 = variable_1 ; wchar_t variable_2 [ 100 * 2 ] ; wmemset ( variable_2 , L ' C ' , 100 * 2 - 1 variable_2 [ 100 * 2 - 1 ] = L ' \0 ' wcscpy ( variable_2 , variable_0 ) ; func_1 ( variable_2 ) ; void func_2 ( const wchar_t * variable_3 ) if ( variable_3 != NULL ) wprintf ( L " % ls \n " , variable_3 )	-1
