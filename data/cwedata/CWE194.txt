static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; if ( variable_2 < 100 ) char * variable_3 = ( char * ) malloc ( variable_2 ) ; memset ( variable_3 , ' A ' , variable_2 - 1 ) ; variable_3 [ variable_2 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_7 ( variable_1 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; static short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__rand_strncpy_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return 1 ; variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) strncpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; switch ( 6 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; if ( variable_22 > variable_23 || variable_22 < variable_24 ) variable_25 = variable_22 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = ( short ) atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( short variable_3 ) func_3 ( variable_3 ) ; void func_4 ( short variable_3 ) func_5 ( variable_3 ) ; void func_6 ( short variable_3 ) func_7 ( variable_3 ) ; void func_8 ( short variable_3 ) if ( variable_3 < 100 ) memcpy ( variable_4 , variable_5 , variable_3 ) ; variable_4 [ variable_3 ] = ' \0 ' ; func_9 ( variable_4 ) ; void func_10 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__rand_strncpy_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__rand_strncpy_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 . func_8 ( variable_21 ) ; variable_22 . func_9 ( variable_21 ) ; variable_22 . func_10 ( variable_21 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = ( short ) atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( short variable_3 ) func_3 ( variable_3 ) ; void func_4 ( short variable_3 ) func_5 ( variable_3 ) ; void func_6 ( short variable_3 ) func_7 ( variable_3 ) ; void func_8 ( short variable_3 ) if ( variable_3 < 100 ) memmove ( variable_4 , variable_5 , variable_3 ) ; variable_4 [ variable_3 ] = ' \0 ' ; func_9 ( variable_4 ) ; void func_10 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) short * variable_2 = ( short * ) variable_1 ; short variable_0 = ( * variable_2 ) ; if ( variable_0 < 100 ) char * variable_3 = ( char * ) malloc ( variable_0 ) ; memset ( variable_3 , ' A ' , variable_0 - 1 ) ; variable_3 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = ( short ) atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( short variable_3 ) func_3 ( variable_3 ) ; void func_4 ( short variable_3 ) func_5 ( variable_3 ) ; void func_6 ( short variable_3 ) func_7 ( variable_3 ) ; void func_8 ( short variable_3 ) if ( variable_3 < 100 ) char * variable_4 = ( char * ) malloc ( variable_3 ) ; memset ( variable_4 , ' A ' , variable_3 - 1 ) ; variable_4 [ variable_3 - 1 ] = ' \0 ' ; func_9 ( variable_4 ) ; void func_10 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_1 = variable_0 ; short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_3 < 100 ) memmove ( variable_2 , variable_1 , variable_3 ) ; variable_2 [ variable_3 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_5 ( variable_1 ) ; void func_6 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_1 = variable_0 ; short variable_0 = variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memcpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ; void func_10 ( short variable_23 ) func_11 ( variable_23 ) ; void func_12 ( short variable_23 ) func_13 ( variable_23 ) ; void func_14 ( short variable_23 ) if ( variable_23 < 100 ) char * variable_24 = ( char * ) malloc ( variable_23 ) ; memset ( variable_24 , ' A ' , variable_23 - 1 ) ; variable_24 [ variable_23 - 1 ] = ' \0 ' ; func_15 ( variable_24 ) ; void func_16 ( const char * variable_25 ) if ( variable_25 != NULL ) printf ( " %s \n " , variable_25 ) ; free ( variable_24 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ; void func_9 ( short variable_21 ) func_10 ( variable_21 ) ; void func_11 ( short variable_21 ) func_12 ( variable_21 ) ; void func_13 ( short variable_21 ) func_14 ( variable_21 ) ; void func_15 ( short variable_21 ) if ( variable_21 < 100 ) memmove ( variable_22 , variable_23 , variable_21 ) ; variable_22 [ variable_21 ] = ' \0 ' ; func_16 ( variable_22 ) ; void func_17 ( const char * variable_24 ) if ( variable_24 != NULL ) printf ( " %s \n " , variable_24 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ; void func_10 ( short variable_23 ) func_11 ( variable_23 ) ; void func_12 ( short variable_23 ) func_13 ( variable_23 ) ; void func_14 ( short variable_23 ) func_15 ( variable_23 ) ; void func_16 ( short variable_23 ) if ( variable_23 < 100 ) strncpy ( variable_24 , variable_25 , variable_23 ) ; variable_24 [ variable_23 ] = ' \0 ' ; func_17 ( variable_24 ) ; void func_18 ( const char * variable_26 ) if ( variable_26 != NULL ) printf ( " %s \n " , variable_26 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_malloc_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__negative_malloc_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; if ( variable_0 < 100 ) char * variable_3 = ( char * ) malloc ( variable_0 ) ; memset ( variable_3 , ' A ' , variable_0 - 1 ) ; variable_3 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ; void func_9 ( short variable_21 ) func_10 ( variable_21 ) ; void func_11 ( short variable_21 ) func_12 ( variable_21 ) ; void func_13 ( short variable_21 ) func_14 ( variable_21 ) ; void func_15 ( short variable_21 ) if ( variable_21 < 100 ) char * variable_22 = ( char * ) malloc ( variable_21 ) ; memset ( variable_22 , ' A ' , variable_21 - 1 ) ; variable_22 [ variable_21 - 1 ] = ' \0 ' ; func_16 ( variable_22 ) ; void func_17 ( const char * variable_23 ) if ( variable_23 != NULL ) printf ( " %s \n " , variable_23 ) ; free ( variable_22 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; static short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_3 < 100 ) strncpy ( variable_2 , variable_1 , variable_3 ) ; variable_2 [ variable_3 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( short & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; if ( variable_21 > variable_22 || variable_21 < variable_23 ) variable_0 = variable_21 ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ; void func_10 ( short variable_23 ) func_11 ( variable_23 ) ; void func_12 ( short variable_23 ) func_13 ( variable_23 ) ; void func_14 ( short variable_23 ) func_15 ( variable_23 ) ; void func_16 ( short variable_23 ) if ( variable_23 < 100 ) char * variable_24 = ( char * ) malloc ( variable_23 ) ; memset ( variable_24 , ' A ' , variable_23 - 1 ) ; variable_24 [ variable_23 - 1 ] = ' \0 ' ; func_17 ( variable_24 ) ; void func_18 ( const char * variable_25 ) if ( variable_25 != NULL ) printf ( " %s \n " , variable_25 ) ; free ( variable_24 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; if ( variable_22 > variable_23 || variable_22 < variable_24 ) variable_25 = variable_22 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) strncpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 . func_9 ( variable_23 ) ; variable_24 . func_10 ( variable_23 ) ; variable_24 . func_11 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; short variable_1 [ 5 ] ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( short variable_1 [ ] ) short variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; switch ( 6 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memmove ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) strncpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_3 < 100 ) memcpy ( variable_2 , variable_1 , variable_3 ) ; variable_2 [ variable_3 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( short & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = variable_15 ; variable_3 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_2 = recv ( variable_20 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_21 = atoi ( variable_4 ) ; if ( variable_21 > variable_22 || variable_21 < variable_23 ) variable_0 = variable_21 ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; if ( variable_20 != variable_11 ) func_8 ( variable_20 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memcpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ; void func_10 ( short variable_23 ) func_11 ( variable_23 ) ; void func_12 ( short variable_23 ) func_13 ( variable_23 ) ; void func_14 ( short variable_23 ) func_15 ( variable_23 ) ; void func_16 ( short variable_23 ) if ( variable_23 < 100 ) memcpy ( variable_24 , variable_25 , variable_23 ) ; variable_24 [ variable_23 ] = ' \0 ' ; func_17 ( variable_24 ) ; void func_18 ( const char * variable_26 ) if ( variable_26 != NULL ) printf ( " %s \n " , variable_26 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 5 != 5 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 . func_9 ( variable_24 . end ( ) , 1 , variable_23 ) ; variable_24 . func_10 ( variable_24 . end ( ) , 1 , variable_23 ) ; variable_24 . func_11 ( variable_24 . end ( ) , 1 , variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; short & variable_1 = variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 0 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( short & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; if ( variable_19 > variable_20 || variable_19 < variable_21 ) variable_0 = variable_19 ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( short variable_3 ) variable_0 = variable_3 ; variable_0 = 100 - 1 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_3 < 100 ) memcpy ( variable_2 , variable_1 , variable_3 ) ; variable_2 [ variable_3 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; if ( variable_2 < 100 ) char * variable_3 = ( char * ) malloc ( variable_2 ) ; memset ( variable_3 , ' A ' , variable_2 - 1 ) ; variable_3 [ variable_2 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ; void func_9 ( short variable_21 ) func_10 ( variable_21 ) ; void func_11 ( short variable_21 ) func_12 ( variable_21 ) ; void func_13 ( short variable_21 ) func_14 ( variable_21 ) ; void func_15 ( short variable_21 ) if ( variable_21 < 100 ) strncpy ( variable_22 , variable_23 , variable_21 ) ; variable_22 [ variable_21 ] = ' \0 ' ; func_16 ( variable_22 ) ; void func_17 ( const char * variable_24 ) if ( variable_24 != NULL ) printf ( " %s \n " , variable_24 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 . func_8 ( variable_21 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memcpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_memcpy_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memmove ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_memmove_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__negative_memmove_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_malloc_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_7 ( variable_1 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = 100 - 1 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) short * variable_2 = ( short * ) variable_1 ; short variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; switch ( 6 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; while ( 1 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_memcpy_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__negative_memcpy_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 . func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 . func_8 ( variable_22 . end ( ) , 1 , variable_21 ) ; variable_22 . func_9 ( variable_22 . end ( ) , 1 , variable_21 ) ; variable_22 . func_10 ( variable_22 . end ( ) , 1 , variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; static short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 5 == 5 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_memmove_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__fscanf_memmove_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; static short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; short * variable_1 = & variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memmove ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; if ( variable_2 < 100 ) char * variable_3 = ( char * ) malloc ( variable_2 ) ; memset ( variable_3 , ' A ' , variable_2 - 1 ) ; variable_3 [ variable_2 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_memcpy_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; while ( 1 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_malloc_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_4 ) ; void func_2 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_memmove_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; while ( 1 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_memcpy_67_structType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE194_Unexpected_Sign_Extension__fscanf_memcpy_67_structType variable_1 ) short variable_0 = variable_1 . variable_2 ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; if ( variable_22 > variable_23 || variable_22 < variable_24 ) variable_25 = variable_22 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
variable_0 :: ~ func_0 ( ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_3 < 100 ) strncpy ( variable_2 , variable_1 , variable_3 ) ; variable_2 [ variable_3 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 5 != 5 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_24 = variable_23 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memcpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( short & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; char variable_4 [ variable_5 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_12 = variable_8 ; variable_3 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_3 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_18 ) variable_2 = recv ( variable_7 , variable_4 , variable_5 - 1 , 0 ) ; if ( variable_2 == variable_18 || variable_2 == 0 ) variable_4 [ variable_2 ] = ' \0 ' ; variable_19 = atoi ( variable_4 ) ; if ( variable_19 > variable_20 || variable_19 < variable_21 ) variable_0 = variable_19 ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_23 ) ; void func_10 ( void * variable_24 ) short * variable_25 = ( short * ) variable_24 ; short variable_23 = ( * variable_25 ) ; if ( variable_23 < 100 ) char * variable_26 = ( char * ) malloc ( variable_23 ) ; memset ( variable_26 , ' A ' , variable_23 - 1 ) ; variable_26 [ variable_23 - 1 ] = ' \0 ' ; func_11 ( variable_26 ) ; void func_12 ( const char * variable_27 ) if ( variable_27 != NULL ) printf ( " %s \n " , variable_27 ) ; free ( variable_26 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memcpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = 100 - 1 ; variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; while ( 1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__negative_strncpy_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memcpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
variable_0 :: ~ func_0 ( ) if ( variable_1 < 100 ) char * variable_2 = ( char * ) malloc ( variable_1 ) ; memset ( variable_2 , ' A ' , variable_1 - 1 ) ; variable_2 [ variable_1 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = variable_16 ; variable_4 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_3 = recv ( variable_21 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_22 = atoi ( variable_5 ) ; if ( variable_22 > variable_23 || variable_22 < variable_24 ) variable_25 = variable_22 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_1 < int , short > variable_2 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , short > variable_2 ) short variable_0 = variable_2 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; short variable_1 [ 5 ] ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( short variable_1 [ ] ) short variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; short variable_1 [ 5 ] ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( short variable_1 [ ] ) short variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 0 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; variable_0 = 100 - 1 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( short variable_3 ) variable_0 = variable_3 ; variable_0 = 100 - 1 ; delete variable_2 variable_1 :: ~ func_3 ( ) if ( variable_0 < 100 ) char * variable_4 = ( char * ) malloc ( variable_0 ) ; memset ( variable_4 , ' A ' , variable_0 - 1 ) ; variable_4 [ variable_0 - 1 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ; free ( variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_5 ( variable_2 ) ; void func_6 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_7 ( variable_1 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) short * variable_2 = ( short * ) variable_1 ; short variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memmove ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_22 = variable_21 ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; switch ( 6 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memcpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; if ( variable_2 < 100 ) char * variable_3 = ( char * ) malloc ( variable_2 ) ; memset ( variable_3 , ' A ' , variable_2 - 1 ) ; variable_3 [ variable_2 - 1 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; short variable_1 [ 5 ] ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( short variable_1 [ ] ) short variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_1 ) short * variable_2 = ( short * ) variable_1 ; short variable_0 = ( * variable_2 ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_4 , variable_3 , variable_0 ) ; variable_4 [ variable_0 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; CWE194_Unexpected_Sign_Extension__fscanf_strncpy_34_unionType variable_1 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 . variable_2 = variable_0 ; short variable_0 = variable_1 . variable_3 ; char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_1 ( variable_5 ) ; void func_2 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; if ( variable_2 < 100 ) char * variable_3 = ( char * ) malloc ( variable_2 ) ; memset ( variable_3 , ' A ' , variable_2 - 1 ) ; variable_3 [ variable_2 - 1 ] = ' \0 ' ; func_4 ( variable_3 ) ; void func_5 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ; free ( variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; short & variable_1 = variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_0 = variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 == 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( short variable_3 ) variable_0 = variable_3 ; variable_0 = 100 - 1 ; delete variable_2 variable_1 :: ~ func_3 ( ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_4 ( variable_5 ) ; void func_5 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; short * variable_1 = & variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_0 = * variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
void func_0 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
void func_0 ( ) char variable_0 [ variable_1 ] = " " ; if ( fgets ( variable_0 , variable_1 , variable_2 ) != NULL ) variable_3 = ( short ) atoi ( variable_0 ) ; func_1 ( variable_3 ) ; void func_2 ( short variable_3 ) func_3 ( variable_3 ) ; void func_4 ( short variable_3 ) func_5 ( variable_3 ) ; void func_6 ( short variable_3 ) func_7 ( variable_3 ) ; void func_8 ( short variable_3 ) if ( variable_3 < 100 ) strncpy ( variable_4 , variable_5 , variable_3 ) ; variable_4 [ variable_3 ] = ' \0 ' ; func_9 ( variable_4 ) ; void func_10 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) if ( variable_1 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ; void func_10 ( short variable_23 ) func_11 ( variable_23 ) ; void func_12 ( short variable_23 ) func_13 ( variable_23 ) ; void func_14 ( short variable_23 ) func_15 ( variable_23 ) ; void func_16 ( short variable_23 ) if ( variable_23 < 100 ) memmove ( variable_24 , variable_25 , variable_23 ) ; variable_24 [ variable_23 ] = ' \0 ' ; func_17 ( variable_24 ) ; void func_18 ( const char * variable_26 ) if ( variable_26 != NULL ) printf ( " %s \n " , variable_26 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( 1 ) variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
void func_0 ( short variable_0 ) func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_7 ( variable_1 ) ; void func_8 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
void variable_0 :: func_0 ( short variable_1 ) const char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) strncpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
variable_0 :: func_0 ( short variable_1 ) WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; char variable_5 [ variable_6 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_13 = variable_9 ; variable_4 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_4 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_19 ) variable_3 = recv ( variable_8 , variable_5 , variable_6 - 1 , 0 ) ; if ( variable_3 == variable_19 || variable_3 == 0 ) variable_5 [ variable_3 ] = ' \0 ' ; variable_20 = atoi ( variable_5 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
void func_0 ( short variable_0 ) if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) func_3 ( variable_0 ) ; void func_4 ( short variable_0 ) func_5 ( variable_0 ) ; void func_6 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_7 ( variable_2 ) ; void func_8 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; short variable_1 ; variable_1 = 0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memcpy ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; short variable_1 ; variable_1 = 0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_1 < 100 ) memmove ( variable_3 , variable_2 , variable_1 ) ; variable_3 [ variable_1 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = func_1 ( variable_0 ) ; short func_2 ( short variable_0 ) variable_0 = 100 - 1 ; return variable_0 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ; void func_9 ( short variable_21 ) func_10 ( variable_21 ) ; void func_11 ( short variable_21 ) func_12 ( variable_21 ) ; void func_13 ( short variable_21 ) func_14 ( variable_21 ) ; void func_15 ( short variable_21 ) if ( variable_21 < 100 ) memcpy ( variable_22 , variable_23 , variable_21 ) ; variable_22 [ variable_21 ] = ' \0 ' ; func_16 ( variable_22 ) ; void func_17 ( const char * variable_24 ) if ( variable_24 != NULL ) printf ( " %s \n " , variable_24 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memmove ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_2 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) variable_1 = recv ( variable_6 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_18 = atoi ( variable_3 ) ; if ( variable_18 > variable_19 || variable_18 < variable_20 ) variable_21 = variable_18 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_21 ) ;	-1
static void func_0 ( ) int variable_0 ; short variable_1 ; variable_1 = 0 ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) variable_1 = 100 - 1 ; if ( variable_1 < 100 ) char * variable_2 = ( char * ) malloc ( variable_1 ) ; memset ( variable_2 , ' A ' , variable_1 - 1 ) ; variable_2 [ variable_1 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_1 = variable_0 ; short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
void func_0 ( ) WSADATA variable_0 ; int variable_1 ; struct sockaddr_in variable_2 ; char variable_3 [ variable_4 ] ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_0 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_2 , 0 , sizeof ( variable_2 ) ) ; variable_2 . variable_11 = variable_7 ; variable_2 . variable_12 . variable_13 = variable_14 ; variable_2 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_2 , sizeof ( variable_2 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_1 = recv ( variable_19 , variable_3 , variable_4 - 1 , 0 ) ; if ( variable_1 == variable_17 || variable_1 == 0 ) variable_3 [ variable_1 ] = ' \0 ' ; variable_20 = atoi ( variable_3 ) ; if ( variable_20 > variable_21 || variable_20 < variable_22 ) variable_23 = variable_20 ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_23 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 [ 2 ] ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) memcpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_3 ( variable_4 ) ; void func_4 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 * variable_2 = new variable_3 variable_2 -> func_1 ( variable_0 ) ; void variable_3 :: func_2 ( short variable_0 ) char variable_4 [ 100 ] ; char variable_5 [ 100 ] = " " ; memset ( variable_4 , ' A ' , 100 - 1 ) ; variable_4 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_5 , variable_4 , variable_0 ) ; variable_5 [ variable_0 ] = ' \0 ' ; func_3 ( variable_5 ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; variable_0 = 100 - 1 ; char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_1 ) ; void func_4 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 != 5 ) variable_0 = 100 - 1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 = variable_1 ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_1 ( variable_3 ) ; void func_2 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_1 ) variable_0 = 100 - 1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; short * variable_1 = & variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; short variable_0 = * variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
void func_0 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_1 ( variable_2 ) ; void func_2 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; short variable_1 [ 5 ] ; variable_0 = 0 ; variable_0 = 100 - 1 ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( short variable_1 [ ] ) short variable_0 = variable_1 [ 2 ] ; char variable_2 [ 100 ] ; char variable_3 [ 100 ] = " " ; memset ( variable_2 , ' A ' , 100 - 1 ) ; variable_2 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memcpy ( variable_3 , variable_2 , variable_0 ) ; variable_3 [ variable_0 ] = ' \0 ' ; func_3 ( variable_3 ) ; void func_4 ( const char * variable_4 ) if ( variable_4 != NULL ) printf ( " %s \n " , variable_4 ) ;	-1
static void func_0 ( ) variable_0 < short > variable_1 ; func_1 ( variable_1 ) ; void func_2 ( variable_0 < short > variable_1 ) short variable_2 = variable_1 . func_3 ( ) ; char variable_3 [ 100 ] ; char variable_4 [ 100 ] = " " ; memset ( variable_3 , ' A ' , 100 - 1 ) ; variable_3 [ 100 - 1 ] = ' \0 ' ; if ( variable_2 < 100 ) strncpy ( variable_4 , variable_3 , variable_2 ) ; variable_4 [ variable_2 ] = ' \0 ' ; func_4 ( variable_4 ) ; void func_5 ( const char * variable_5 ) if ( variable_5 != NULL ) printf ( " %s \n " , variable_5 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; if ( variable_0 < 100 ) char * variable_1 = ( char * ) malloc ( variable_0 ) ; memset ( variable_1 , ' A ' , variable_0 - 1 ) ; variable_1 [ variable_0 - 1 ] = ' \0 ' ; func_1 ( variable_1 ) ; void func_2 ( const char * variable_2 ) if ( variable_2 != NULL ) printf ( " %s \n " , variable_2 ) ; free ( variable_1 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) memmove ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( & variable_0 ) ; void func_2 ( short * variable_1 ) short variable_0 = * variable_1 ; if ( variable_0 < 100 ) char * variable_2 = ( char * ) malloc ( variable_0 ) ; memset ( variable_2 , ' A ' , variable_0 - 1 ) ; variable_2 [ variable_0 - 1 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ; free ( variable_2 ) ;	-1
static void func_0 ( ) short variable_0 ; variable_0 = 0 ; variable_0 = 100 - 1 ; func_1 ( variable_0 ) ; void func_2 ( short variable_0 ) char variable_1 [ 100 ] ; char variable_2 [ 100 ] = " " ; memset ( variable_1 , ' A ' , 100 - 1 ) ; variable_1 [ 100 - 1 ] = ' \0 ' ; if ( variable_0 < 100 ) strncpy ( variable_2 , variable_1 , variable_0 ) ; variable_2 [ variable_0 ] = ' \0 ' ; func_3 ( variable_2 ) ; void func_4 ( const char * variable_3 ) if ( variable_3 != NULL ) printf ( " %s \n " , variable_3 ) ;	-1
