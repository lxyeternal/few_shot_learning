static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' wcscpy ( variable_1 , variable_2 ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_1 ) ; variable_3 ++ ) if ( variable_1 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; wchar_t * variable_0 = variable_1 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) if ( variable_18 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( char ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( char ) ] = ' \0 ' ; variable_19 = strchr ( variable_0 , ' \r ' ) ; if ( variable_19 ) * variable_19 = ' \0 ' ; variable_19 = strchr ( variable_0 , ' \n ' ) ; if ( variable_19 ) * variable_19 = ' \0 ' ; while ( 0 ) if ( variable_7 != variable_11 ) func_7 ( variable_7 ) ; * variable_1 = variable_0 ; for ( variable_20 = 0 ; variable_20 < strlen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_0 ) ; void func_10 ( wchar_t * variable_0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( variable_3 != 5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 -> func_9 ( variable_0 ) ; void variable_22 :: func_10 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_23 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; char * variable_19 = variable_0 ; char * variable_0 = variable_19 ; for ( variable_20 = 0 ; variable_20 < strlen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . variable_22 = variable_0 ; func_9 ( variable_21 ) ; void func_10 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_67_structType variable_21 ) char * variable_0 = variable_21 . variable_22 ; for ( variable_23 = 0 ; variable_23 < strlen ( variable_0 ) ; variable_23 ++ ) if ( variable_0 [ variable_23 ] == variable_24 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( 5 == 5 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( char * * variable_4 ) char * variable_0 = * variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 != 5 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; size_t variable_4 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_0 = variable_1 ; size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; variable_1 . variable_3 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_3 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; switch ( 5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; return variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_3 = wcslen ( variable_0 ) ; if ( 100 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) != NULL ) variable_0 [ variable_3 - 1 ] = L ' \0 ' variable_0 [ variable_3 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ; static void func_2 ( char * variable_0 ) for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_0 ) ; void func_10 ( char * * variable_21 ) char * variable_0 = * variable_21 ; for ( variable_22 = 0 ; variable_22 < strlen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = strlen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( char ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_2 [ variable_6 + variable_4 / sizeof ( char ) ] = ' \0 ' ; variable_22 = strchr ( variable_2 , ' \r ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; variable_22 = strchr ( variable_2 , ' \n ' ) ; if ( variable_22 ) * variable_22 = ' \0 ' ; while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_0 ) ; void func_9 ( void * variable_19 ) char * * variable_20 = ( char * * ) variable_19 ; char * variable_0 = ( * variable_20 ) ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; return variable_0 ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' variable_3 * variable_4 = new variable_5 variable_4 -> func_1 ( variable_0 ) ; void variable_5 :: func_2 ( wchar_t * variable_0 ) size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 = variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * variable_0 ) if ( variable_2 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_0 ) ; void func_10 ( wchar_t * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( wchar_t * variable_0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 2 ] = variable_0 ; func_9 ( variable_21 ) ; void func_10 ( char * variable_21 [ ] ) char * variable_0 = variable_21 [ 2 ] ; for ( variable_22 = 0 ; variable_22 < strlen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 [ 2 ] = variable_0 ; func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 = variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' while ( 1 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_1 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_1 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_1 ) ; variable_21 ++ ) if ( variable_1 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 == 5 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) func_14 ( variable_0 ) ; void func_15 ( char * variable_0 ) for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * variable_0 ) for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . func_8 ( variable_0 ) ; variable_19 . func_9 ( variable_0 ) ; variable_19 . func_10 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( func_2 ( ) ) int func_3 ( ) return ( rand ( ) % 2 ) ; size_t variable_4 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; if ( func_1 ( ) ) static int func_2 ( ) return 1 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( wchar_t * * variable_4 ) wchar_t * variable_0 = * variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 != 5 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( func_1 ( ) ) static int func_2 ( ) return 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) return variable_0 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 = variable_0 ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 2 ] = variable_0 ; func_8 ( variable_19 ) ; void func_9 ( char * variable_19 [ ] ) char * variable_0 = variable_19 [ 2 ] ; for ( variable_20 = 0 ; variable_20 < strlen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 * variable_5 = new variable_6 variable_5 -> func_2 ( variable_0 ) ; void variable_6 :: func_3 ( wchar_t * variable_0 ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < wcslen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) strcpy ( variable_0 , variable_1 ) ; return variable_0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; while ( 1 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( 0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; static void func_8 ( wchar_t * variable_0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * variable_0 ) for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_34_unionType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 . variable_21 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_22 ; size_t variable_23 ; for ( variable_23 = 0 ; variable_23 < wcslen ( variable_0 ) ; variable_23 ++ ) if ( variable_0 [ variable_23 ] == variable_24 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . func_9 ( variable_21 . end ( ) , 1 , variable_0 ) ; variable_21 . func_10 ( variable_21 . end ( ) , 1 , variable_0 ) ; variable_21 . func_11 ( variable_21 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 -> func_1 ( variable_0 ) ; void variable_5 :: func_2 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' wchar_t * variable_3 = variable_0 ; wchar_t * variable_0 = variable_3 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 [ 0 ] = variable_0 ; variable_4 [ 1 ] = variable_0 ; variable_4 [ 2 ] = variable_0 ; func_1 ( variable_4 ) ; void func_2 ( variable_5 < int , char * > variable_4 ) char * variable_0 = variable_4 [ 2 ] ; for ( variable_6 = 0 ; variable_6 < strlen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_3 ) wchar_t * variable_0 = * variable_3 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_4 ) wchar_t * * variable_5 = ( wchar_t * * ) variable_4 ; wchar_t * variable_0 = ( * variable_5 ) ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) if ( variable_2 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_1 < int , char * > variable_2 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_3 ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , char * > variable_2 ) char * variable_0 = variable_2 [ 2 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; char * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) strncat ( variable_0 + variable_4 , variable_5 , 100 - variable_4 - 1 ) ; delete variable_2 variable_1 :: ~ func_4 ( ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < strlen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 ) func_5 ( " We have a match ! " ) ; void func_6 ( const char * variable_9 ) if ( variable_9 != NULL ) printf ( " %s \n " , variable_9 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_1 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_1 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_1 [ variable_2 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_1 ) ; variable_5 ++ ) if ( variable_1 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) fclose ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_3 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 == 5 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) switch ( 5 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; wchar_t * variable_8 ; SOCKET variable_9 = variable_10 ; size_t variable_11 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_12 ) break ; variable_5 = 1 ; variable_9 = func_5 ( variable_13 , variable_14 , variable_15 ) ; if ( variable_9 == variable_10 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_16 = variable_13 ; variable_7 . variable_17 . variable_18 = func_6 ( variable_19 ) ; variable_7 . variable_20 = func_7 ( variable_21 ) ; if ( func_8 ( variable_9 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_22 ) break ; variable_6 = recv ( variable_9 , ( char * ) ( variable_0 + variable_11 ) , sizeof ( wchar_t ) * ( 100 - variable_11 - 1 ) , 0 ) ; if ( variable_6 == variable_22 || variable_6 == 0 ) break ; variable_0 [ variable_11 + variable_6 / sizeof ( wchar_t ) ] = L ' \0 ' variable_8 = wcschr ( variable_0 , L ' \r ' ) if ( variable_8 ) * variable_8 = L ' \0 ' variable_8 = wcschr ( variable_0 , L ' \n ' ) if ( variable_8 ) * variable_8 = L ' \0 ' while ( 0 ) if ( variable_9 != variable_10 ) func_9 ( variable_9 ) ; if ( variable_5 ) func_10 ( ) ; delete variable_2 variable_1 :: ~ func_11 ( ) size_t variable_23 ; for ( variable_23 = 0 ; variable_23 < wcslen ( variable_0 ) ; variable_23 ++ ) if ( variable_0 [ variable_23 ] == variable_24 ) func_12 ( " We have a match ! " ) ; void func_13 ( const char * variable_25 ) if ( variable_25 != NULL ) printf ( " %s \n " , variable_25 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) static int func_8 ( ) return 1 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( & variable_0 ) ; void func_9 ( char * * variable_19 ) char * variable_0 = * variable_19 ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) switch ( 6 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( void * variable_18 ) wchar_t * * variable_19 = ( wchar_t * * ) variable_18 ; wchar_t * variable_0 = ( * variable_19 ) ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_3 = wcslen ( variable_0 ) ; FILE * variable_4 ; if ( 100 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) == NULL ) variable_0 [ variable_3 ] = L ' \0 ' variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 . variable_21 = variable_0 ; func_7 ( variable_1 ) ; void func_8 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_listen_socket_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_21 ; size_t variable_22 ; for ( variable_22 = 0 ; variable_22 < wcslen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; return variable_0 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( wchar_t * variable_0 ) for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( void * variable_20 ) wchar_t * * variable_21 = ( wchar_t * * ) variable_20 ; wchar_t * variable_0 = ( * variable_21 ) ; size_t variable_22 ; for ( variable_22 = 0 ; variable_22 < wcslen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; static void func_2 ( wchar_t * variable_0 ) size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; wchar_t * variable_5 = func_3 ( variable_6 ) ; if ( variable_5 != NULL ) wcsncat ( variable_0 + variable_4 , variable_5 , 100 - variable_4 - 1 ) ; delete variable_2 variable_1 :: ~ func_4 ( ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < wcslen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 ) func_5 ( " We have a match ! " ) ; void func_6 ( const char * variable_9 ) if ( variable_9 != NULL ) printf ( " %s \n " , variable_9 ) ; break ; free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = wcslen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == L ' \n ' ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) for ( * variable_0 != L ' \0 ' variable_0 ++ ) if ( * variable_0 == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_environment_34_unionType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; wchar_t * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; variable_1 . variable_5 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_6 ; size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < wcslen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( 5 == 5 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ; return variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( 0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; while ( 1 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; static void func_2 ( char * variable_0 ) if ( variable_2 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) wchar_t * * variable_3 = ( wchar_t * * ) variable_2 ; wchar_t * variable_0 = ( * variable_3 ) ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * * variable_2 = & variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , 100 - variable_3 - 1 ) ; wchar_t * variable_0 = * variable_2 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_connect_socket_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 . variable_19 = variable_0 ; func_7 ( variable_1 ) ; void func_8 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_connect_socket_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_19 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) while ( 1 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 [ 0 ] = variable_0 ; variable_3 [ 1 ] = variable_0 ; variable_3 [ 2 ] = variable_0 ; func_1 ( variable_3 ) ; void func_2 ( variable_4 < int , char * > variable_3 ) char * variable_0 = variable_3 [ 2 ] ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 . func_1 ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; wchar_t * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; wchar_t * variable_0 = variable_1 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; FILE * variable_5 ; if ( 100 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgets ( variable_0 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) == NULL ) func_3 ( " fgets ( ) failed " ) ; void func_4 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; variable_0 [ variable_4 ] = ' \0 ' ; fclose ( variable_5 ) ; delete variable_2 variable_1 :: ~ func_5 ( ) size_t variable_8 ; for ( variable_8 = 0 ; variable_8 < strlen ( variable_0 ) ; variable_8 ++ ) if ( variable_0 [ variable_8 ] == variable_9 ) func_6 ( " We have a match ! " ) ; void func_7 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; wcscpy ( variable_0 , variable_4 ) ; delete variable_2 variable_1 :: ~ func_3 ( ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) func_4 ( " We have a match ! " ) ; void func_5 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; break ; free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 [ 0 ] = variable_0 ; variable_19 [ 1 ] = variable_0 ; variable_19 [ 2 ] = variable_0 ; func_8 ( variable_19 ) ; void func_9 ( variable_20 < int , char * > variable_19 ) char * variable_0 = variable_19 [ 2 ] ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_connect_socket_34_unionType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 . variable_19 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_20 ; size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_1 [ 2 ] = variable_0 ; func_7 ( variable_1 ) ; void func_8 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . variable_20 = variable_0 ; func_8 ( variable_19 ) ; void func_9 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_67_structType variable_19 ) char * variable_0 = variable_19 . variable_20 ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_21 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_0 ) ; void func_10 ( wchar_t * variable_0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; char * variable_8 ; SOCKET variable_9 = variable_10 ; SOCKET variable_11 = variable_10 ; size_t variable_12 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_9 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_9 == variable_10 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_17 = variable_14 ; variable_7 . variable_18 . variable_19 = variable_20 ; variable_7 . variable_21 = func_6 ( variable_22 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_23 ) break ; if ( func_7 ( variable_9 , variable_24 ) == variable_23 ) break ; variable_11 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_11 == variable_23 ) break ; variable_6 = recv ( variable_11 , ( char * ) ( variable_0 + variable_12 ) , sizeof ( char ) * ( 100 - variable_12 - 1 ) , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_0 [ variable_12 + variable_6 / sizeof ( char ) ] = ' \0 ' ; variable_8 = strchr ( variable_0 , ' \r ' ) ; if ( variable_8 ) * variable_8 = ' \0 ' ; variable_8 = strchr ( variable_0 , ' \n ' ) ; if ( variable_8 ) * variable_8 = ' \0 ' ; while ( 0 ) if ( variable_9 != variable_10 ) func_9 ( variable_9 ) ; if ( variable_11 != variable_10 ) func_10 ( variable_11 ) ; if ( variable_5 ) func_11 ( ) ; delete variable_2 variable_1 :: ~ func_12 ( ) size_t variable_25 ; for ( variable_25 = 0 ; variable_25 < strlen ( variable_0 ) ; variable_25 ++ ) if ( variable_0 [ variable_25 ] == variable_26 ) func_13 ( " We have a match ! " ) ; void func_14 ( const char * variable_27 ) if ( variable_27 != NULL ) printf ( " %s \n " , variable_27 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_3 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; wchar_t * variable_4 = variable_0 ; wchar_t * variable_0 = variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' while ( 1 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; wchar_t * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; if ( variable_4 != 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) fclose ( variable_2 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_4 ) char * * variable_5 = ( char * * ) variable_4 ; char * variable_0 = ( * variable_5 ) ; for ( variable_6 = 0 ; variable_6 < strlen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 == 5 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( 0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( char * variable_0 ) for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ; if ( variable_21 != variable_12 ) func_8 ( variable_21 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ; void func_10 ( char * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( char * variable_0 ) func_13 ( variable_0 ) ; void func_14 ( char * variable_0 ) func_15 ( variable_0 ) ; void func_16 ( char * variable_0 ) for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( & variable_0 ) ; void func_10 ( void * variable_21 ) char * * variable_22 = ( char * * ) variable_21 ; char * variable_0 = ( * variable_22 ) ; for ( variable_23 = 0 ; variable_23 < strlen ( variable_0 ) ; variable_23 ++ ) if ( variable_0 [ variable_23 ] == variable_24 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( wchar_t * * variable_20 ) wchar_t * variable_0 = * variable_20 ; size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( 5 != 5 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' switch ( 6 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 != 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( void * variable_3 ) wchar_t * * variable_4 = ( wchar_t * * ) variable_3 ; wchar_t * variable_0 = ( * variable_4 ) ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_1 ) ; wchar_t * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_1 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_1 ) ; variable_5 ++ ) if ( variable_1 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * variable_0 ) if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . func_9 ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; strcpy ( variable_1 , variable_2 ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_1 ) ; variable_3 ++ ) if ( variable_1 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * * variable_2 = & variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; size_t variable_3 = wcslen ( variable_0 ) ; if ( 100 - variable_3 > 1 ) if ( fgetws ( variable_0 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) != NULL ) variable_0 [ variable_3 - 1 ] = L ' \0 ' variable_0 [ variable_3 ] = L ' \0 ' wchar_t * variable_0 = * variable_2 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) int func_8 ( ) return 0 ; size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; static void func_8 ( wchar_t * variable_0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; FILE * variable_5 ; if ( 100 - variable_4 > 1 ) variable_5 = fopen ( variable_6 , " r " ) ; if ( variable_5 != NULL ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) == NULL ) func_3 ( " fgetws ( ) failed " ) ; void func_4 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; variable_0 [ variable_4 ] = L ' \0 ' fclose ( variable_5 ) ; delete variable_2 variable_1 :: ~ func_5 ( ) size_t variable_8 ; for ( variable_8 = 0 ; variable_8 < wcslen ( variable_0 ) ; variable_8 ++ ) if ( variable_0 [ variable_8 ] == variable_9 ) func_6 ( " We have a match ! " ) ; void func_7 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_2 ) wchar_t * variable_0 = * variable_2 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( wchar_t * variable_0 ) func_6 ( variable_0 ) ; void func_7 ( wchar_t * variable_0 ) for ( * variable_0 != L ' \0 ' variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . variable_20 = variable_0 ; char * variable_0 = variable_19 . variable_21 ; for ( variable_22 = 0 ; variable_22 < strlen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 = variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) int func_8 ( ) return ( rand ( ) % 2 ) ; size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( 0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( char * variable_0 ) for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' switch ( 6 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 != 5 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( wchar_t * variable_0 ) if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 * variable_4 = new variable_5 variable_4 -> func_1 ( variable_0 ) ; void variable_5 :: func_2 ( char * variable_0 ) size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < strlen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 == 5 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; static void func_3 ( char * variable_0 ) if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) fclose ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; func_8 ( variable_0 ) ; void func_9 ( char * variable_0 ) func_10 ( variable_0 ) ; void func_11 ( char * variable_0 ) func_12 ( variable_0 ) ; void func_13 ( char * variable_0 ) for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( 5 == 5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 * variable_5 = new variable_6 variable_5 -> func_2 ( variable_0 ) ; void variable_6 :: func_3 ( char * variable_0 ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < strlen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = wcslen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == L ' \n ' ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; strcpy ( variable_0 , variable_4 ) ; delete variable_2 variable_1 :: ~ func_3 ( ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) func_4 ( " We have a match ! " ) ; void func_5 ( const char * variable_7 ) if ( variable_7 != NULL ) printf ( " %s \n " , variable_7 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 != 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_20 = variable_0 ; wchar_t * variable_0 = variable_20 ; size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; for ( variable_19 = 0 ; variable_19 < strlen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; char * variable_4 = variable_0 ; char * variable_0 = variable_4 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; char * func_2 ( char * variable_0 ) strcpy ( variable_0 , variable_1 ) ; return variable_0 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( & variable_0 ) ; void func_3 ( void * variable_4 ) wchar_t * * variable_5 = ( wchar_t * * ) variable_4 ; wchar_t * variable_0 = ( * variable_5 ) ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; wchar_t * variable_2 = variable_0 ; wchar_t * variable_0 = variable_2 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_3 ) char * variable_0 = * variable_3 ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) for ( * variable_0 != L ' \0 ' variable_0 ++ ) if ( * variable_0 == variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_7 ( variable_2 ) ; void func_8 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) return variable_0 ; size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) return variable_0 ; size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( char * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( 100 - variable_4 > 1 ) if ( fgets ( variable_0 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) != NULL ) variable_4 = strlen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == ' \n ' ) variable_0 [ variable_4 - 1 ] = ' \0 ' ; func_3 ( " fgets ( ) failed " ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; variable_0 [ variable_4 ] = ' \0 ' ; delete variable_2 variable_1 :: ~ func_5 ( ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < strlen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 ) func_6 ( " We have a match ! " ) ; void func_7 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; break ; free ( variable_0 ) ;	-1
variable_0 :: func_0 ( char * variable_1 ) variable_2 = variable_1 ; size_t variable_3 = strlen ( variable_2 ) ; FILE * variable_4 ; if ( 100 - variable_3 > 1 ) variable_4 = fopen ( variable_5 , " r " ) ; if ( variable_4 != NULL ) if ( fgets ( variable_2 + variable_3 , ( int ) ( 100 - variable_3 ) , variable_4 ) == NULL ) variable_2 [ variable_3 ] = ' \0 ' ; fclose ( variable_4 ) ;	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_1 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_1 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_1 [ variable_2 - 1 ] = L ' \0 ' variable_1 [ variable_2 ] = L ' \0 ' for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_1 ) ; variable_4 ++ ) if ( variable_1 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 != 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) func_9 ( variable_0 ) ; void func_10 ( wchar_t * variable_0 ) func_11 ( variable_0 ) ; void func_12 ( wchar_t * variable_0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) static int func_8 ( ) return 1 ; size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_20 * variable_21 = new variable_22 variable_21 -> func_7 ( variable_0 ) ; void variable_22 :: func_8 ( wchar_t * variable_0 ) size_t variable_23 ; for ( variable_23 = 0 ; variable_23 < wcslen ( variable_0 ) ; variable_23 ++ ) if ( variable_0 [ variable_23 ] == variable_24 )	-1
static void func_0 ( ) char * variable_0 ; char * * variable_1 = & variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; char * variable_0 = * variable_1 ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; fclose ( variable_3 ) ; * variable_1 = variable_0 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 == 5 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( func_2 ( ) ) static int func_3 ( ) return 1 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) return variable_0 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) fclose ( variable_2 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * * variable_2 = & variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; wcscpy ( variable_0 , variable_3 ) ; wchar_t * variable_0 = * variable_2 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_18 * variable_19 = new variable_20 variable_19 -> func_7 ( variable_0 ) ; void variable_20 :: func_8 ( wchar_t * variable_0 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_6 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_7 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_8 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_10 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_file_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = L ' \0 ' variable_1 . variable_5 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_file_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_5 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 [ 2 ] = variable_0 ; func_1 ( variable_4 ) ; void func_2 ( char * variable_4 [ ] ) char * variable_0 = variable_4 [ 2 ] ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_3 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_0 [ variable_2 - 1 ] = L ' \0 ' variable_0 [ variable_2 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 != 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) while ( 1 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; func_9 ( variable_0 ) ; static void func_10 ( char * variable_0 ) for ( variable_21 = 0 ; variable_21 < strlen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_5 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_6 ( variable_14 ) ; variable_3 . variable_15 = func_7 ( variable_16 ) ; if ( func_8 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_9 ( variable_6 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 [ 2 ] = variable_0 ; func_1 ( variable_3 ) ; void func_2 ( char * variable_3 [ ] ) char * variable_0 = variable_3 [ 2 ] ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; static void func_3 ( char * variable_0 ) for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; variable_2 = recv ( variable_3 , ( char * ) ( variable_0 + variable_1 ) , sizeof ( wchar_t ) * ( 100 - variable_1 - 1 ) , 0 ) ; if ( variable_2 == variable_4 || variable_2 == 0 ) variable_5 = wcschr ( variable_0 , L ' \r ' ) if ( variable_5 ) variable_5 = wcschr ( variable_0 , L ' \n ' ) if ( variable_5 ) variable_6 . func_1 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_2 ( variable_6 . end ( ) , 1 , variable_0 ) ; variable_6 . func_3 ( variable_6 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_1 ) ; char * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) strncat ( variable_1 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_1 ) ; variable_5 ++ ) if ( variable_1 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_environment_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; wchar_t * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) wcsncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; variable_1 . variable_5 = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_environment_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_5 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( func_2 ( ) ) static int func_3 ( ) return 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; static void func_3 ( wchar_t * variable_0 ) if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_20 ) size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) for ( * variable_0 != L ' \0 ' variable_0 ++ ) if ( * variable_0 == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; static void func_2 ( wchar_t * variable_0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 [ 0 ] = variable_0 ; variable_21 [ 1 ] = variable_0 ; variable_21 [ 2 ] = variable_0 ; func_9 ( variable_21 ) ; void func_10 ( variable_22 < int , char * > variable_21 ) char * variable_0 = variable_21 [ 2 ] ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_23 ) free ( variable_0 ) ;	-1
static void func_0 ( ) int variable_0 ; char * variable_1 ; variable_1 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_1 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_1 ) ; if ( 100 - variable_2 > 1 ) if ( fgets ( variable_1 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_2 = strlen ( variable_1 ) ; if ( variable_2 > 0 && variable_1 [ variable_2 - 1 ] == ' \n ' ) variable_1 [ variable_2 - 1 ] = ' \0 ' ; variable_1 [ variable_2 ] = ' \0 ' ; for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_1 ) ; variable_4 ++ ) if ( variable_1 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_fixed_string_34_unionType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_2 ) ; variable_1 . variable_3 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( char * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_3 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_34_unionType variable_1 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_2 = strlen ( variable_0 ) ; if ( variable_2 > 0 && variable_0 [ variable_2 - 1 ] == ' \n ' ) variable_0 [ variable_2 - 1 ] = ' \0 ' ; variable_0 [ variable_2 ] = ' \0 ' ; variable_1 . variable_4 = variable_0 ; char * variable_0 = variable_1 . variable_5 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < strlen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 . variable_4 = variable_0 ; func_1 ( variable_3 ) ; void func_2 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_67_structType variable_3 ) char * variable_0 = variable_3 . variable_4 ; for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_5 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * * variable_2 = & variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_0 = * variable_2 ; size_t variable_22 ; for ( variable_22 = 0 ; variable_22 < wcslen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) wcscpy ( variable_0 , variable_1 ) ; return variable_0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_3 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_3 ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_1 ( variable_2 ) ; void func_2 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_4 ) char * * variable_5 = ( char * * ) variable_4 ; char * variable_0 = ( * variable_5 ) ; for ( variable_6 = 0 ; variable_6 < strlen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( func_1 ( ) ) int func_2 ( ) return 1 ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) int variable_0 ; wchar_t * variable_1 ; variable_1 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_1 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = func_4 ( variable_15 ) ; variable_4 . variable_16 = func_5 ( variable_17 ) ; if ( func_6 ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) variable_3 = recv ( variable_7 , ( char * ) ( variable_1 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_1 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) for ( variable_0 = 0 ; variable_0 < 1 ; variable_0 ++ ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_1 ) ; variable_19 ++ ) if ( variable_1 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; void func_8 ( wchar_t * variable_0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_2 ) char * * variable_3 = ( char * * ) variable_2 ; char * variable_0 = ( * variable_3 ) ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgets ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = ' \0 ' ; char * variable_0 = variable_1 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 . func_1 ( variable_0 ) ; variable_4 . func_2 ( variable_0 ) ; variable_4 . func_3 ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \r ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; variable_18 = strchr ( variable_0 , ' \n ' ) ; if ( variable_18 ) * variable_18 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; variable_19 . func_8 ( variable_19 . end ( ) , 1 , variable_0 ) ; variable_19 . func_9 ( variable_19 . end ( ) , 1 , variable_0 ) ; variable_19 . func_10 ( variable_19 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( 5 == 5 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( variable_18 ) size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; FILE * variable_3 ; if ( 100 - variable_2 > 1 ) variable_3 = fopen ( variable_4 , " r " ) ; if ( variable_3 != NULL ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) == NULL ) variable_0 [ variable_2 ] = L ' \0 ' wchar_t * variable_0 = variable_1 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( & variable_0 ) ; void func_2 ( char * * variable_4 ) char * variable_0 = * variable_4 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; if ( func_1 ( ) ) int func_2 ( ) return ( rand ( ) % 2 ) ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 ) size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_3 = wcslen ( variable_0 ) ; wchar_t * variable_4 = func_1 ( variable_5 ) ; if ( variable_4 != NULL ) wcsncat ( variable_0 + variable_3 , variable_4 , 100 - variable_3 - 1 ) ; variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_2 ( variable_2 ) ; void func_3 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * variable_1 [ 5 ] ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_0 [ variable_2 - 1 ] = L ' \0 ' variable_0 [ variable_2 ] = L ' \0 ' variable_1 [ 2 ] = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( wchar_t * variable_1 [ ] ) wchar_t * variable_0 = variable_1 [ 2 ] ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_18 = variable_0 ; wchar_t * variable_0 = variable_18 ; size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; return variable_0 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * & variable_1 = variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_2 ; int variable_3 ; struct sockaddr_in variable_4 ; size_t variable_5 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_2 ) != variable_6 ) variable_7 = func_3 ( variable_8 , variable_9 , variable_10 ) ; if ( variable_7 == variable_11 ) memset ( & variable_4 , 0 , sizeof ( variable_4 ) ) ; variable_4 . variable_12 = variable_8 ; variable_4 . variable_13 . variable_14 = variable_15 ; variable_4 . variable_16 = func_4 ( variable_17 ) ; if ( bind ( variable_7 , ( struct sockaddr * ) & variable_4 , sizeof ( variable_4 ) ) == variable_18 ) if ( func_5 ( variable_7 , variable_19 ) == variable_18 ) variable_20 = func_6 ( variable_7 , NULL , NULL ) ; if ( variable_20 == variable_18 ) variable_3 = recv ( variable_20 , ( char * ) ( variable_0 + variable_5 ) , sizeof ( wchar_t ) * ( 100 - variable_5 - 1 ) , 0 ) ; if ( variable_3 == variable_18 || variable_3 == 0 ) variable_0 [ variable_5 + variable_3 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_0 = variable_1 ; size_t variable_21 ; for ( variable_21 = 0 ; variable_21 < wcslen ( variable_0 ) ; variable_21 ++ ) if ( variable_0 [ variable_21 ] == variable_22 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 = func_1 ( variable_0 ) ; static wchar_t * func_2 ( wchar_t * variable_0 ) size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = wcslen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == L ' \n ' ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' return variable_0 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) int func_8 ( ) return ( rand ( ) % 2 ) ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' variable_4 * variable_5 = new variable_6 variable_5 -> func_1 ( variable_0 ) ; void variable_6 :: func_2 ( wchar_t * variable_0 ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < wcslen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) for ( * variable_0 != L ' \0 ' variable_0 ++ ) if ( * variable_0 == variable_2 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 = variable_0 ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; WSADATA variable_4 ; int variable_5 = 0 ; int variable_6 ; struct sockaddr_in variable_7 ; wchar_t * variable_8 ; SOCKET variable_9 = variable_10 ; SOCKET variable_11 = variable_10 ; size_t variable_12 = wcslen ( variable_0 ) ; if ( func_3 ( func_4 ( 2 , 2 ) , & variable_4 ) != variable_13 ) break ; variable_5 = 1 ; variable_9 = func_5 ( variable_14 , variable_15 , variable_16 ) ; if ( variable_9 == variable_10 ) break ; memset ( & variable_7 , 0 , sizeof ( variable_7 ) ) ; variable_7 . variable_17 = variable_14 ; variable_7 . variable_18 . variable_19 = variable_20 ; variable_7 . variable_21 = func_6 ( variable_22 ) ; if ( bind ( variable_9 , ( struct sockaddr * ) & variable_7 , sizeof ( variable_7 ) ) == variable_23 ) break ; if ( func_7 ( variable_9 , variable_24 ) == variable_23 ) break ; variable_11 = func_8 ( variable_9 , NULL , NULL ) ; if ( variable_11 == variable_23 ) break ; variable_6 = recv ( variable_11 , ( char * ) ( variable_0 + variable_12 ) , sizeof ( wchar_t ) * ( 100 - variable_12 - 1 ) , 0 ) ; if ( variable_6 == variable_23 || variable_6 == 0 ) break ; variable_0 [ variable_12 + variable_6 / sizeof ( wchar_t ) ] = L ' \0 ' variable_8 = wcschr ( variable_0 , L ' \r ' ) if ( variable_8 ) * variable_8 = L ' \0 ' variable_8 = wcschr ( variable_0 , L ' \n ' ) if ( variable_8 ) * variable_8 = L ' \0 ' while ( 0 ) if ( variable_9 != variable_10 ) func_9 ( variable_9 ) ; if ( variable_11 != variable_10 ) func_10 ( variable_11 ) ; if ( variable_5 ) func_11 ( ) ; delete variable_2 variable_1 :: ~ func_12 ( ) size_t variable_25 ; for ( variable_25 = 0 ; variable_25 < wcslen ( variable_0 ) ; variable_25 ++ ) if ( variable_0 [ variable_25 ] == variable_26 ) func_13 ( " We have a match ! " ) ; void func_14 ( const char * variable_27 ) if ( variable_27 != NULL ) printf ( " %s \n " , variable_27 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = L ' \0 ' func_1 ( & variable_0 ) ; void func_2 ( wchar_t * * variable_4 ) wchar_t * variable_0 = * variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = strlen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( char ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( char ) ] = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \r ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; variable_20 = strchr ( variable_0 , ' \n ' ) ; if ( variable_20 ) * variable_20 = ' \0 ' ; while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ; variable_21 . func_9 ( variable_0 ) ; variable_21 . func_10 ( variable_0 ) ; variable_21 . func_11 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; variable_0 = func_1 ( variable_0 ) ; static char * func_2 ( char * variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_3 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; return variable_0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < strlen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; char * & variable_1 = variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_0 ) ; char * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) strncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; char * variable_0 = variable_1 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ; if ( variable_19 != variable_10 ) func_8 ( variable_19 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; char * variable_2 = variable_0 ; char * variable_0 = variable_2 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) if ( func_7 ( ) ) int func_8 ( ) return 0 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) while ( 0 ) if ( variable_6 != variable_10 ) func_7 ( variable_6 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' if ( variable_3 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; wchar_t * * variable_1 = & variable_0 ; wchar_t * * variable_2 = & variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wchar_t * variable_0 = * variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) wchar_t * variable_0 = * variable_2 ; size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; static void func_3 ( wchar_t * variable_0 ) for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 ) free ( variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = variable_14 ; variable_3 . variable_15 = func_4 ( variable_16 ) ; if ( bind ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) if ( func_5 ( variable_6 , variable_18 ) == variable_17 ) variable_19 = func_6 ( variable_6 , NULL , NULL ) ; if ( variable_19 == variable_17 ) variable_2 = recv ( variable_19 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( variable_0 ) ; static void func_8 ( wchar_t * variable_0 ) size_t variable_20 ; for ( variable_20 = 0 ; variable_20 < wcslen ( variable_0 ) ; variable_20 ++ ) if ( variable_0 [ variable_20 ] == variable_21 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_1 * variable_2 = new func_1 ( variable_0 ) ; variable_1 :: func_2 ( wchar_t * variable_3 ) variable_0 = variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( 100 - variable_4 > 1 ) if ( fgetws ( variable_0 + variable_4 , ( int ) ( 100 - variable_4 ) , variable_5 ) != NULL ) variable_4 = wcslen ( variable_0 ) ; if ( variable_4 > 0 && variable_0 [ variable_4 - 1 ] == L ' \n ' ) variable_0 [ variable_4 - 1 ] = L ' \0 ' func_3 ( " fgetws ( ) failed " ) ; void func_4 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; variable_0 [ variable_4 ] = L ' \0 ' delete variable_2 variable_1 :: ~ func_5 ( ) size_t variable_7 ; for ( variable_7 = 0 ; variable_7 < wcslen ( variable_0 ) ; variable_7 ++ ) if ( variable_0 [ variable_7 ] == variable_8 ) func_6 ( " We have a match ! " ) ; void func_7 ( const char * variable_6 ) if ( variable_6 != NULL ) printf ( " %s \n " , variable_6 ) ; break ; free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 == 5 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) size_t variable_18 ; for ( variable_18 = 0 ; variable_18 < wcslen ( variable_0 ) ; variable_18 ++ ) if ( variable_0 [ variable_18 ] == variable_19 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' variable_0 = func_1 ( variable_0 ) ; wchar_t * func_2 ( wchar_t * variable_0 ) wcscpy ( variable_0 , variable_1 ) ; return variable_0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; func_2 ( variable_0 ) ; void func_3 ( char * variable_0 ) func_4 ( variable_0 ) ; void func_5 ( char * variable_0 ) for ( ; * variable_0 != ' \0 ' ; variable_0 ++ ) if ( * variable_0 == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( variable_4 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( 0 ) size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; if ( func_1 ( ) ) int func_2 ( ) return 0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < wcslen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 . func_1 ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_1 ; int variable_2 ; struct sockaddr_in variable_3 ; size_t variable_4 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_1 ) != variable_5 ) variable_6 = func_3 ( variable_7 , variable_8 , variable_9 ) ; if ( variable_6 == variable_10 ) memset ( & variable_3 , 0 , sizeof ( variable_3 ) ) ; variable_3 . variable_11 = variable_7 ; variable_3 . variable_12 . variable_13 = func_4 ( variable_14 ) ; variable_3 . variable_15 = func_5 ( variable_16 ) ; if ( func_6 ( variable_6 , ( struct sockaddr * ) & variable_3 , sizeof ( variable_3 ) ) == variable_17 ) variable_2 = recv ( variable_6 , ( char * ) ( variable_0 + variable_4 ) , sizeof ( wchar_t ) * ( 100 - variable_4 - 1 ) , 0 ) ; if ( variable_2 == variable_17 || variable_2 == 0 ) variable_0 [ variable_4 + variable_2 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) func_7 ( & variable_0 ) ; void func_8 ( wchar_t * * variable_18 ) wchar_t * variable_0 = * variable_18 ; size_t variable_19 ; for ( variable_19 = 0 ; variable_19 < wcslen ( variable_0 ) ; variable_19 ++ ) if ( variable_0 [ variable_19 ] == variable_20 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_0 [ variable_1 - 1 ] = L ' \0 ' variable_0 [ variable_1 ] = L ' \0 ' func_1 ( variable_0 ) ; void func_2 ( wchar_t * variable_0 ) func_3 ( variable_0 ) ; void func_4 ( wchar_t * variable_0 ) func_5 ( variable_0 ) ; void func_6 ( wchar_t * variable_0 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < wcslen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_67_structType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_0 [ variable_2 - 1 ] = L ' \0 ' variable_0 [ variable_2 ] = L ' \0 ' variable_1 . variable_4 = variable_0 ; func_1 ( variable_1 ) ; void func_2 ( CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_67_structType variable_1 ) wchar_t * variable_0 = variable_1 . variable_4 ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; if ( func_2 ( ) ) int func_3 ( ) return 0 ; size_t variable_4 ; for ( variable_4 = 0 ; variable_4 < wcslen ( variable_0 ) ; variable_4 ++ ) if ( variable_0 [ variable_4 ] == variable_5 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; func_1 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; func_1 ( & variable_0 ) ; void func_2 ( void * variable_3 ) char * * variable_4 = ( char * * ) variable_3 ; char * variable_0 = ( * variable_4 ) ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; char * variable_1 [ 5 ] ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_2 = strlen ( variable_0 ) ; char * variable_3 = func_1 ( variable_4 ) ; if ( variable_3 != NULL ) strncat ( variable_0 + variable_2 , variable_3 , 100 - variable_2 - 1 ) ; variable_1 [ 2 ] = variable_0 ; func_2 ( variable_1 ) ; void func_3 ( char * variable_1 [ ] ) char * variable_0 = variable_1 [ 2 ] ; size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < strlen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 . func_1 ( variable_3 . end ( ) , 1 , variable_0 ) ; variable_3 . func_2 ( variable_3 . end ( ) , 1 , variable_0 ) ; variable_3 . func_3 ( variable_3 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 . func_1 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_2 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_3 ( variable_4 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; CWE761_Free_Pointer_Not_at_Start_of_Buffer__wchar_t_console_34_unionType variable_1 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_2 = wcslen ( variable_0 ) ; if ( 100 - variable_2 > 1 ) if ( fgetws ( variable_0 + variable_2 , ( int ) ( 100 - variable_2 ) , variable_3 ) != NULL ) variable_0 [ variable_2 - 1 ] = L ' \0 ' variable_0 [ variable_2 ] = L ' \0 ' variable_1 . variable_4 = variable_0 ; wchar_t * variable_0 = variable_1 . variable_5 ; size_t variable_6 ; for ( variable_6 = 0 ; variable_6 < wcslen ( variable_0 ) ; variable_6 ++ ) if ( variable_0 [ variable_6 ] == variable_7 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = wcslen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == L ' \n ' ) variable_3 . func_1 ( variable_0 ) ; variable_3 . func_2 ( variable_0 ) ; variable_3 . func_3 ( variable_0 ) ;	-1
variable_0 :: func_0 ( wchar_t * variable_1 ) variable_2 = variable_1 ; WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_2 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = func_4 ( variable_16 ) ; variable_5 . variable_17 = func_5 ( variable_18 ) ; if ( func_6 ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) variable_4 = recv ( variable_8 , ( char * ) ( variable_2 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) while ( 0 ) if ( variable_8 != variable_12 ) func_7 ( variable_8 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 . func_2 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_3 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_4 ( variable_4 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; func_1 ( variable_0 ) ; void func_2 ( char * variable_0 ) if ( variable_2 ) size_t variable_3 ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 )	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; static void func_2 ( char * & variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; func_1 ( variable_0 ) ; void func_2 ( char * & variable_0 ) size_t variable_1 = strlen ( variable_0 ) ; strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; for ( variable_3 = 0 ; variable_3 < strlen ( variable_0 ) ; variable_3 ++ ) if ( variable_0 [ variable_3 ] == variable_4 ) free ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; variable_2 = recv ( variable_3 , ( char * ) ( variable_0 + variable_1 ) , sizeof ( wchar_t ) * ( 100 - variable_1 - 1 ) , 0 ) ; if ( variable_2 == variable_4 || variable_2 == 0 ) variable_5 = wcschr ( variable_0 , L ' \r ' ) if ( variable_5 ) variable_5 = wcschr ( variable_0 , L ' \n ' ) if ( variable_5 ) variable_6 . func_1 ( variable_0 ) ; variable_6 . func_2 ( variable_0 ) ; variable_6 . func_3 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = strlen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == ' \n ' ) variable_0 [ variable_1 - 1 ] = ' \0 ' ; variable_0 [ variable_1 ] = ' \0 ' ; variable_3 . func_1 ( variable_0 ) ; variable_3 . func_2 ( variable_0 ) ; variable_3 . func_3 ( variable_0 ) ;	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' wcscpy ( variable_0 , variable_1 ) ; variable_2 * variable_3 = new variable_4 variable_3 -> func_1 ( variable_0 ) ; void variable_4 :: func_2 ( wchar_t * variable_0 ) size_t variable_5 ; for ( variable_5 = 0 ; variable_5 < wcslen ( variable_0 ) ; variable_5 ++ ) if ( variable_0 [ variable_5 ] == variable_6 )	-1
void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgets ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) variable_0 [ variable_1 ] = ' \0 ' ; fclose ( variable_2 ) ; variable_4 = variable_0 ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 . func_2 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_3 ( variable_4 . end ( ) , 1 , variable_0 ) ; variable_4 . func_4 ( variable_4 . end ( ) , 1 , variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; variable_2 = recv ( variable_3 , ( char * ) ( variable_0 + variable_1 ) , sizeof ( wchar_t ) * ( 100 - variable_1 - 1 ) , 0 ) ; if ( variable_2 == variable_4 || variable_2 == 0 ) variable_5 = wcschr ( variable_0 , L ' \r ' ) if ( variable_5 ) variable_5 = wcschr ( variable_0 , L ' \n ' ) if ( variable_5 ) variable_6 . func_1 ( variable_0 ) ; variable_6 . func_2 ( variable_0 ) ; variable_6 . func_3 ( variable_0 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; FILE * variable_2 ; if ( 100 - variable_1 > 1 ) variable_2 = fopen ( variable_3 , " r " ) ; if ( variable_2 != NULL ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) == NULL ) fclose ( variable_2 ) ;	-1
void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; size_t variable_1 = wcslen ( variable_0 ) ; if ( 100 - variable_1 > 1 ) if ( fgetws ( variable_0 + variable_1 , ( int ) ( 100 - variable_1 ) , variable_2 ) != NULL ) variable_1 = wcslen ( variable_0 ) ; if ( variable_1 > 0 && variable_0 [ variable_1 - 1 ] == L ' \n ' ) variable_3 . func_1 ( variable_3 . end ( ) , 1 , variable_0 ) ; variable_3 . func_2 ( variable_3 . end ( ) , 1 , variable_0 ) ; variable_3 . func_3 ( variable_3 . end ( ) , 1 , variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; size_t variable_1 = strlen ( variable_0 ) ; char * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) strncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 . func_2 ( variable_0 ) ; variable_4 . func_3 ( variable_0 ) ; variable_4 . func_4 ( variable_0 ) ;	-1
static void func_0 ( ) char * variable_0 ; variable_0 = ( char * ) malloc ( 100 * sizeof ( char ) ) ; variable_0 [ 0 ] = ' \0 ' ; strcpy ( variable_0 , variable_1 ) ; if ( func_1 ( ) ) static int func_2 ( ) return 0 ; size_t variable_2 ; for ( variable_2 = 0 ; variable_2 < strlen ( variable_0 ) ; variable_2 ++ ) if ( variable_0 [ variable_2 ] == variable_3 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_1 < int , wchar_t * > variable_2 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' WSADATA variable_3 ; int variable_4 ; struct sockaddr_in variable_5 ; size_t variable_6 = wcslen ( variable_0 ) ; if ( func_1 ( func_2 ( 2 , 2 ) , & variable_3 ) != variable_7 ) variable_8 = func_3 ( variable_9 , variable_10 , variable_11 ) ; if ( variable_8 == variable_12 ) memset ( & variable_5 , 0 , sizeof ( variable_5 ) ) ; variable_5 . variable_13 = variable_9 ; variable_5 . variable_14 . variable_15 = variable_16 ; variable_5 . variable_17 = func_4 ( variable_18 ) ; if ( bind ( variable_8 , ( struct sockaddr * ) & variable_5 , sizeof ( variable_5 ) ) == variable_19 ) if ( func_5 ( variable_8 , variable_20 ) == variable_19 ) variable_21 = func_6 ( variable_8 , NULL , NULL ) ; if ( variable_21 == variable_19 ) variable_4 = recv ( variable_21 , ( char * ) ( variable_0 + variable_6 ) , sizeof ( wchar_t ) * ( 100 - variable_6 - 1 ) , 0 ) ; if ( variable_4 == variable_19 || variable_4 == 0 ) variable_0 [ variable_6 + variable_4 / sizeof ( wchar_t ) ] = L ' \0 ' while ( 0 ) variable_2 [ 0 ] = variable_0 ; variable_2 [ 1 ] = variable_0 ; variable_2 [ 2 ] = variable_0 ; func_7 ( variable_2 ) ; void func_8 ( variable_1 < int , wchar_t * > variable_2 ) wchar_t * variable_0 = variable_2 [ 2 ] ; size_t variable_22 ; for ( variable_22 = 0 ; variable_22 < wcslen ( variable_0 ) ; variable_22 ++ ) if ( variable_0 [ variable_22 ] == variable_23 )	-1
static void func_0 ( ) wchar_t * variable_0 ; variable_0 = ( wchar_t * ) malloc ( 100 * sizeof ( wchar_t ) ) ; variable_0 [ 0 ] = L ' \0 ' size_t variable_1 = wcslen ( variable_0 ) ; wchar_t * variable_2 = func_1 ( variable_3 ) ; if ( variable_2 != NULL ) wcsncat ( variable_0 + variable_1 , variable_2 , 100 - variable_1 - 1 ) ; variable_4 . func_2 ( variable_0 ) ; variable_4 . func_3 ( variable_0 ) ; variable_4 . func_4 ( variable_0 ) ;	-1
